
1
  %retval = alloca i32, align 4
  %i = alloca i32, align 4
  %i8 = alloca i32, align 4
  %tmp = alloca i32, align 4
  %p = alloca i32, align 4
  %i37 = alloca i32, align 4
  %tmp42 = alloca i32, align 4
  %p49 = alloca i32, align 4
  %ref.tmp = alloca i32, align 4
  %ref.tmp67 = alloca i32, align 4
  %a = alloca i32, align 4
  %b = alloca i32, align 4
  %i103 = alloca i32, align 4
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  store i32 0, i32* %retval
  %call = call i32 (i8*, ...)* @scanf(i8* getelementptr inbounds ([5 x i8]* @.str, i32 0, i32 0), i32* @n, i32* @q)
  store i32 1, i32* %i, align 4
  br label %for.cond

2
  %0 = load i32* %i, align 4
  %1 = load i32* @n, align 4
  %cmp = icmp sle i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

3
  %2 = load i32* %i, align 4
  %idxprom = sext i32 %2 to i64
  %arrayidx = getelementptr inbounds [150005 x i32]* @a, i32 0, i64 %idxprom
  %call1 = call i32 (i8*, ...)* @scanf(i8* getelementptr inbounds ([3 x i8]* @.str3, i32 0, i32 0), i32* %arrayidx)
  %3 = load i32* %i, align 4
  %idxprom2 = sext i32 %3 to i64
  %arrayidx3 = getelementptr inbounds [150005 x i32]* @a, i32 0, i64 %idxprom2
  %call4 = call i32* @_ZSt3maxIiERKT_S2_S2_(i32* @mx, i32* %arrayidx3)
  %4 = load i32* %call4
  store i32 %4, i32* @mx, align 4
  %5 = load i32* %i, align 4
  %6 = load i32* %i, align 4
  %idxprom5 = sext i32 %6 to i64
  %arrayidx6 = getelementptr inbounds [150005 x i32]* @f, i32 0, i64 %idxprom5
  store i32 %5, i32* %arrayidx6, align 4
  %7 = load i32* %i, align 4
  %inc = add nsw i32 %7, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

4
  %8 = load i32* @mx, align 4
  %inc7 = add nsw i32 %8, 1
  store i32 %inc7, i32* @mx, align 4
  %9 = load i32* @mx, align 4
  call void @_Z5sievei(i32 %9)
  store i32 1, i32* %i8, align 4
  br label %for.cond9

5
  %10 = load i32* %i8, align 4
  %11 = load i32* @n, align 4
  %cmp10 = icmp sle i32 %10, %11
  br i1 %cmp10, label %for.body11, label %for.end35

6
  %12 = load i32* %i8, align 4
  %idxprom12 = sext i32 %12 to i64
  %arrayidx13 = getelementptr inbounds [150005 x i32]* @a, i32 0, i64 %idxprom12
  %13 = load i32* %arrayidx13, align 4
  store i32 %13, i32* %tmp, align 4
  br label %while.cond

7
  %14 = load i32* %tmp, align 4
  %cmp14 = icmp sgt i32 %14, 1
  br i1 %cmp14, label %while.body, label %while.end32

8
  %15 = load i32* %tmp, align 4
  %idxprom16 = sext i32 %15 to i64
  %arrayidx17 = getelementptr inbounds [1000005 x i32]* @mn, i32 0, i64 %idxprom16
  %16 = load i32* %arrayidx17, align 4
  store i32 %16, i32* %p, align 4
  br label %while.cond18

9
  %17 = load i32* %tmp, align 4
  %18 = load i32* %p, align 4
  %rem = srem i32 %17, %18
  %cmp19 = icmp eq i32 %rem, 0
  br i1 %cmp19, label %while.body20, label %while.end

10
  %19 = load i32* %p, align 4
  %20 = load i32* %tmp, align 4
  %div = sdiv i32 %20, %19
  store i32 %div, i32* %tmp, align 4
  br label %while.cond18

11
  %21 = load i32* %p, align 4
  %idxprom21 = sext i32 %21 to i64
  %arrayidx22 = getelementptr inbounds [1000005 x i32]* @lst, i32 0, i64 %idxprom21
  %22 = load i32* %arrayidx22, align 4
  %cmp23 = icmp eq i32 %22, 0
  br i1 %cmp23, label %if.then, label %if.else

12
  %23 = load i32* %i8, align 4
  %24 = load i32* %p, align 4
  %idxprom24 = sext i32 %24 to i64
  %arrayidx25 = getelementptr inbounds [1000005 x i32]* @lst, i32 0, i64 %idxprom24
  store i32 %23, i32* %arrayidx25, align 4
  br label %if.end

13
  %25 = load i32* %p, align 4
  %idxprom26 = sext i32 %25 to i64
  %arrayidx27 = getelementptr inbounds [1000005 x i32]* @lst, i32 0, i64 %idxprom26
  %26 = load i32* %arrayidx27, align 4
  %call28 = call i32 @_Z4findi(i32 %26)
  %27 = load i32* %i8, align 4
  %call29 = call i32 @_Z4findi(i32 %27)
  %idxprom30 = sext i32 %call29 to i64
  %arrayidx31 = getelementptr inbounds [150005 x i32]* @f, i32 0, i64 %idxprom30
  store i32 %call28, i32* %arrayidx31, align 4
  br label %if.end

14
  br label %while.cond

15
  %28 = load i32* %i8, align 4
  %inc34 = add nsw i32 %28, 1
  store i32 %inc34, i32* %i8, align 4
  br label %for.cond9

16
  store i32 1, i32* %i37, align 4
  br label %for.cond38

17
  %29 = load i32* %i37, align 4
  %30 = load i32* @n, align 4
  %cmp39 = icmp sle i32 %29, %30
  br i1 %cmp39, label %for.body40, label %for.end101

18
  %31 = load i32* %i37, align 4
  %idxprom43 = sext i32 %31 to i64
  %arrayidx44 = getelementptr inbounds [150005 x i32]* @a, i32 0, i64 %idxprom43
  %32 = load i32* %arrayidx44, align 4
  %add = add nsw i32 %32, 1
  store i32 %add, i32* %tmp42, align 4
  call void @_ZNSt6vectorIiSaIiEE5clearEv(%"class.std::vector"* @v) #2
  br label %while.cond45

19
  %33 = load i32* %tmp42, align 4
  %cmp46 = icmp sgt i32 %33, 1
  br i1 %cmp46, label %while.body47, label %while.end65

20
  %34 = load i32* %tmp42, align 4
  %idxprom50 = sext i32 %34 to i64
  %arrayidx51 = getelementptr inbounds [1000005 x i32]* @mn, i32 0, i64 %idxprom50
  %35 = load i32* %arrayidx51, align 4
  store i32 %35, i32* %p49, align 4
  br label %while.cond52

21
  %36 = load i32* %tmp42, align 4
  %37 = load i32* %p49, align 4
  %rem53 = srem i32 %36, %37
  %cmp54 = icmp eq i32 %rem53, 0
  br i1 %cmp54, label %while.body55, label %while.end57

22
  %38 = load i32* %p49, align 4
  %39 = load i32* %tmp42, align 4
  %div56 = sdiv i32 %39, %38
  store i32 %div56, i32* %tmp42, align 4
  br label %while.cond52

23
  %40 = load i32* %p49, align 4
  %idxprom58 = sext i32 %40 to i64
  %arrayidx59 = getelementptr inbounds [1000005 x i32]* @lst, i32 0, i64 %idxprom58
  %41 = load i32* %arrayidx59, align 4
  %tobool = icmp ne i32 %41, 0
  br i1 %tobool, label %if.then60, label %if.end64

24
  %42 = load i32* %p49, align 4
  %idxprom61 = sext i32 %42 to i64
  %arrayidx62 = getelementptr inbounds [1000005 x i32]* @lst, i32 0, i64 %idxprom61
  %43 = load i32* %arrayidx62, align 4
  %call63 = call i32 @_Z4findi(i32 %43)
  store i32 %call63, i32* %ref.tmp, align 4
  call void @_ZNSt6vectorIiSaIiEE9push_backEOi(%"class.std::vector"* @v, i32* %ref.tmp)
  br label %if.end64

25
  br label %while.cond45

26
  %44 = load i32* %i37, align 4
  %call66 = call i32 @_Z4findi(i32 %44)
  store i32 %call66, i32* %ref.tmp67, align 4
  call void @_ZNSt6vectorIiSaIiEE9push_backEOi(%"class.std::vector"* @v, i32* %ref.tmp67)
  store i32 0, i32* %a, align 4
  br label %for.cond69

27
  %45 = load i32* %a, align 4
  %conv = sext i32 %45 to i64
  %call70 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector"* @v) #2
  %cmp71 = icmp ult i64 %conv, %call70
  br i1 %cmp71, label %for.body72, label %for.end98

28
  store i32 0, i32* %b, align 4
  br label %for.cond74

29
  %46 = load i32* %b, align 4
  %conv75 = sext i32 %46 to i64
  %call76 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector"* @v) #2
  %cmp77 = icmp ult i64 %conv75, %call76
  br i1 %cmp77, label %for.body78, label %for.end95

30
  %47 = load i32* %a, align 4
  %conv79 = sext i32 %47 to i64
  %call80 = call i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector"* @v, i64 %conv79)
  %48 = load i32* %call80
  %49 = load i32* %b, align 4
  %conv81 = sext i32 %49 to i64
  %call82 = call i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector"* @v, i64 %conv81)
  %50 = load i32* %call82
  %cmp83 = icmp ne i32 %48, %50
  br i1 %cmp83, label %if.then84, label %if.end92

31
  %51 = load i32* %a, align 4
  %conv85 = sext i32 %51 to i64
  %call86 = call i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector"* @v, i64 %conv85)
  %52 = load i32* %call86
  %idxprom87 = sext i32 %52 to i64
  %arrayidx88 = getelementptr inbounds [1000005 x %"class.std::map"]* @mp, i32 0, i64 %idxprom87
  %53 = load i32* %b, align 4
  %conv89 = sext i32 %53 to i64
  %call90 = call i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector"* @v, i64 %conv89)
  %call91 = call i32* @_ZNSt3mapIiiSt4lessIiESaISt4pairIKiiEEEixERS3_(%"class.std::map"* %arrayidx88, i32* %call90)
  store i32 1, i32* %call91
  br label %if.end92

32
  %54 = load i32* %b, align 4
  %inc94 = add nsw i32 %54, 1
  store i32 %inc94, i32* %b, align 4
  br label %for.cond74

33
  %55 = load i32* %a, align 4
  %inc97 = add nsw i32 %55, 1
  store i32 %inc97, i32* %a, align 4
  br label %for.cond69

34
  %56 = load i32* %i37, align 4
  %inc100 = add nsw i32 %56, 1
  store i32 %inc100, i32* %i37, align 4
  br label %for.cond38

35
  store i32 1, i32* %i103, align 4
  br label %for.cond106

36
  %57 = load i32* %i103, align 4
  %58 = load i32* @q, align 4
  %cmp107 = icmp sle i32 %57, %58
  br i1 %cmp107, label %for.body108, label %for.end128

37
  %call109 = call i32 (i8*, ...)* @scanf(i8* getelementptr inbounds ([5 x i8]* @.str, i32 0, i32 0), i32* %x, i32* %y)
  %59 = load i32* %x, align 4
  %call110 = call i32 @_Z4findi(i32 %59)
  store i32 %call110, i32* %x, align 4
  %60 = load i32* %y, align 4
  %call111 = call i32 @_Z4findi(i32 %60)
  store i32 %call111, i32* %y, align 4
  %61 = load i32* %x, align 4
  %62 = load i32* %y, align 4
  %cmp112 = icmp eq i32 %61, %62
  br i1 %cmp112, label %cond.true, label %cond.false

38
  br label %cond.end123

39
  %63 = load i32* %x, align 4
  %idxprom113 = sext i32 %63 to i64
  %arrayidx114 = getelementptr inbounds [1000005 x %"class.std::map"]* @mp, i32 0, i64 %idxprom113
  %call115 = call i64 @_ZNKSt3mapIiiSt4lessIiESaISt4pairIKiiEEE5countERS3_(%"class.std::map"* %arrayidx114, i32* %y)
  %tobool116 = icmp ne i64 %call115, 0
  br i1 %tobool116, label %cond.true121, label %lor.lhs.false

40
  %64 = load i32* %y, align 4
  %idxprom117 = sext i32 %64 to i64
  %arrayidx118 = getelementptr inbounds [1000005 x %"class.std::map"]* @mp, i32 0, i64 %idxprom117
  %call119 = call i64 @_ZNKSt3mapIiiSt4lessIiESaISt4pairIKiiEEE5countERS3_(%"class.std::map"* %arrayidx118, i32* %x)
  %tobool120 = icmp ne i64 %call119, 0
  br i1 %tobool120, label %cond.true121, label %cond.false122

41
  br label %cond.end

42
  br label %cond.end

43
  %cond-lvalue = phi [2 x i8]* [ @.str5, %cond.true121 ], [ @.str6, %cond.false122 ]
  br label %cond.end123

44
  %cond-lvalue124 = phi [2 x i8]* [ @.str4, %cond.true ], [ %cond-lvalue, %cond.end ]
  %arraydecay = getelementptr inbounds [2 x i8]* %cond-lvalue124, i32 0, i32 0
  %call125 = call i32 @puts(i8* %arraydecay)
  %65 = load i32* %i103, align 4
  %inc127 = add nsw i32 %65, 1
  store i32 %inc127, i32* %i103, align 4
  br label %for.cond106

45
  ret i32 0
