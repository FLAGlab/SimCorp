
1
  %retval = alloca i32, align 4
  %n = alloca i32, align 4
  %q = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %x = alloca i32, align 4
  %m = alloca i32, align 4
  %tmp = alloca i32, align 4
  %coerce = alloca %"struct.std::pair", align 8
  %coerce120 = alloca %"struct.std::pair", align 8
  %coerce138 = alloca %"struct.std::pair", align 8
  %fi = alloca i32, align 4
  %fj = alloca i32, align 4
  store i32 0, i32* %retval
  %call = call i32 @_Z4readv()
  store i32 %call, i32* %n, align 4
  %call1 = call i32 @_Z4readv()
  store i32 %call1, i32* %q, align 4
  store i32 0, i32* %m, align 4
  store i32 1, i32* %i, align 4
  br label %for.cond

2
  %0 = load i32* %i, align 4
  %1 = load i32* %n, align 4
  %cmp = icmp sle i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

3
  %call2 = call i32 @_Z4readv()
  %2 = load i32* %i, align 4
  %idxprom = sext i32 %2 to i64
  %arrayidx = getelementptr inbounds [150005 x i32]* @a, i32 0, i64 %idxprom
  store i32 %call2, i32* %arrayidx, align 4
  %3 = load i32* %i, align 4
  %idxprom3 = sext i32 %3 to i64
  %arrayidx4 = getelementptr inbounds [150005 x i32]* @a, i32 0, i64 %idxprom3
  %call5 = call i32* @_ZSt3maxIiERKT_S2_S2_(i32* %m, i32* %arrayidx4)
  %4 = load i32* %call5
  store i32 %4, i32* %m, align 4
  %5 = load i32* %i, align 4
  %inc = add nsw i32 %5, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

4
  store i32 1, i32* %i, align 4
  br label %for.cond6

5
  %6 = load i32* %i, align 4
  %7 = load i32* %m, align 4
  %cmp7 = icmp sle i32 %6, %7
  br i1 %cmp7, label %for.body8, label %for.end13

6
  %8 = load i32* %i, align 4
  %9 = load i32* %i, align 4
  %idxprom9 = sext i32 %9 to i64
  %arrayidx10 = getelementptr inbounds [1000005 x i32]* @fa, i32 0, i64 %idxprom9
  store i32 %8, i32* %arrayidx10, align 4
  %10 = load i32* %i, align 4
  %inc12 = add nsw i32 %10, 1
  store i32 %inc12, i32* %i, align 4
  br label %for.cond6

7
  store i32 1, i32* %i, align 4
  br label %for.cond14

8
  %11 = load i32* %i, align 4
  %12 = load i32* %n, align 4
  %cmp15 = icmp sle i32 %11, %12
  br i1 %cmp15, label %for.body16, label %for.end61

9
  %13 = load i32* %i, align 4
  %idxprom17 = sext i32 %13 to i64
  %arrayidx18 = getelementptr inbounds [150005 x i32]* @a, i32 0, i64 %idxprom17
  %14 = load i32* %arrayidx18, align 4
  store i32 %14, i32* %x, align 4
  store i32 2, i32* %j, align 4
  br label %for.cond19

10
  %15 = load i32* %j, align 4
  %16 = load i32* %j, align 4
  %mul = mul nsw i32 %15, %16
  %17 = load i32* %x, align 4
  %cmp20 = icmp sle i32 %mul, %17
  br i1 %cmp20, label %for.body21, label %for.end30

11
  %18 = load i32* %x, align 4
  %19 = load i32* %j, align 4
  %rem = srem i32 %18, %19
  %cmp22 = icmp eq i32 %rem, 0
  br i1 %cmp22, label %if.then, label %if.end

12
  %20 = load i32* %j, align 4
  %21 = load i32* @cnt, align 4
  %inc23 = add nsw i32 %21, 1
  store i32 %inc23, i32* @cnt, align 4
  %idxprom24 = sext i32 %inc23 to i64
  %arrayidx25 = getelementptr inbounds [10 x i32]* @v, i32 0, i64 %idxprom24
  store i32 %20, i32* %arrayidx25, align 4
  br label %while.cond

13
  %22 = load i32* %x, align 4
  %23 = load i32* %j, align 4
  %rem26 = srem i32 %22, %23
  %cmp27 = icmp eq i32 %rem26, 0
  br i1 %cmp27, label %while.body, label %while.end

14
  %24 = load i32* %j, align 4
  %25 = load i32* %x, align 4
  %div = sdiv i32 %25, %24
  store i32 %div, i32* %x, align 4
  br label %while.cond

15
  br label %if.end

16
  %26 = load i32* %j, align 4
  %inc29 = add nsw i32 %26, 1
  store i32 %inc29, i32* %j, align 4
  br label %for.cond19

17
  %27 = load i32* %x, align 4
  %cmp31 = icmp sgt i32 %27, 1
  br i1 %cmp31, label %if.then32, label %if.end36

18
  %28 = load i32* %x, align 4
  %29 = load i32* @cnt, align 4
  %inc33 = add nsw i32 %29, 1
  store i32 %inc33, i32* @cnt, align 4
  %idxprom34 = sext i32 %inc33 to i64
  %arrayidx35 = getelementptr inbounds [10 x i32]* @v, i32 0, i64 %idxprom34
  store i32 %28, i32* %arrayidx35, align 4
  br label %if.end36

19
  %30 = load i32* getelementptr inbounds ([10 x i32]* @v, i32 0, i64 1), align 4
  %31 = load i32* %i, align 4
  %idxprom37 = sext i32 %31 to i64
  %arrayidx38 = getelementptr inbounds [150005 x i32]* @fir, i32 0, i64 %idxprom37
  store i32 %30, i32* %arrayidx38, align 4
  store i32 2, i32* %j, align 4
  br label %for.cond39

20
  %32 = load i32* %j, align 4
  %33 = load i32* @cnt, align 4
  %cmp40 = icmp sle i32 %32, %33
  br i1 %cmp40, label %for.body41, label %for.end58

21
  store i32 1, i32* %x, align 4
  br label %for.cond42

22
  %34 = load i32* %x, align 4
  %35 = load i32* %j, align 4
  %cmp43 = icmp slt i32 %34, %35
  br i1 %cmp43, label %for.body44, label %for.end55

23
  %36 = load i32* %j, align 4
  %idxprom45 = sext i32 %36 to i64
  %arrayidx46 = getelementptr inbounds [10 x i32]* @v, i32 0, i64 %idxprom45
  %37 = load i32* %arrayidx46, align 4
  %call47 = call i32 @_Z3geti(i32 %37)
  %38 = load i32* %x, align 4
  %idxprom48 = sext i32 %38 to i64
  %arrayidx49 = getelementptr inbounds [10 x i32]* @v, i32 0, i64 %idxprom48
  %39 = load i32* %arrayidx49, align 4
  %call50 = call i32 @_Z3geti(i32 %39)
  %idxprom51 = sext i32 %call50 to i64
  %arrayidx52 = getelementptr inbounds [1000005 x i32]* @fa, i32 0, i64 %idxprom51
  store i32 %call47, i32* %arrayidx52, align 4
  %40 = load i32* %x, align 4
  %inc54 = add nsw i32 %40, 1
  store i32 %inc54, i32* %x, align 4
  br label %for.cond42

24
  %41 = load i32* %j, align 4
  %inc57 = add nsw i32 %41, 1
  store i32 %inc57, i32* %j, align 4
  br label %for.cond39

25
  store i32 0, i32* @cnt, align 4
  %42 = load i32* %i, align 4
  %inc60 = add nsw i32 %42, 1
  store i32 %inc60, i32* %i, align 4
  br label %for.cond14

26
  store i32 1, i32* %i, align 4
  br label %for.cond62

27
  %43 = load i32* %i, align 4
  %44 = load i32* %n, align 4
  %cmp63 = icmp sle i32 %43, %44
  br i1 %cmp63, label %for.body64, label %for.end147

28
  %45 = load i32* %i, align 4
  %idxprom65 = sext i32 %45 to i64
  %arrayidx66 = getelementptr inbounds [150005 x i32]* @a, i32 0, i64 %idxprom65
  %46 = load i32* %arrayidx66, align 4
  %add = add nsw i32 %46, 1
  store i32 %add, i32* %x, align 4
  store i32 2, i32* %j, align 4
  br label %for.cond67

29
  %47 = load i32* %j, align 4
  %48 = load i32* %j, align 4
  %mul68 = mul nsw i32 %47, %48
  %49 = load i32* %x, align 4
  %cmp69 = icmp sle i32 %mul68, %49
  br i1 %cmp69, label %for.body70, label %for.end87

30
  %50 = load i32* %x, align 4
  %51 = load i32* %j, align 4
  %rem71 = srem i32 %50, %51
  %cmp72 = icmp eq i32 %rem71, 0
  br i1 %cmp72, label %if.then73, label %if.end84

31
  %52 = load i32* %j, align 4
  %call74 = call i32 @_Z3geti(i32 %52)
  %53 = load i32* @cnt, align 4
  %inc75 = add nsw i32 %53, 1
  store i32 %inc75, i32* @cnt, align 4
  %idxprom76 = sext i32 %inc75 to i64
  %arrayidx77 = getelementptr inbounds [10 x i32]* @v, i32 0, i64 %idxprom76
  store i32 %call74, i32* %arrayidx77, align 4
  br label %while.cond78

32
  %54 = load i32* %x, align 4
  %55 = load i32* %j, align 4
  %rem79 = srem i32 %54, %55
  %cmp80 = icmp eq i32 %rem79, 0
  br i1 %cmp80, label %while.body81, label %while.end83

33
  %56 = load i32* %j, align 4
  %57 = load i32* %x, align 4
  %div82 = sdiv i32 %57, %56
  store i32 %div82, i32* %x, align 4
  br label %while.cond78

34
  br label %if.end84

35
  %58 = load i32* %j, align 4
  %inc86 = add nsw i32 %58, 1
  store i32 %inc86, i32* %j, align 4
  br label %for.cond67

36
  %59 = load i32* %x, align 4
  %cmp88 = icmp sgt i32 %59, 1
  br i1 %cmp88, label %if.then89, label %if.end94

37
  %60 = load i32* %x, align 4
  %call90 = call i32 @_Z3geti(i32 %60)
  %61 = load i32* @cnt, align 4
  %inc91 = add nsw i32 %61, 1
  store i32 %inc91, i32* @cnt, align 4
  %idxprom92 = sext i32 %inc91 to i64
  %arrayidx93 = getelementptr inbounds [10 x i32]* @v, i32 0, i64 %idxprom92
  store i32 %call90, i32* %arrayidx93, align 4
  br label %if.end94

38
  %62 = load i32* @cnt, align 4
  %idx.ext = sext i32 %62 to i64
  %add.ptr = getelementptr inbounds i32* getelementptr inbounds ([10 x i32]* @v, i32 0, i32 0), i64 %idx.ext
  %add.ptr95 = getelementptr inbounds i32* %add.ptr, i64 1
  call void @_ZSt4sortIPiEvT_S1_(i32* getelementptr inbounds ([10 x i32]* @v, i32 0, i64 1), i32* %add.ptr95)
  %63 = load i32* @cnt, align 4
  %idx.ext96 = sext i32 %63 to i64
  %add.ptr97 = getelementptr inbounds i32* getelementptr inbounds ([10 x i32]* @v, i32 0, i32 0), i64 %idx.ext96
  %add.ptr98 = getelementptr inbounds i32* %add.ptr97, i64 1
  %call99 = call i32* @_ZSt6uniqueIPiET_S1_S1_(i32* getelementptr inbounds ([10 x i32]* @v, i32 0, i64 1), i32* %add.ptr98)
  %sub.ptr.lhs.cast = ptrtoint i32* %call99 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, ptrtoint ([10 x i32]* @v to i64)
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 4
  %sub = sub nsw i64 %sub.ptr.div, 1
  %conv = trunc i64 %sub to i32
  store i32 %conv, i32* @cnt, align 4
  %64 = load i32* %i, align 4
  %idxprom100 = sext i32 %64 to i64
  %arrayidx101 = getelementptr inbounds [150005 x i32]* @fir, i32 0, i64 %idxprom100
  %65 = load i32* %arrayidx101, align 4
  %call102 = call i32 @_Z3geti(i32 %65)
  store i32 %call102, i32* %tmp, align 4
  store i32 1, i32* %j, align 4
  br label %for.cond103

39
  %66 = load i32* %j, align 4
  %67 = load i32* @cnt, align 4
  %cmp104 = icmp sle i32 %66, %67
  br i1 %cmp104, label %for.body105, label %for.end124

40
  %68 = load i32* %j, align 4
  %idxprom106 = sext i32 %68 to i64
  %arrayidx107 = getelementptr inbounds [10 x i32]* @v, i32 0, i64 %idxprom106
  %69 = load i32* %arrayidx107, align 4
  %70 = load i32* %tmp, align 4
  %cmp108 = icmp slt i32 %69, %70
  br i1 %cmp108, label %if.then109, label %if.else

41
  %71 = load i32* %j, align 4
  %idxprom110 = sext i32 %71 to i64
  %arrayidx111 = getelementptr inbounds [10 x i32]* @v, i32 0, i64 %idxprom110
  %72 = load i32* %arrayidx111, align 4
  %idxprom112 = sext i32 %72 to i64
  %arrayidx113 = getelementptr inbounds [1000005 x %"class.std::set"]* @tg, i32 0, i64 %idxprom112
  %call114 = call { %"struct.std::_Rb_tree_node_base"*, i8 } @_ZNSt3setIiSt4lessIiESaIiEE6insertERKi(%"class.std::set"* %arrayidx113, i32* %tmp)
  %73 = bitcast %"struct.std::pair"* %coerce to { %"struct.std::_Rb_tree_node_base"*, i8 }*
  %74 = getelementptr { %"struct.std::_Rb_tree_node_base"*, i8 }* %73, i32 0, i32 0
  %75 = extractvalue { %"struct.std::_Rb_tree_node_base"*, i8 } %call114, 0
  store %"struct.std::_Rb_tree_node_base"* %75, %"struct.std::_Rb_tree_node_base"** %74, align 1
  %76 = getelementptr { %"struct.std::_Rb_tree_node_base"*, i8 }* %73, i32 0, i32 1
  %77 = extractvalue { %"struct.std::_Rb_tree_node_base"*, i8 } %call114, 1
  store i8 %77, i8* %76, align 1
  br label %if.end121

42
  %78 = load i32* %tmp, align 4
  %idxprom115 = sext i32 %78 to i64
  %arrayidx116 = getelementptr inbounds [1000005 x %"class.std::set"]* @tg, i32 0, i64 %idxprom115
  %79 = load i32* %j, align 4
  %idxprom117 = sext i32 %79 to i64
  %arrayidx118 = getelementptr inbounds [10 x i32]* @v, i32 0, i64 %idxprom117
  %call119 = call { %"struct.std::_Rb_tree_node_base"*, i8 } @_ZNSt3setIiSt4lessIiESaIiEE6insertERKi(%"class.std::set"* %arrayidx116, i32* %arrayidx118)
  %80 = bitcast %"struct.std::pair"* %coerce120 to { %"struct.std::_Rb_tree_node_base"*, i8 }*
  %81 = getelementptr { %"struct.std::_Rb_tree_node_base"*, i8 }* %80, i32 0, i32 0
  %82 = extractvalue { %"struct.std::_Rb_tree_node_base"*, i8 } %call119, 0
  store %"struct.std::_Rb_tree_node_base"* %82, %"struct.std::_Rb_tree_node_base"** %81, align 1
  %83 = getelementptr { %"struct.std::_Rb_tree_node_base"*, i8 }* %80, i32 0, i32 1
  %84 = extractvalue { %"struct.std::_Rb_tree_node_base"*, i8 } %call119, 1
  store i8 %84, i8* %83, align 1
  br label %if.end121

43
  %85 = load i32* %j, align 4
  %inc123 = add nsw i32 %85, 1
  store i32 %inc123, i32* %j, align 4
  br label %for.cond103

44
  store i32 2, i32* %j, align 4
  br label %for.cond125

45
  %86 = load i32* %j, align 4
  %87 = load i32* @cnt, align 4
  %cmp126 = icmp sle i32 %86, %87
  br i1 %cmp126, label %for.body127, label %for.end144

46
  store i32 1, i32* %x, align 4
  br label %for.cond128

47
  %88 = load i32* %x, align 4
  %89 = load i32* %j, align 4
  %cmp129 = icmp slt i32 %88, %89
  br i1 %cmp129, label %for.body130, label %for.end141

48
  %90 = load i32* %x, align 4
  %idxprom131 = sext i32 %90 to i64
  %arrayidx132 = getelementptr inbounds [10 x i32]* @v, i32 0, i64 %idxprom131
  %91 = load i32* %arrayidx132, align 4
  %idxprom133 = sext i32 %91 to i64
  %arrayidx134 = getelementptr inbounds [1000005 x %"class.std::set"]* @tg, i32 0, i64 %idxprom133
  %92 = load i32* %j, align 4
  %idxprom135 = sext i32 %92 to i64
  %arrayidx136 = getelementptr inbounds [10 x i32]* @v, i32 0, i64 %idxprom135
  %call137 = call { %"struct.std::_Rb_tree_node_base"*, i8 } @_ZNSt3setIiSt4lessIiESaIiEE6insertERKi(%"class.std::set"* %arrayidx134, i32* %arrayidx136)
  %93 = bitcast %"struct.std::pair"* %coerce138 to { %"struct.std::_Rb_tree_node_base"*, i8 }*
  %94 = getelementptr { %"struct.std::_Rb_tree_node_base"*, i8 }* %93, i32 0, i32 0
  %95 = extractvalue { %"struct.std::_Rb_tree_node_base"*, i8 } %call137, 0
  store %"struct.std::_Rb_tree_node_base"* %95, %"struct.std::_Rb_tree_node_base"** %94, align 1
  %96 = getelementptr { %"struct.std::_Rb_tree_node_base"*, i8 }* %93, i32 0, i32 1
  %97 = extractvalue { %"struct.std::_Rb_tree_node_base"*, i8 } %call137, 1
  store i8 %97, i8* %96, align 1
  %98 = load i32* %x, align 4
  %inc140 = add nsw i32 %98, 1
  store i32 %inc140, i32* %x, align 4
  br label %for.cond128

49
  %99 = load i32* %j, align 4
  %inc143 = add nsw i32 %99, 1
  store i32 %inc143, i32* %j, align 4
  br label %for.cond125

50
  store i32 0, i32* @cnt, align 4
  %100 = load i32* %i, align 4
  %inc146 = add nsw i32 %100, 1
  store i32 %inc146, i32* %i, align 4
  br label %for.cond62

51
  br label %while.cond148

52
  %101 = load i32* %q, align 4
  %dec = add nsw i32 %101, -1
  store i32 %dec, i32* %q, align 4
  %tobool = icmp ne i32 %101, 0
  br i1 %tobool, label %while.body149, label %while.end177

53
  %call150 = call i32 @_Z4readv()
  store i32 %call150, i32* %i, align 4
  %call151 = call i32 @_Z4readv()
  store i32 %call151, i32* %j, align 4
  %102 = load i32* %i, align 4
  %idxprom153 = sext i32 %102 to i64
  %arrayidx154 = getelementptr inbounds [150005 x i32]* @fir, i32 0, i64 %idxprom153
  %103 = load i32* %arrayidx154, align 4
  %call155 = call i32 @_Z3geti(i32 %103)
  store i32 %call155, i32* %fi, align 4
  %104 = load i32* %j, align 4
  %idxprom157 = sext i32 %104 to i64
  %arrayidx158 = getelementptr inbounds [150005 x i32]* @fir, i32 0, i64 %idxprom157
  %105 = load i32* %arrayidx158, align 4
  %call159 = call i32 @_Z3geti(i32 %105)
  store i32 %call159, i32* %fj, align 4
  %106 = load i32* %fi, align 4
  %107 = load i32* %fj, align 4
  %cmp160 = icmp eq i32 %106, %107
  br i1 %cmp160, label %if.then161, label %if.else163

54
  %call162 = call i32 @puts(i8* getelementptr inbounds ([2 x i8]* @.str, i32 0, i32 0))
  br label %if.end176

55
  %108 = load i32* %fi, align 4
  %109 = load i32* %fj, align 4
  %cmp164 = icmp sgt i32 %108, %109
  br i1 %cmp164, label %if.then165, label %if.end166

56
  call void @_ZSt4swapIiEvRT_S1_(i32* %fi, i32* %fj) #2
  br label %if.end166

57
  %110 = load i32* %fi, align 4
  %idxprom167 = sext i32 %110 to i64
  %arrayidx168 = getelementptr inbounds [1000005 x %"class.std::set"]* @tg, i32 0, i64 %idxprom167
  %call169 = call i64 @_ZNKSt3setIiSt4lessIiESaIiEE5countERKi(%"class.std::set"* %arrayidx168, i32* %fj)
  %tobool170 = icmp ne i64 %call169, 0
  br i1 %tobool170, label %if.then171, label %if.else173

58
  %call172 = call i32 @puts(i8* getelementptr inbounds ([2 x i8]* @.str2, i32 0, i32 0))
  br label %if.end175

59
  %call174 = call i32 @puts(i8* getelementptr inbounds ([2 x i8]* @.str3, i32 0, i32 0))
  br label %if.end175

60
  br label %if.end176

61
  br label %while.cond148

62
  ret i32 0
