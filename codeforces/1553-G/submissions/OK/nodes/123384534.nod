
1
  %retval = alloca i32, align 4
  %i = alloca i32, align 4
  %i5 = alloca i32, align 4
  %p = alloca %"class.std::vector", align 8
  %j = alloca i32, align 4
  %exn.slot = alloca i8*
  %ehselector.slot = alloca i32
  %i26 = alloca i32, align 4
  %p30 = alloca %"class.std::vector", align 8
  %p2 = alloca %"class.std::vector", align 8
  %j42 = alloca i32, align 4
  %k = alloca i32, align 4
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %k72 = alloca i32, align 4
  %x79 = alloca i32, align 4
  %y85 = alloca i32, align 4
  %x104 = alloca i32, align 4
  %y108 = alloca i32, align 4
  store i32 0, i32* %retval
  %call = call i32 @_Z6getintv()
  store i32 %call, i32* @n, align 4
  %call1 = call i32 @_Z6getintv()
  store i32 %call1, i32* @q, align 4
  store i32 1, i32* %i, align 4
  br label %for.cond

2
  %0 = load i32* %i, align 4
  %1 = load i32* @n, align 4
  %cmp = icmp sle i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

3
  %call2 = call i32 @_Z6getintv()
  %2 = load i32* %i, align 4
  %idxprom = sext i32 %2 to i64
  %arrayidx = getelementptr inbounds [150005 x i32]* @a, i32 0, i64 %idxprom
  store i32 %call2, i32* %arrayidx, align 4
  %call3 = call i32* @_ZSt3maxIiERKT_S2_S2_(i32* @mx, i32* %arrayidx)
  %3 = load i32* %call3
  store i32 %3, i32* @mx, align 4
  %4 = load i32* %i, align 4
  %inc = add nsw i32 %4, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

4
  %5 = load i32* @mx, align 4
  %inc4 = add nsw i32 %5, 1
  store i32 %inc4, i32* @mx, align 4
  call void @_Z3prev()
  store i32 1, i32* %i5, align 4
  br label %for.cond6

5
  %6 = load i32* %i5, align 4
  %7 = load i32* @n, align 4
  %cmp7 = icmp sle i32 %6, %7
  br i1 %cmp7, label %for.body8, label %for.end25

6
  %8 = load i32* %i5, align 4
  %idxprom9 = sext i32 %8 to i64
  %arrayidx10 = getelementptr inbounds [150005 x i32]* @a, i32 0, i64 %idxprom9
  %9 = load i32* %arrayidx10, align 4
  %idxprom11 = sext i32 %9 to i64
  %arrayidx12 = getelementptr inbounds [2000000 x %"class.std::vector"]* @vt, i32 0, i64 %idxprom11
  call void @_ZNSt6vectorIiSaIiEEC1ERKS1_(%"class.std::vector"* %p, %"class.std::vector"* %arrayidx12)
  store i32 0, i32* %j, align 4
  br label %for.cond13

7
  %10 = load i32* %j, align 4
  %conv = sext i32 %10 to i64
  %call14 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector"* %p) #2
  %sub = sub i64 %call14, 1
  %cmp15 = icmp ule i64 %conv, %sub
  br i1 %cmp15, label %for.body16, label %for.end22

8
  %11 = load i32* %j, align 4
  %conv17 = sext i32 %11 to i64
  %call18 = invoke i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector"* %p, i64 %conv17)
          to label %invoke.cont unwind label %lpad

9
  %12 = load i32* %call18
  %13 = load i32* @mx, align 4
  %14 = load i32* %i5, align 4
  %add = add nsw i32 %13, %14
  invoke void @_Z5mergeii(i32 %12, i32 %add)
          to label %invoke.cont19 unwind label %lpad

10
  %15 = load i32* %j, align 4
  %inc21 = add nsw i32 %15, 1
  store i32 %inc21, i32* %j, align 4
  br label %for.cond13

11
  %16 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %17 = extractvalue { i8*, i32 } %16, 0
  store i8* %17, i8** %exn.slot
  %18 = extractvalue { i8*, i32 } %16, 1
  store i32 %18, i32* %ehselector.slot
  call void @_ZNSt6vectorIiSaIiEED1Ev(%"class.std::vector"* %p) #2
  br label %eh.resume

12
  call void @_ZNSt6vectorIiSaIiEED1Ev(%"class.std::vector"* %p) #2
  %19 = load i32* %i5, align 4
  %inc24 = add nsw i32 %19, 1
  store i32 %inc24, i32* %i5, align 4
  br label %for.cond6

13
  store i32 1, i32* %i26, align 4
  br label %for.cond27

14
  %20 = load i32* %i26, align 4
  %21 = load i32* @n, align 4
  %cmp28 = icmp sle i32 %20, %21
  br i1 %cmp28, label %for.body29, label %for.end103

15
  %22 = load i32* %i26, align 4
  %idxprom31 = sext i32 %22 to i64
  %arrayidx32 = getelementptr inbounds [150005 x i32]* @a, i32 0, i64 %idxprom31
  %23 = load i32* %arrayidx32, align 4
  %add33 = add nsw i32 %23, 1
  %idxprom34 = sext i32 %add33 to i64
  %arrayidx35 = getelementptr inbounds [2000000 x %"class.std::vector"]* @vt, i32 0, i64 %idxprom34
  call void @_ZNSt6vectorIiSaIiEEC1ERKS1_(%"class.std::vector"* %p30, %"class.std::vector"* %arrayidx35)
  %24 = load i32* %i26, align 4
  %idxprom36 = sext i32 %24 to i64
  %arrayidx37 = getelementptr inbounds [150005 x i32]* @a, i32 0, i64 %idxprom36
  %25 = load i32* %arrayidx37, align 4
  %idxprom38 = sext i32 %25 to i64
  %arrayidx39 = getelementptr inbounds [2000000 x %"class.std::vector"]* @vt, i32 0, i64 %idxprom38
  invoke void @_ZNSt6vectorIiSaIiEEC1ERKS1_(%"class.std::vector"* %p2, %"class.std::vector"* %arrayidx39)
          to label %invoke.cont41 unwind label %lpad40

16
  store i32 0, i32* %j42, align 4
  br label %for.cond43

17
  %26 = load i32* %j42, align 4
  %conv44 = sext i32 %26 to i64
  %call45 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector"* %p30) #2
  %sub46 = sub i64 %call45, 1
  %cmp47 = icmp ule i64 %conv44, %sub46
  br i1 %cmp47, label %for.body48, label %for.end100

18
  %27 = load i32* %j42, align 4
  %add49 = add nsw i32 %27, 1
  store i32 %add49, i32* %k, align 4
  br label %for.cond50

19
  %28 = load i32* %k, align 4
  %conv51 = sext i32 %28 to i64
  %call52 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector"* %p30) #2
  %sub53 = sub i64 %call52, 1
  %cmp54 = icmp ule i64 %conv51, %sub53
  br i1 %cmp54, label %for.body55, label %for.end71

20
  %29 = load i32* %j42, align 4
  %conv56 = sext i32 %29 to i64
  %call59 = invoke i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector"* %p30, i64 %conv56)
          to label %invoke.cont58 unwind label %lpad57

21
  %30 = load i32* %call59
  %call61 = invoke i32 @_Z5getfai(i32 %30)
          to label %invoke.cont60 unwind label %lpad57

22
  store i32 %call61, i32* %x, align 4
  %31 = load i32* %k, align 4
  %conv62 = sext i32 %31 to i64
  %call64 = invoke i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector"* %p30, i64 %conv62)
          to label %invoke.cont63 unwind label %lpad57

23
  %32 = load i32* %call64
  %call66 = invoke i32 @_Z5getfai(i32 %32)
          to label %invoke.cont65 unwind label %lpad57

24
  store i32 %call66, i32* %y, align 4
  %33 = load i32* %x, align 4
  %34 = load i32* %y, align 4
  %cmp67 = icmp ne i32 %33, %34
  br i1 %cmp67, label %if.then, label %if.end

25
  %35 = load i32* %x, align 4
  %36 = load i32* %y, align 4
  invoke void @_Z3insii(i32 %35, i32 %36)
          to label %invoke.cont68 unwind label %lpad57

26
  br label %if.end

27
  %37 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %38 = extractvalue { i8*, i32 } %37, 0
  store i8* %38, i8** %exn.slot
  %39 = extractvalue { i8*, i32 } %37, 1
  store i32 %39, i32* %ehselector.slot
  br label %ehcleanup

28
  %40 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %41 = extractvalue { i8*, i32 } %40, 0
  store i8* %41, i8** %exn.slot
  %42 = extractvalue { i8*, i32 } %40, 1
  store i32 %42, i32* %ehselector.slot
  call void @_ZNSt6vectorIiSaIiEED1Ev(%"class.std::vector"* %p2) #2
  br label %ehcleanup

29
  %43 = load i32* %k, align 4
  %inc70 = add nsw i32 %43, 1
  store i32 %inc70, i32* %k, align 4
  br label %for.cond50

30
  store i32 0, i32* %k72, align 4
  br label %for.cond73

31
  %44 = load i32* %k72, align 4
  %conv74 = sext i32 %44 to i64
  %call75 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector"* %p2) #2
  %sub76 = sub i64 %call75, 1
  %cmp77 = icmp ule i64 %conv74, %sub76
  br i1 %cmp77, label %for.body78, label %for.end97

32
  %45 = load i32* %j42, align 4
  %conv80 = sext i32 %45 to i64
  %call82 = invoke i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector"* %p30, i64 %conv80)
          to label %invoke.cont81 unwind label %lpad57

33
  %46 = load i32* %call82
  %call84 = invoke i32 @_Z5getfai(i32 %46)
          to label %invoke.cont83 unwind label %lpad57

34
  store i32 %call84, i32* %x79, align 4
  %47 = load i32* %k72, align 4
  %conv86 = sext i32 %47 to i64
  %call88 = invoke i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector"* %p2, i64 %conv86)
          to label %invoke.cont87 unwind label %lpad57

35
  %48 = load i32* %call88
  %call90 = invoke i32 @_Z5getfai(i32 %48)
          to label %invoke.cont89 unwind label %lpad57

36
  store i32 %call90, i32* %y85, align 4
  %49 = load i32* %x79, align 4
  %50 = load i32* %y85, align 4
  %cmp91 = icmp ne i32 %49, %50
  br i1 %cmp91, label %if.then92, label %if.end94

37
  %51 = load i32* %x79, align 4
  %52 = load i32* %y85, align 4
  invoke void @_Z3insii(i32 %51, i32 %52)
          to label %invoke.cont93 unwind label %lpad57

38
  br label %if.end94

39
  %53 = load i32* %k72, align 4
  %inc96 = add nsw i32 %53, 1
  store i32 %inc96, i32* %k72, align 4
  br label %for.cond73

40
  %54 = load i32* %j42, align 4
  %inc99 = add nsw i32 %54, 1
  store i32 %inc99, i32* %j42, align 4
  br label %for.cond43

41
  call void @_ZNSt6vectorIiSaIiEED1Ev(%"class.std::vector"* %p2) #2
  call void @_ZNSt6vectorIiSaIiEED1Ev(%"class.std::vector"* %p30) #2
  %55 = load i32* %i26, align 4
  %inc102 = add nsw i32 %55, 1
  store i32 %inc102, i32* %i26, align 4
  br label %for.cond27

42
  call void @_ZNSt6vectorIiSaIiEED1Ev(%"class.std::vector"* %p30) #2
  br label %eh.resume

43
  br label %while.cond

44
  %56 = load i32* @q, align 4
  %dec = add nsw i32 %56, -1
  store i32 %dec, i32* @q, align 4
  %tobool = icmp ne i32 %56, 0
  br i1 %tobool, label %while.body, label %while.end

45
  %57 = load i32* @mx, align 4
  %call105 = call i32 @_Z6getintv()
  %add106 = add nsw i32 %57, %call105
  %call107 = call i32 @_Z5getfai(i32 %add106)
  store i32 %call107, i32* %x104, align 4
  %58 = load i32* @mx, align 4
  %call109 = call i32 @_Z6getintv()
  %add110 = add nsw i32 %58, %call109
  %call111 = call i32 @_Z5getfai(i32 %add110)
  store i32 %call111, i32* %y108, align 4
  %59 = load i32* %x104, align 4
  %60 = load i32* %y108, align 4
  %cmp112 = icmp eq i32 %59, %60
  br i1 %cmp112, label %if.then113, label %if.else

46
  %call114 = call i32 @puts(i8* getelementptr inbounds ([2 x i8]* @.str, i32 0, i32 0))
  br label %if.end124

47
  %61 = load i32* %x104, align 4
  %idxprom115 = sext i32 %61 to i64
  %arrayidx116 = getelementptr inbounds [2000000 x %"class.std::map"]* @mp, i32 0, i64 %idxprom115
  %call117 = call i8* @_ZNSt3mapIibSt4lessIiESaISt4pairIKibEEEixERS3_(%"class.std::map"* %arrayidx116, i32* %y108)
  %62 = load i8* %call117
  %tobool118 = trunc i8 %62 to i1
  br i1 %tobool118, label %if.then119, label %if.else121

48
  %call120 = call i32 @puts(i8* getelementptr inbounds ([2 x i8]* @.str4, i32 0, i32 0))
  br label %if.end123

49
  %call122 = call i32 @puts(i8* getelementptr inbounds ([2 x i8]* @.str5, i32 0, i32 0))
  br label %if.end123

50
  br label %if.end124

51
  br label %while.cond

52
  ret i32 0

53
  %exn = load i8** %exn.slot
  %sel = load i32* %ehselector.slot
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val125 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val125
