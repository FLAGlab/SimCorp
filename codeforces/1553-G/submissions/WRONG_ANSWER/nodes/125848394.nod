
1
  %retval = alloca i32, align 4
  %i = alloca i32, align 4
  %i9 = alloca i32, align 4
  %i18 = alloca i32, align 4
  %j = alloca i32, align 4
  %f1 = alloca i32, align 4
  %f2 = alloca i32, align 4
  %i46 = alloca i32, align 4
  %i64 = alloca i32, align 4
  %sum = alloca i32, align 4
  %j65 = alloca i32, align 4
  %x = alloca i32, align 4
  %k = alloca i32, align 4
  %l = alloca i32, align 4
  %ref.tmp = alloca %"struct.std::pair.0", align 4
  %coerce = alloca %"struct.std::pair", align 8
  %i115 = alloca i32, align 4
  %ref.tmp132 = alloca %"struct.std::pair.0", align 4
  store i32 0, i32* %retval
  %call = call i32 (i8*, ...)* @scanf(i8* getelementptr inbounds ([5 x i8]* @.str, i32 0, i32 0), i32* @n, i32* @q)
  store i32 1, i32* %i, align 4
  br label %for.cond

2
  %0 = load i32* %i, align 4
  %1 = load i32* @n, align 4
  %cmp = icmp sle i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

3
  %2 = load i32* %i, align 4
  %idxprom = sext i32 %2 to i64
  %arrayidx = getelementptr inbounds [100005 x i32]* @a, i32 0, i64 %idxprom
  %call1 = call i32 (i8*, ...)* @scanf(i8* getelementptr inbounds ([3 x i8]* @.str2, i32 0, i32 0), i32* %arrayidx)
  %3 = load i32* %i, align 4
  %idxprom2 = sext i32 %3 to i64
  %arrayidx3 = getelementptr inbounds [100005 x i32]* @a, i32 0, i64 %idxprom2
  %4 = load i32* %arrayidx3, align 4
  %idxprom4 = sext i32 %4 to i64
  %arrayidx5 = getelementptr inbounds [1000000 x i32]* @pos, i32 0, i64 %idxprom4
  store i32 1, i32* %arrayidx5, align 4
  %5 = load i32* %i, align 4
  %idxprom6 = sext i32 %5 to i64
  %arrayidx7 = getelementptr inbounds [100005 x i32]* @a, i32 0, i64 %idxprom6
  %call8 = call i32* @_ZSt3maxIiERKT_S2_S2_(i32* @ma, i32* %arrayidx7)
  %6 = load i32* %call8
  store i32 %6, i32* @ma, align 4
  %7 = load i32* %i, align 4
  %inc = add nsw i32 %7, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

4
  store i32 1, i32* %i9, align 4
  br label %for.cond10

5
  %8 = load i32* %i9, align 4
  %9 = load i32* @ma, align 4
  %add = add nsw i32 %9, 1
  %cmp11 = icmp sle i32 %8, %add
  br i1 %cmp11, label %for.body12, label %for.end17

6
  %10 = load i32* %i9, align 4
  %11 = load i32* %i9, align 4
  %idxprom13 = sext i32 %11 to i64
  %arrayidx14 = getelementptr inbounds [1000000 x i32]* @fa, i32 0, i64 %idxprom13
  store i32 %10, i32* %arrayidx14, align 4
  %12 = load i32* %i9, align 4
  %inc16 = add nsw i32 %12, 1
  store i32 %inc16, i32* %i9, align 4
  br label %for.cond10

7
  store i32 2, i32* %i18, align 4
  br label %for.cond19

8
  %13 = load i32* %i18, align 4
  %14 = load i32* @ma, align 4
  %add20 = add nsw i32 %14, 1
  %cmp21 = icmp sle i32 %13, %add20
  br i1 %cmp21, label %for.body22, label %for.end45

9
  %15 = load i32* %i18, align 4
  %idxprom23 = sext i32 %15 to i64
  %arrayidx24 = getelementptr inbounds [100005 x i32]* @pr, i32 0, i64 %idxprom23
  %16 = load i32* %arrayidx24, align 4
  %tobool = icmp ne i32 %16, 0
  br i1 %tobool, label %if.then, label %if.end

10
  br label %for.inc43

11
  %17 = load i32* %i18, align 4
  store i32 %17, i32* %j, align 4
  br label %for.cond25

12
  %18 = load i32* %j, align 4
  %19 = load i32* @ma, align 4
  %add26 = add nsw i32 %19, 1
  %cmp27 = icmp sle i32 %18, %add26
  br i1 %cmp27, label %for.body28, label %for.end42

13
  %20 = load i32* %i18, align 4
  %21 = load i32* %j, align 4
  %idxprom29 = sext i32 %21 to i64
  %arrayidx30 = getelementptr inbounds [100005 x i32]* @pr, i32 0, i64 %idxprom29
  store i32 %20, i32* %arrayidx30, align 4
  %22 = load i32* %j, align 4
  %idxprom31 = sext i32 %22 to i64
  %arrayidx32 = getelementptr inbounds [1000000 x i32]* @pos, i32 0, i64 %idxprom31
  %23 = load i32* %arrayidx32, align 4
  %tobool33 = icmp ne i32 %23, 0
  br i1 %tobool33, label %if.end35, label %if.then34

14
  br label %for.inc40

15
  %24 = load i32* %i18, align 4
  %call36 = call i32 @_Z4findi(i32 %24)
  store i32 %call36, i32* %f1, align 4
  %25 = load i32* %j, align 4
  %call37 = call i32 @_Z4findi(i32 %25)
  store i32 %call37, i32* %f2, align 4
  %26 = load i32* %f2, align 4
  %27 = load i32* %f1, align 4
  %idxprom38 = sext i32 %27 to i64
  %arrayidx39 = getelementptr inbounds [1000000 x i32]* @fa, i32 0, i64 %idxprom38
  store i32 %26, i32* %arrayidx39, align 4
  br label %for.inc40

16
  %28 = load i32* %i18, align 4
  %29 = load i32* %j, align 4
  %add41 = add nsw i32 %29, %28
  store i32 %add41, i32* %j, align 4
  br label %for.cond25

17
  br label %for.inc43

18
  %30 = load i32* %i18, align 4
  %inc44 = add nsw i32 %30, 1
  store i32 %inc44, i32* %i18, align 4
  br label %for.cond19

19
  store i32 2, i32* %i46, align 4
  br label %for.cond47

20
  %31 = load i32* %i46, align 4
  %32 = load i32* @ma, align 4
  %add48 = add nsw i32 %32, 1
  %cmp49 = icmp sle i32 %31, %add48
  br i1 %cmp49, label %for.body50, label %for.end63

21
  %33 = load i32* %i46, align 4
  %idxprom51 = sext i32 %33 to i64
  %arrayidx52 = getelementptr inbounds [100005 x i32]* @pr, i32 0, i64 %idxprom51
  %34 = load i32* %arrayidx52, align 4
  %35 = load i32* %i46, align 4
  %cmp53 = icmp eq i32 %34, %35
  br i1 %cmp53, label %if.then54, label %if.end60

22
  %36 = load i32* %i46, align 4
  %idxprom55 = sext i32 %36 to i64
  %arrayidx56 = getelementptr inbounds [1000000 x i32]* @fa, i32 0, i64 %idxprom55
  %37 = load i32* %arrayidx56, align 4
  %call57 = call i32 @_Z4findi(i32 %37)
  %38 = load i32* %i46, align 4
  %idxprom58 = sext i32 %38 to i64
  %arrayidx59 = getelementptr inbounds [1000000 x i32]* @col, i32 0, i64 %idxprom58
  store i32 %call57, i32* %arrayidx59, align 4
  br label %if.end60

23
  %39 = load i32* %i46, align 4
  %inc62 = add nsw i32 %39, 1
  store i32 %inc62, i32* %i46, align 4
  br label %for.cond47

24
  store i32 1, i32* %i64, align 4
  store i32 0, i32* %sum, align 4
  br label %for.cond66

25
  %40 = load i32* %i64, align 4
  %41 = load i32* @n, align 4
  %cmp67 = icmp sle i32 %40, %41
  br i1 %cmp67, label %for.body68, label %for.end114

26
  %42 = load i32* %i64, align 4
  %idxprom69 = sext i32 %42 to i64
  %arrayidx70 = getelementptr inbounds [100005 x i32]* @a, i32 0, i64 %idxprom69
  %43 = load i32* %arrayidx70, align 4
  %call71 = call i32 @_Z4findi(i32 %43)
  %44 = load i32* %sum, align 4
  %inc72 = add nsw i32 %44, 1
  store i32 %inc72, i32* %sum, align 4
  %idxprom73 = sext i32 %inc72 to i64
  %arrayidx74 = getelementptr inbounds [100005 x i32]* @b, i32 0, i64 %idxprom73
  store i32 %call71, i32* %arrayidx74, align 4
  %45 = load i32* %i64, align 4
  %idxprom75 = sext i32 %45 to i64
  %arrayidx76 = getelementptr inbounds [100005 x i32]* @a, i32 0, i64 %idxprom75
  %46 = load i32* %arrayidx76, align 4
  %add77 = add nsw i32 %46, 1
  store i32 %add77, i32* %j65, align 4
  br label %while.cond

27
  %47 = load i32* %j65, align 4
  %cmp78 = icmp sgt i32 %47, 1
  br i1 %cmp78, label %while.body, label %while.end91

28
  %48 = load i32* %j65, align 4
  %idxprom79 = sext i32 %48 to i64
  %arrayidx80 = getelementptr inbounds [100005 x i32]* @pr, i32 0, i64 %idxprom79
  %49 = load i32* %arrayidx80, align 4
  %idxprom81 = sext i32 %49 to i64
  %arrayidx82 = getelementptr inbounds [1000000 x i32]* @col, i32 0, i64 %idxprom81
  %50 = load i32* %arrayidx82, align 4
  %51 = load i32* %sum, align 4
  %inc83 = add nsw i32 %51, 1
  store i32 %inc83, i32* %sum, align 4
  %idxprom84 = sext i32 %inc83 to i64
  %arrayidx85 = getelementptr inbounds [100005 x i32]* @b, i32 0, i64 %idxprom84
  store i32 %50, i32* %arrayidx85, align 4
  %52 = load i32* %j65, align 4
  %idxprom86 = sext i32 %52 to i64
  %arrayidx87 = getelementptr inbounds [100005 x i32]* @pr, i32 0, i64 %idxprom86
  %53 = load i32* %arrayidx87, align 4
  store i32 %53, i32* %x, align 4
  br label %while.cond88

29
  %54 = load i32* %j65, align 4
  %55 = load i32* %x, align 4
  %rem = srem i32 %54, %55
  %tobool89 = icmp ne i32 %rem, 0
  %lnot = xor i1 %tobool89, true
  br i1 %lnot, label %while.body90, label %while.end

30
  %56 = load i32* %x, align 4
  %57 = load i32* %j65, align 4
  %div = sdiv i32 %57, %56
  store i32 %div, i32* %j65, align 4
  br label %while.cond88

31
  br label %while.cond

32
  %58 = load i32* %sum, align 4
  %idx.ext = sext i32 %58 to i64
  %add.ptr = getelementptr inbounds i32* getelementptr inbounds ([100005 x i32]* @b, i32 0, i32 0), i64 %idx.ext
  %add.ptr92 = getelementptr inbounds i32* %add.ptr, i64 1
  call void @_ZSt4sortIPiEvT_S1_(i32* getelementptr inbounds ([100005 x i32]* @b, i32 0, i64 1), i32* %add.ptr92)
  store i32 1, i32* %k, align 4
  br label %for.cond93

33
  %59 = load i32* %k, align 4
  %60 = load i32* %sum, align 4
  %cmp94 = icmp sle i32 %59, %60
  br i1 %cmp94, label %for.body95, label %for.end111

34
  %61 = load i32* %k, align 4
  %add96 = add nsw i32 %61, 1
  store i32 %add96, i32* %l, align 4
  br label %for.cond97

35
  %62 = load i32* %l, align 4
  %63 = load i32* %sum, align 4
  %cmp98 = icmp sle i32 %62, %63
  br i1 %cmp98, label %for.body99, label %for.end108

36
  %64 = load i32* %k, align 4
  %idxprom100 = sext i32 %64 to i64
  %arrayidx101 = getelementptr inbounds [100005 x i32]* @b, i32 0, i64 %idxprom100
  %65 = load i32* %l, align 4
  %idxprom102 = sext i32 %65 to i64
  %arrayidx103 = getelementptr inbounds [100005 x i32]* @b, i32 0, i64 %idxprom102
  %call104 = call i64 @_ZSt9make_pairIRiS0_ESt4pairINSt17__decay_and_stripIT_E6__typeENS2_IT0_E6__typeEEOS3_OS6_(i32* %arrayidx101, i32* %arrayidx103)
  %66 = bitcast %"struct.std::pair.0"* %ref.tmp to i64*
  store i64 %call104, i64* %66, align 1
  %call105 = call { %"struct.std::_Rb_tree_node_base"*, i8 } @_ZNSt3setISt4pairIiiESt4lessIS1_ESaIS1_EE6insertEOS1_(%"class.std::set"* @s, %"struct.std::pair.0"* %ref.tmp)
  %67 = bitcast %"struct.std::pair"* %coerce to { %"struct.std::_Rb_tree_node_base"*, i8 }*
  %68 = getelementptr { %"struct.std::_Rb_tree_node_base"*, i8 }* %67, i32 0, i32 0
  %69 = extractvalue { %"struct.std::_Rb_tree_node_base"*, i8 } %call105, 0
  store %"struct.std::_Rb_tree_node_base"* %69, %"struct.std::_Rb_tree_node_base"** %68, align 1
  %70 = getelementptr { %"struct.std::_Rb_tree_node_base"*, i8 }* %67, i32 0, i32 1
  %71 = extractvalue { %"struct.std::_Rb_tree_node_base"*, i8 } %call105, 1
  store i8 %71, i8* %70, align 1
  %72 = load i32* %l, align 4
  %inc107 = add nsw i32 %72, 1
  store i32 %inc107, i32* %l, align 4
  br label %for.cond97

37
  %73 = load i32* %k, align 4
  %inc110 = add nsw i32 %73, 1
  store i32 %inc110, i32* %k, align 4
  br label %for.cond93

38
  %74 = load i32* %i64, align 4
  %inc113 = add nsw i32 %74, 1
  store i32 %inc113, i32* %i64, align 4
  store i32 0, i32* %sum, align 4
  br label %for.cond66

39
  store i32 1, i32* %i115, align 4
  br label %for.cond116

40
  %75 = load i32* %i115, align 4
  %76 = load i32* @q, align 4
  %cmp117 = icmp sle i32 %75, %76
  br i1 %cmp117, label %for.body118, label %for.end143

41
  %call119 = call i32 (i8*, ...)* @scanf(i8* getelementptr inbounds ([5 x i8]* @.str, i32 0, i32 0), i32* @st, i32* @t)
  %77 = load i32* @st, align 4
  %idxprom120 = sext i32 %77 to i64
  %arrayidx121 = getelementptr inbounds [100005 x i32]* @a, i32 0, i64 %idxprom120
  %78 = load i32* %arrayidx121, align 4
  %call122 = call i32 @_Z4findi(i32 %78)
  store i32 %call122, i32* @s1, align 4
  %79 = load i32* @t, align 4
  %idxprom123 = sext i32 %79 to i64
  %arrayidx124 = getelementptr inbounds [100005 x i32]* @a, i32 0, i64 %idxprom123
  %80 = load i32* %arrayidx124, align 4
  %call125 = call i32 @_Z4findi(i32 %80)
  store i32 %call125, i32* @t1, align 4
  %81 = load i32* @s1, align 4
  %82 = load i32* @t1, align 4
  %cmp126 = icmp sgt i32 %81, %82
  br i1 %cmp126, label %if.then127, label %if.end128

42
  call void @_ZSt4swapIiEvRT_S1_(i32* @s1, i32* @t1) #2
  br label %if.end128

43
  %83 = load i32* @s1, align 4
  %84 = load i32* @t1, align 4
  %cmp129 = icmp eq i32 %83, %84
  br i1 %cmp129, label %if.then130, label %if.else

44
  %call131 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([3 x i8]* @.str3, i32 0, i32 0))
  br label %if.end140

45
  call void @_ZNSt4pairIiiEC1IRiS2_vEEOT_OT0_(%"struct.std::pair.0"* %ref.tmp132, i32* @s1, i32* @t1)
  %call133 = call i64 @_ZNKSt3setISt4pairIiiESt4lessIS1_ESaIS1_EE5countERKS1_(%"class.std::set"* @s, %"struct.std::pair.0"* %ref.tmp132)
  %tobool134 = icmp ne i64 %call133, 0
  br i1 %tobool134, label %if.then135, label %if.else137

46
  %call136 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([3 x i8]* @.str4, i32 0, i32 0))
  br label %if.end139

47
  %call138 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([3 x i8]* @.str5, i32 0, i32 0))
  br label %if.end139

48
  br label %if.end140

49
  %85 = load i32* %i115, align 4
  %inc142 = add nsw i32 %85, 1
  store i32 %inc142, i32* %i115, align 4
  br label %for.cond116

50
  ret i32 0
