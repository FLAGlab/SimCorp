
1
  %retval = alloca i32, align 4
  %i = alloca i32, align 4
  %i6 = alloca i32, align 4
  %s = alloca i32, align 4
  %t = alloca i32, align 4
  store i32 0, i32* %retval
  %call = call i32 (i8*, ...)* @scanf(i8* getelementptr inbounds ([5 x i8]* @.str, i32 0, i32 0), i32* @n, i32* @m)
  call void @_Z5eulerv()
  store i32 1, i32* %i, align 4
  br label %for.cond

2
  %0 = load i32* %i, align 4
  %1 = load i32* @n, align 4
  %cmp = icmp sle i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

3
  %2 = load i32* %i, align 4
  %idxprom = sext i32 %2 to i64
  %arrayidx = getelementptr inbounds [150005 x i32]* @a, i32 0, i64 %idxprom
  %call1 = call i32 (i8*, ...)* @scanf(i8* getelementptr inbounds ([3 x i8]* @.str2, i32 0, i32 0), i32* %arrayidx)
  %3 = load i32* %i, align 4
  %idxprom2 = sext i32 %3 to i64
  %arrayidx3 = getelementptr inbounds [150005 x i32]* @a, i32 0, i64 %idxprom2
  %4 = load i32* %arrayidx3, align 4
  call void @_Z3addi(i32 %4)
  %5 = load i32* %i, align 4
  %idxprom4 = sext i32 %5 to i64
  %arrayidx5 = getelementptr inbounds [150005 x i32]* @a, i32 0, i64 %idxprom4
  %6 = load i32* %arrayidx5, align 4
  %add = add nsw i32 %6, 1
  call void @_Z3addi(i32 %add)
  %7 = load i32* %i, align 4
  %inc = add nsw i32 %7, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

4
  store i32 1, i32* %i6, align 4
  br label %for.cond7

5
  %8 = load i32* %i6, align 4
  %9 = load i32* @m, align 4
  %cmp8 = icmp sle i32 %8, %9
  br i1 %cmp8, label %for.body9, label %for.end34

6
  %call10 = call i32 (i8*, ...)* @scanf(i8* getelementptr inbounds ([5 x i8]* @.str, i32 0, i32 0), i32* %s, i32* %t)
  %10 = load i32* %s, align 4
  %idxprom11 = sext i32 %10 to i64
  %arrayidx12 = getelementptr inbounds [150005 x i32]* @a, i32 0, i64 %idxprom11
  %11 = load i32* %arrayidx12, align 4
  %12 = load i32* %t, align 4
  %idxprom13 = sext i32 %12 to i64
  %arrayidx14 = getelementptr inbounds [150005 x i32]* @a, i32 0, i64 %idxprom13
  %13 = load i32* %arrayidx14, align 4
  %call15 = call i32 @_Z3gcdii(i32 %11, i32 %13)
  %cmp16 = icmp sgt i32 %call15, 1
  br i1 %cmp16, label %if.then, label %if.end

7
  %call17 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([3 x i8]* @.str3, i32 0, i32 0))
  br label %if.end

8
  %14 = load i32* %s, align 4
  %idxprom18 = sext i32 %14 to i64
  %arrayidx19 = getelementptr inbounds [150005 x i32]* @a, i32 0, i64 %idxprom18
  %15 = load i32* %arrayidx19, align 4
  %16 = load i32* %t, align 4
  %idxprom20 = sext i32 %16 to i64
  %arrayidx21 = getelementptr inbounds [150005 x i32]* @a, i32 0, i64 %idxprom20
  %17 = load i32* %arrayidx21, align 4
  %call22 = call zeroext i1 @_Z5checkii(i32 %15, i32 %17)
  br i1 %call22, label %if.then28, label %lor.lhs.false

9
  %18 = load i32* %t, align 4
  %idxprom23 = sext i32 %18 to i64
  %arrayidx24 = getelementptr inbounds [150005 x i32]* @a, i32 0, i64 %idxprom23
  %19 = load i32* %arrayidx24, align 4
  %20 = load i32* %s, align 4
  %idxprom25 = sext i32 %20 to i64
  %arrayidx26 = getelementptr inbounds [150005 x i32]* @a, i32 0, i64 %idxprom25
  %21 = load i32* %arrayidx26, align 4
  %call27 = call zeroext i1 @_Z5checkii(i32 %19, i32 %21)
  br i1 %call27, label %if.then28, label %if.else

10
  %call29 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([3 x i8]* @.str4, i32 0, i32 0))
  br label %if.end31

11
  %call30 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([4 x i8]* @.str5, i32 0, i32 0), i32 2)
  br label %if.end31

12
  %22 = load i32* %i6, align 4
  %inc33 = add nsw i32 %22, 1
  store i32 %inc33, i32* %i6, align 4
  br label %for.cond7

13
  ret i32 0
