
1
  %retval = alloca i32, align 4
  %n = alloca i32, align 4
  %w = alloca i32, align 4
  %b = alloca i32, align 4
  %x = alloca i32, align 4
  %i = alloca i32, align 4
  %i2 = alloca i32, align 4
  %i12 = alloca i32, align 4
  %j = alloca i64, align 8
  %k = alloca i32, align 4
  %ref.tmp = alloca i64, align 8
  %ref.tmp47 = alloca i64, align 8
  %ref.tmp54 = alloca i64, align 8
  %i68 = alloca i32, align 4
  store i32 0, i32* %retval
  %call = call i32 (i8*, ...)* @scanf(i8* getelementptr inbounds ([9 x i8]* @.str, i32 0, i32 0), i32* %n, i32* %w, i32* %b, i32* %x)
  store i32 1, i32* %i, align 4
  br label %for.cond

2
  %0 = load i32* %i, align 4
  %1 = load i32* %n, align 4
  %cmp = icmp sle i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

3
  %2 = load i32* %i, align 4
  %idxprom = sext i32 %2 to i64
  %arrayidx = getelementptr inbounds [1005 x i64]* @cnt, i32 0, i64 %idxprom
  %call1 = call i32 (i8*, ...)* @scanf(i8* getelementptr inbounds ([6 x i8]* @.str1, i32 0, i32 0), i64* %arrayidx)
  %3 = load i32* %i, align 4
  %inc = add nsw i32 %3, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

4
  store i32 1, i32* %i2, align 4
  br label %for.cond3

5
  %4 = load i32* %i2, align 4
  %5 = load i32* %n, align 4
  %cmp4 = icmp sle i32 %4, %5
  br i1 %cmp4, label %for.body5, label %for.end11

6
  %6 = load i32* %i2, align 4
  %idxprom6 = sext i32 %6 to i64
  %arrayidx7 = getelementptr inbounds [1005 x i64]* @cost, i32 0, i64 %idxprom6
  %call8 = call i32 (i8*, ...)* @scanf(i8* getelementptr inbounds ([6 x i8]* @.str1, i32 0, i32 0), i64* %arrayidx7)
  %7 = load i32* %i2, align 4
  %inc10 = add nsw i32 %7, 1
  store i32 %inc10, i32* %i2, align 4
  br label %for.cond3

7
  call void @llvm.memset.p0i8.i64(i8* bitcast ([1005 x [10005 x i64]]* @dp to i8*), i8 -1, i64 80440200, i32 16, i1 false)
  %8 = load i32* %w, align 4
  %conv = sext i32 %8 to i64
  store i64 %conv, i64* getelementptr inbounds ([1005 x [10005 x i64]]* @dp, i32 0, i64 0, i64 0), align 8
  store i32 1, i32* %i12, align 4
  br label %for.cond13

8
  %9 = load i32* %i12, align 4
  %10 = load i32* %n, align 4
  %cmp14 = icmp sle i32 %9, %10
  br i1 %cmp14, label %for.body15, label %for.end67

9
  store i64 0, i64* %j, align 8
  br label %for.cond16

10
  %11 = load i64* %j, align 8
  %cmp17 = icmp slt i64 %11, 10005
  br i1 %cmp17, label %for.body18, label %for.end64

11
  store i32 0, i32* %k, align 4
  br label %for.cond19

12
  %12 = load i32* %k, align 4
  %conv20 = sext i32 %12 to i64
  %13 = load i32* %i12, align 4
  %idxprom21 = sext i32 %13 to i64
  %arrayidx22 = getelementptr inbounds [1005 x i64]* @cnt, i32 0, i64 %idxprom21
  %call23 = call i64* @_ZSt3minIxERKT_S2_S2_(i64* %arrayidx22, i64* %j)
  %14 = load i64* %call23
  %cmp24 = icmp sle i64 %conv20, %14
  br i1 %cmp24, label %for.body25, label %for.end61

13
  %15 = load i64* %j, align 8
  %16 = load i32* %k, align 4
  %conv26 = sext i32 %16 to i64
  %sub = sub nsw i64 %15, %conv26
  %17 = load i32* %i12, align 4
  %sub27 = sub nsw i32 %17, 1
  %idxprom28 = sext i32 %sub27 to i64
  %arrayidx29 = getelementptr inbounds [1005 x [10005 x i64]]* @dp, i32 0, i64 %idxprom28
  %arrayidx30 = getelementptr inbounds [10005 x i64]* %arrayidx29, i32 0, i64 %sub
  %18 = load i64* %arrayidx30, align 8
  %cmp31 = icmp ne i64 %18, -1
  br i1 %cmp31, label %if.then, label %if.end

14
  %19 = load i64* %j, align 8
  %20 = load i32* %i12, align 4
  %idxprom32 = sext i32 %20 to i64
  %arrayidx33 = getelementptr inbounds [1005 x [10005 x i64]]* @dp, i32 0, i64 %idxprom32
  %arrayidx34 = getelementptr inbounds [10005 x i64]* %arrayidx33, i32 0, i64 %19
  %21 = load i64* %j, align 8
  %22 = load i32* %k, align 4
  %conv35 = sext i32 %22 to i64
  %sub36 = sub nsw i64 %21, %conv35
  %23 = load i32* %i12, align 4
  %sub37 = sub nsw i32 %23, 1
  %idxprom38 = sext i32 %sub37 to i64
  %arrayidx39 = getelementptr inbounds [1005 x [10005 x i64]]* @dp, i32 0, i64 %idxprom38
  %arrayidx40 = getelementptr inbounds [10005 x i64]* %arrayidx39, i32 0, i64 %sub36
  %24 = load i64* %arrayidx40, align 8
  %25 = load i32* %x, align 4
  %conv41 = sext i32 %25 to i64
  %add = add nsw i64 %24, %conv41
  store i64 %add, i64* %ref.tmp, align 8
  %26 = load i32* %w, align 4
  %conv42 = sext i32 %26 to i64
  %27 = load i64* %j, align 8
  %28 = load i32* %k, align 4
  %conv43 = sext i32 %28 to i64
  %sub44 = sub nsw i64 %27, %conv43
  %29 = load i32* %b, align 4
  %conv45 = sext i32 %29 to i64
  %mul = mul nsw i64 %sub44, %conv45
  %add46 = add nsw i64 %conv42, %mul
  store i64 %add46, i64* %ref.tmp47, align 8
  %call48 = call i64* @_ZSt3minIxERKT_S2_S2_(i64* %ref.tmp, i64* %ref.tmp47)
  %30 = load i64* %call48
  %31 = load i32* %k, align 4
  %conv49 = sext i32 %31 to i64
  %32 = load i32* %i12, align 4
  %idxprom50 = sext i32 %32 to i64
  %arrayidx51 = getelementptr inbounds [1005 x i64]* @cost, i32 0, i64 %idxprom50
  %33 = load i64* %arrayidx51, align 8
  %mul52 = mul nsw i64 %conv49, %33
  %sub53 = sub nsw i64 %30, %mul52
  store i64 %sub53, i64* %ref.tmp54, align 8
  %call55 = call i64* @_ZSt3maxIxERKT_S2_S2_(i64* %arrayidx34, i64* %ref.tmp54)
  %34 = load i64* %call55
  %35 = load i64* %j, align 8
  %36 = load i32* %i12, align 4
  %idxprom56 = sext i32 %36 to i64
  %arrayidx57 = getelementptr inbounds [1005 x [10005 x i64]]* @dp, i32 0, i64 %idxprom56
  %arrayidx58 = getelementptr inbounds [10005 x i64]* %arrayidx57, i32 0, i64 %35
  store i64 %34, i64* %arrayidx58, align 8
  br label %if.end

15
  %37 = load i32* %k, align 4
  %inc60 = add nsw i32 %37, 1
  store i32 %inc60, i32* %k, align 4
  br label %for.cond19

16
  %38 = load i64* %j, align 8
  %inc63 = add nsw i64 %38, 1
  store i64 %inc63, i64* %j, align 8
  br label %for.cond16

17
  %39 = load i32* %i12, align 4
  %inc66 = add nsw i32 %39, 1
  store i32 %inc66, i32* %i12, align 4
  br label %for.cond13

18
  store i32 0, i32* %i68, align 4
  br label %for.cond69

19
  %40 = load i32* %i68, align 4
  %cmp70 = icmp slt i32 %40, 10005
  br i1 %cmp70, label %for.body71, label %for.end83

20
  %41 = load i32* %i68, align 4
  %idxprom72 = sext i32 %41 to i64
  %42 = load i32* %n, align 4
  %idxprom73 = sext i32 %42 to i64
  %arrayidx74 = getelementptr inbounds [1005 x [10005 x i64]]* @dp, i32 0, i64 %idxprom73
  %arrayidx75 = getelementptr inbounds [10005 x i64]* %arrayidx74, i32 0, i64 %idxprom72
  %43 = load i64* %arrayidx75, align 8
  %cmp76 = icmp eq i64 %43, -1
  br i1 %cmp76, label %if.then77, label %if.end80

21
  %44 = load i32* %i68, align 4
  %sub78 = sub nsw i32 %44, 1
  %call79 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([3 x i8]* @.str2, i32 0, i32 0), i32 %sub78)
  store i32 0, i32* %retval
  br label %for.end83

22
  %45 = load i32* %i68, align 4
  %inc82 = add nsw i32 %45, 1
  store i32 %inc82, i32* %i68, align 4
  br label %for.cond69

23
  %46 = load i32* %retval
  ret i32 %46
