
1
  %retval = alloca i32, align 4
  %i = alloca i32, align 4
  %i4 = alloca i32, align 4
  %i14 = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %ref.tmp = alloca i32, align 4
  %ref.tmp57 = alloca i32, align 4
  %j75 = alloca i32, align 4
  store i32 0, i32* %retval
  call void @llvm.memset.p0i8.i64(i8* bitcast ([1010 x [10010 x i32]]* @dp to i8*), i8 -1, i64 40440400, i32 16, i1 false)
  %call = call i32 (i8*, ...)* @scanf(i8* getelementptr inbounds ([9 x i8]* @.str, i32 0, i32 0), i32* @n, i32* @w, i32* @b, i32* @x)
  store i32 0, i32* %i, align 4
  br label %for.cond

2
  %0 = load i32* %i, align 4
  %1 = load i32* @n, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

3
  %2 = load i32* %i, align 4
  %idxprom = sext i32 %2 to i64
  %arrayidx = getelementptr inbounds [1010 x i32]* @c, i32 0, i64 %idxprom
  %call1 = call i32 (i8*, ...)* @scanf(i8* getelementptr inbounds ([3 x i8]* @.str1, i32 0, i32 0), i32* %arrayidx)
  %3 = load i32* %i, align 4
  %idxprom2 = sext i32 %3 to i64
  %arrayidx3 = getelementptr inbounds [1010 x i32]* @c, i32 0, i64 %idxprom2
  %4 = load i32* %arrayidx3, align 4
  %5 = load i32* @cnt, align 4
  %add = add nsw i32 %5, %4
  store i32 %add, i32* @cnt, align 4
  %6 = load i32* %i, align 4
  %inc = add nsw i32 %6, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

4
  store i32 0, i32* %i4, align 4
  br label %for.cond5

5
  %7 = load i32* %i4, align 4
  %8 = load i32* @n, align 4
  %cmp6 = icmp slt i32 %7, %8
  br i1 %cmp6, label %for.body7, label %for.end13

6
  %9 = load i32* %i4, align 4
  %idxprom8 = sext i32 %9 to i64
  %arrayidx9 = getelementptr inbounds [1010 x i32]* @cost, i32 0, i64 %idxprom8
  %call10 = call i32 (i8*, ...)* @scanf(i8* getelementptr inbounds ([3 x i8]* @.str1, i32 0, i32 0), i32* %arrayidx9)
  %10 = load i32* %i4, align 4
  %inc12 = add nsw i32 %10, 1
  store i32 %inc12, i32* %i4, align 4
  br label %for.cond5

7
  %11 = load i32* @w, align 4
  store i32 %11, i32* getelementptr inbounds ([1010 x [10010 x i32]]* @dp, i32 0, i64 0, i64 0), align 4
  store i32 0, i32* %i14, align 4
  br label %for.cond15

8
  %12 = load i32* %i14, align 4
  %13 = load i32* @n, align 4
  %cmp16 = icmp slt i32 %12, %13
  br i1 %cmp16, label %for.body17, label %for.end74

9
  store i32 0, i32* %j, align 4
  br label %for.cond18

10
  %14 = load i32* %j, align 4
  %15 = load i32* @cnt, align 4
  %cmp19 = icmp sle i32 %14, %15
  br i1 %cmp19, label %land.rhs, label %land.end

11
  %16 = load i32* %j, align 4
  %idxprom20 = sext i32 %16 to i64
  %17 = load i32* %i14, align 4
  %idxprom21 = sext i32 %17 to i64
  %arrayidx22 = getelementptr inbounds [1010 x [10010 x i32]]* @dp, i32 0, i64 %idxprom21
  %arrayidx23 = getelementptr inbounds [10010 x i32]* %arrayidx22, i32 0, i64 %idxprom20
  %18 = load i32* %arrayidx23, align 4
  %cmp24 = icmp sge i32 %18, 0
  br label %land.end

12
  %19 = phi i1 [ false, %for.cond18 ], [ %cmp24, %land.rhs ]
  br i1 %19, label %for.body25, label %for.end71

13
  store i32 0, i32* %k, align 4
  br label %for.cond26

14
  %20 = load i32* %k, align 4
  %21 = load i32* %i14, align 4
  %idxprom27 = sext i32 %21 to i64
  %arrayidx28 = getelementptr inbounds [1010 x i32]* @c, i32 0, i64 %idxprom27
  %22 = load i32* %arrayidx28, align 4
  %cmp29 = icmp sle i32 %20, %22
  br i1 %cmp29, label %land.rhs30, label %land.end38

15
  %23 = load i32* %j, align 4
  %idxprom31 = sext i32 %23 to i64
  %24 = load i32* %i14, align 4
  %idxprom32 = sext i32 %24 to i64
  %arrayidx33 = getelementptr inbounds [1010 x [10010 x i32]]* @dp, i32 0, i64 %idxprom32
  %arrayidx34 = getelementptr inbounds [10010 x i32]* %arrayidx33, i32 0, i64 %idxprom31
  %25 = load i32* %arrayidx34, align 4
  %26 = load i32* %k, align 4
  %27 = load i32* %i14, align 4
  %idxprom35 = sext i32 %27 to i64
  %arrayidx36 = getelementptr inbounds [1010 x i32]* @cost, i32 0, i64 %idxprom35
  %28 = load i32* %arrayidx36, align 4
  %mul = mul nsw i32 %26, %28
  %cmp37 = icmp sge i32 %25, %mul
  br label %land.end38

16
  %29 = phi i1 [ false, %for.cond26 ], [ %cmp37, %land.rhs30 ]
  br i1 %29, label %for.body39, label %for.end68

17
  %30 = load i32* %j, align 4
  %31 = load i32* %k, align 4
  %add40 = add nsw i32 %30, %31
  %idxprom41 = sext i32 %add40 to i64
  %32 = load i32* %i14, align 4
  %add42 = add nsw i32 %32, 1
  %idxprom43 = sext i32 %add42 to i64
  %arrayidx44 = getelementptr inbounds [1010 x [10010 x i32]]* @dp, i32 0, i64 %idxprom43
  %arrayidx45 = getelementptr inbounds [10010 x i32]* %arrayidx44, i32 0, i64 %idxprom41
  %33 = load i32* %j, align 4
  %idxprom46 = sext i32 %33 to i64
  %34 = load i32* %i14, align 4
  %idxprom47 = sext i32 %34 to i64
  %arrayidx48 = getelementptr inbounds [1010 x [10010 x i32]]* @dp, i32 0, i64 %idxprom47
  %arrayidx49 = getelementptr inbounds [10010 x i32]* %arrayidx48, i32 0, i64 %idxprom46
  %35 = load i32* %arrayidx49, align 4
  %36 = load i32* %k, align 4
  %37 = load i32* %i14, align 4
  %idxprom50 = sext i32 %37 to i64
  %arrayidx51 = getelementptr inbounds [1010 x i32]* @cost, i32 0, i64 %idxprom50
  %38 = load i32* %arrayidx51, align 4
  %mul52 = mul nsw i32 %36, %38
  %sub = sub nsw i32 %35, %mul52
  %39 = load i32* @x, align 4
  %add53 = add nsw i32 %sub, %39
  store i32 %add53, i32* %ref.tmp, align 4
  %40 = load i32* @w, align 4
  %41 = load i32* %j, align 4
  %42 = load i32* %k, align 4
  %add54 = add nsw i32 %41, %42
  %43 = load i32* @b, align 4
  %mul55 = mul nsw i32 %add54, %43
  %add56 = add nsw i32 %40, %mul55
  store i32 %add56, i32* %ref.tmp57, align 4
  %call58 = call i32* @_ZSt3minIiERKT_S2_S2_(i32* %ref.tmp, i32* %ref.tmp57)
  %call59 = call i32* @_ZSt3maxIiERKT_S2_S2_(i32* %arrayidx45, i32* %call58)
  %44 = load i32* %call59
  %45 = load i32* %j, align 4
  %46 = load i32* %k, align 4
  %add60 = add nsw i32 %45, %46
  %idxprom61 = sext i32 %add60 to i64
  %47 = load i32* %i14, align 4
  %add62 = add nsw i32 %47, 1
  %idxprom63 = sext i32 %add62 to i64
  %arrayidx64 = getelementptr inbounds [1010 x [10010 x i32]]* @dp, i32 0, i64 %idxprom63
  %arrayidx65 = getelementptr inbounds [10010 x i32]* %arrayidx64, i32 0, i64 %idxprom61
  store i32 %44, i32* %arrayidx65, align 4
  %48 = load i32* %k, align 4
  %inc67 = add nsw i32 %48, 1
  store i32 %inc67, i32* %k, align 4
  br label %for.cond26

18
  %49 = load i32* %j, align 4
  %inc70 = add nsw i32 %49, 1
  store i32 %inc70, i32* %j, align 4
  br label %for.cond18

19
  %50 = load i32* %i14, align 4
  %inc73 = add nsw i32 %50, 1
  store i32 %inc73, i32* %i14, align 4
  br label %for.cond15

20
  %51 = load i32* @cnt, align 4
  store i32 %51, i32* %j75, align 4
  br label %for.cond76

21
  %52 = load i32* %j75, align 4
  %cmp77 = icmp sge i32 %52, 0
  br i1 %cmp77, label %for.body78, label %for.end86

22
  %53 = load i32* %j75, align 4
  %idxprom79 = sext i32 %53 to i64
  %54 = load i32* @n, align 4
  %idxprom80 = sext i32 %54 to i64
  %arrayidx81 = getelementptr inbounds [1010 x [10010 x i32]]* @dp, i32 0, i64 %idxprom80
  %arrayidx82 = getelementptr inbounds [10010 x i32]* %arrayidx81, i32 0, i64 %idxprom79
  %55 = load i32* %arrayidx82, align 4
  %cmp83 = icmp sge i32 %55, 0
  br i1 %cmp83, label %if.then, label %if.end

23
  %56 = load i32* %j75, align 4
  %call84 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([4 x i8]* @.str2, i32 0, i32 0), i32 %56)
  store i32 0, i32* %retval
  br label %for.end86

24
  %57 = load i32* %j75, align 4
  %dec = add nsw i32 %57, -1
  store i32 %dec, i32* %j75, align 4
  br label %for.cond76

25
  %58 = load i32* %retval
  ret i32 %58
