
1
  %retval = alloca i32, align 4
  %N = alloca i32, align 4
  %W = alloca i32, align 4
  %B = alloca i32, align 4
  %X = alloca i32, align 4
  %n = alloca [1010 x i32], align 16
  %c = alloca [1010 x i32], align 16
  %w = alloca [10100 x i32], align 16
  %b = alloca [10100 x i32], align 16
  %t = alloca [10100 x i32], align 16
  %back = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %ww = alloca i32, align 4
  %bb = alloca i32, align 4
  store i32 0, i32* %retval
  %0 = bitcast [10100 x i32]* %t to i8*
  call void @llvm.memset.p0i8.i64(i8* %0, i8 0, i64 40400, i32 16, i1 false)
  %call = call i32 (i8*, ...)* @scanf(i8* getelementptr inbounds ([9 x i8]* @.str, i32 0, i32 0), i32* %N, i32* %W, i32* %B, i32* %X)
  store i32 1, i32* %i, align 4
  br label %for.cond

2
  %1 = load i32* %i, align 4
  %2 = load i32* %N, align 4
  %cmp = icmp sle i32 %1, %2
  br i1 %cmp, label %for.body, label %for.end

3
  %arraydecay = getelementptr inbounds [1010 x i32]* %n, i32 0, i32 0
  %3 = load i32* %i, align 4
  %idx.ext = sext i32 %3 to i64
  %add.ptr = getelementptr inbounds i32* %arraydecay, i64 %idx.ext
  %call1 = call i32 (i8*, ...)* @scanf(i8* getelementptr inbounds ([3 x i8]* @.str1, i32 0, i32 0), i32* %add.ptr)
  %4 = load i32* %i, align 4
  %inc = add nsw i32 %4, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

4
  store i32 1, i32* %i, align 4
  br label %for.cond2

5
  %5 = load i32* %i, align 4
  %6 = load i32* %N, align 4
  %cmp3 = icmp sle i32 %5, %6
  br i1 %cmp3, label %for.body4, label %for.end11

6
  %arraydecay5 = getelementptr inbounds [1010 x i32]* %c, i32 0, i32 0
  %7 = load i32* %i, align 4
  %idx.ext6 = sext i32 %7 to i64
  %add.ptr7 = getelementptr inbounds i32* %arraydecay5, i64 %idx.ext6
  %call8 = call i32 (i8*, ...)* @scanf(i8* getelementptr inbounds ([3 x i8]* @.str1, i32 0, i32 0), i32* %add.ptr7)
  %8 = load i32* %i, align 4
  %inc10 = add nsw i32 %8, 1
  store i32 %inc10, i32* %i, align 4
  br label %for.cond2

7
  %9 = load i32* %W, align 4
  %arrayidx = getelementptr inbounds [10100 x i32]* %w, i32 0, i64 0
  store i32 %9, i32* %arrayidx, align 4
  %10 = load i32* %W, align 4
  %arrayidx12 = getelementptr inbounds [10100 x i32]* %b, i32 0, i64 0
  store i32 %10, i32* %arrayidx12, align 4
  %arrayidx13 = getelementptr inbounds [10100 x i32]* %t, i32 0, i64 0
  store i32 1, i32* %arrayidx13, align 4
  store i32 0, i32* %back, align 4
  store i32 1, i32* %i, align 4
  br label %for.cond14

8
  %11 = load i32* %i, align 4
  %12 = load i32* %N, align 4
  %cmp15 = icmp sle i32 %11, %12
  br i1 %cmp15, label %for.body16, label %for.end107

9
  %13 = load i32* %back, align 4
  store i32 %13, i32* %j, align 4
  br label %for.cond17

10
  %14 = load i32* %j, align 4
  %cmp18 = icmp sge i32 %14, 0
  br i1 %cmp18, label %land.rhs, label %land.end

11
  %15 = load i32* %j, align 4
  %16 = load i32* %i, align 4
  %idxprom = sext i32 %16 to i64
  %arrayidx19 = getelementptr inbounds [1010 x i32]* %n, i32 0, i64 %idxprom
  %17 = load i32* %arrayidx19, align 4
  %add = add nsw i32 %15, %17
  %idxprom20 = sext i32 %add to i64
  %arrayidx21 = getelementptr inbounds [10100 x i32]* %t, i32 0, i64 %idxprom20
  %18 = load i32* %arrayidx21, align 4
  %tobool = icmp ne i32 %18, 0
  %lnot = xor i1 %tobool, true
  br label %land.end

12
  %19 = phi i1 [ false, %for.cond17 ], [ %lnot, %land.rhs ]
  br i1 %19, label %for.body22, label %for.end104

13
  store i32 1, i32* %k, align 4
  br label %for.cond23

14
  %20 = load i32* %i, align 4
  %21 = load i32* %j, align 4
  %idxprom24 = sext i32 %21 to i64
  %arrayidx25 = getelementptr inbounds [10100 x i32]* %t, i32 0, i64 %idxprom24
  %22 = load i32* %arrayidx25, align 4
  %sub = sub nsw i32 %20, %22
  %23 = load i32* %X, align 4
  %mul = mul nsw i32 %sub, %23
  %24 = load i32* %j, align 4
  %idxprom26 = sext i32 %24 to i64
  %arrayidx27 = getelementptr inbounds [10100 x i32]* %w, i32 0, i64 %idxprom26
  %25 = load i32* %arrayidx27, align 4
  %add28 = add nsw i32 %mul, %25
  %26 = load i32* %k, align 4
  %27 = load i32* %i, align 4
  %idxprom29 = sext i32 %27 to i64
  %arrayidx30 = getelementptr inbounds [1010 x i32]* %c, i32 0, i64 %idxprom29
  %28 = load i32* %arrayidx30, align 4
  %mul31 = mul nsw i32 %26, %28
  %sub32 = sub nsw i32 %add28, %mul31
  %cmp33 = icmp sge i32 %sub32, 0
  br i1 %cmp33, label %land.rhs34, label %land.end38

15
  %29 = load i32* %k, align 4
  %30 = load i32* %i, align 4
  %idxprom35 = sext i32 %30 to i64
  %arrayidx36 = getelementptr inbounds [1010 x i32]* %n, i32 0, i64 %idxprom35
  %31 = load i32* %arrayidx36, align 4
  %cmp37 = icmp sle i32 %29, %31
  br label %land.end38

16
  %32 = phi i1 [ false, %for.cond23 ], [ %cmp37, %land.rhs34 ]
  br i1 %32, label %for.body39, label %for.end102

17
  %33 = load i32* %i, align 4
  %34 = load i32* %j, align 4
  %idxprom40 = sext i32 %34 to i64
  %arrayidx41 = getelementptr inbounds [10100 x i32]* %t, i32 0, i64 %idxprom40
  %35 = load i32* %arrayidx41, align 4
  %sub42 = sub nsw i32 %33, %35
  %36 = load i32* %X, align 4
  %mul43 = mul nsw i32 %sub42, %36
  %37 = load i32* %j, align 4
  %idxprom44 = sext i32 %37 to i64
  %arrayidx45 = getelementptr inbounds [10100 x i32]* %w, i32 0, i64 %idxprom44
  %38 = load i32* %arrayidx45, align 4
  %add46 = add nsw i32 %mul43, %38
  %39 = load i32* %j, align 4
  %idxprom47 = sext i32 %39 to i64
  %arrayidx48 = getelementptr inbounds [10100 x i32]* %b, i32 0, i64 %idxprom47
  %40 = load i32* %arrayidx48, align 4
  %cmp49 = icmp slt i32 %add46, %40
  br i1 %cmp49, label %cond.true, label %cond.false

18
  %41 = load i32* %i, align 4
  %42 = load i32* %j, align 4
  %idxprom50 = sext i32 %42 to i64
  %arrayidx51 = getelementptr inbounds [10100 x i32]* %t, i32 0, i64 %idxprom50
  %43 = load i32* %arrayidx51, align 4
  %sub52 = sub nsw i32 %41, %43
  %44 = load i32* %X, align 4
  %mul53 = mul nsw i32 %sub52, %44
  %45 = load i32* %j, align 4
  %idxprom54 = sext i32 %45 to i64
  %arrayidx55 = getelementptr inbounds [10100 x i32]* %w, i32 0, i64 %idxprom54
  %46 = load i32* %arrayidx55, align 4
  %add56 = add nsw i32 %mul53, %46
  br label %cond.end

19
  %47 = load i32* %j, align 4
  %idxprom57 = sext i32 %47 to i64
  %arrayidx58 = getelementptr inbounds [10100 x i32]* %b, i32 0, i64 %idxprom57
  %48 = load i32* %arrayidx58, align 4
  br label %cond.end

20
  %cond = phi i32 [ %add56, %cond.true ], [ %48, %cond.false ]
  %49 = load i32* %k, align 4
  %50 = load i32* %i, align 4
  %idxprom59 = sext i32 %50 to i64
  %arrayidx60 = getelementptr inbounds [1010 x i32]* %c, i32 0, i64 %idxprom59
  %51 = load i32* %arrayidx60, align 4
  %mul61 = mul nsw i32 %49, %51
  %sub62 = sub nsw i32 %cond, %mul61
  store i32 %sub62, i32* %ww, align 4
  %52 = load i32* %ww, align 4
  %cmp63 = icmp sge i32 %52, 0
  br i1 %cmp63, label %land.lhs.true, label %land.end99

21
  %53 = load i32* %j, align 4
  %54 = load i32* %k, align 4
  %add64 = add nsw i32 %53, %54
  %idxprom65 = sext i32 %add64 to i64
  %arrayidx66 = getelementptr inbounds [10100 x i32]* %t, i32 0, i64 %idxprom65
  %55 = load i32* %arrayidx66, align 4
  %tobool67 = icmp ne i32 %55, 0
  br i1 %tobool67, label %lor.lhs.false, label %land.rhs79

22
  %56 = load i32* %j, align 4
  %idxprom68 = sext i32 %56 to i64
  %arrayidx69 = getelementptr inbounds [10100 x i32]* %t, i32 0, i64 %idxprom68
  %57 = load i32* %arrayidx69, align 4
  %58 = load i32* %j, align 4
  %59 = load i32* %k, align 4
  %add70 = add nsw i32 %58, %59
  %idxprom71 = sext i32 %add70 to i64
  %arrayidx72 = getelementptr inbounds [10100 x i32]* %t, i32 0, i64 %idxprom71
  %60 = load i32* %arrayidx72, align 4
  %cmp73 = icmp eq i32 %57, %60
  br i1 %cmp73, label %land.lhs.true74, label %land.end99

23
  %61 = load i32* %j, align 4
  %62 = load i32* %k, align 4
  %add75 = add nsw i32 %61, %62
  %idxprom76 = sext i32 %add75 to i64
  %arrayidx77 = getelementptr inbounds [10100 x i32]* %w, i32 0, i64 %idxprom76
  %63 = load i32* %arrayidx77, align 4
  %64 = load i32* %ww, align 4
  %cmp78 = icmp slt i32 %63, %64
  br i1 %cmp78, label %land.rhs79, label %land.end99

24
  %65 = load i32* %ww, align 4
  %66 = load i32* %j, align 4
  %67 = load i32* %k, align 4
  %add80 = add nsw i32 %66, %67
  %idxprom81 = sext i32 %add80 to i64
  %arrayidx82 = getelementptr inbounds [10100 x i32]* %w, i32 0, i64 %idxprom81
  store i32 %65, i32* %arrayidx82, align 4
  %68 = load i32* %j, align 4
  %idxprom83 = sext i32 %68 to i64
  %arrayidx84 = getelementptr inbounds [10100 x i32]* %b, i32 0, i64 %idxprom83
  %69 = load i32* %arrayidx84, align 4
  %70 = load i32* %B, align 4
  %71 = load i32* %k, align 4
  %mul85 = mul nsw i32 %70, %71
  %add86 = add nsw i32 %69, %mul85
  %72 = load i32* %j, align 4
  %73 = load i32* %k, align 4
  %add87 = add nsw i32 %72, %73
  %idxprom88 = sext i32 %add87 to i64
  %arrayidx89 = getelementptr inbounds [10100 x i32]* %b, i32 0, i64 %idxprom88
  store i32 %add86, i32* %arrayidx89, align 4
  %74 = load i32* %i, align 4
  %75 = load i32* %j, align 4
  %76 = load i32* %k, align 4
  %add90 = add nsw i32 %75, %76
  %idxprom91 = sext i32 %add90 to i64
  %arrayidx92 = getelementptr inbounds [10100 x i32]* %t, i32 0, i64 %idxprom91
  store i32 %74, i32* %arrayidx92, align 4
  %77 = load i32* %back, align 4
  %78 = load i32* %j, align 4
  %79 = load i32* %k, align 4
  %add93 = add nsw i32 %78, %79
  %cmp94 = icmp slt i32 %77, %add93
  br i1 %cmp94, label %land.rhs95, label %land.end98

25
  %80 = load i32* %j, align 4
  %81 = load i32* %k, align 4
  %add96 = add nsw i32 %80, %81
  store i32 %add96, i32* %back, align 4
  %tobool97 = icmp ne i32 %add96, 0
  br label %land.end98

26
  %82 = phi i1 [ false, %land.rhs79 ], [ %tobool97, %land.rhs95 ]
  br label %land.end99

27
  %83 = phi i1 [ false, %land.lhs.true74 ], [ false, %lor.lhs.false ], [ false, %cond.end ], [ %82, %land.end98 ]
  %84 = load i32* %k, align 4
  %inc101 = add nsw i32 %84, 1
  store i32 %inc101, i32* %k, align 4
  br label %for.cond23

28
  %85 = load i32* %j, align 4
  %dec = add nsw i32 %85, -1
  store i32 %dec, i32* %j, align 4
  br label %for.cond17

29
  %86 = load i32* %i, align 4
  %inc106 = add nsw i32 %86, 1
  store i32 %inc106, i32* %i, align 4
  br label %for.cond14

30
  %87 = load i32* %back, align 4
  %call108 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([4 x i8]* @.str2, i32 0, i32 0), i32 %87)
  %88 = load i32* %retval
  ret i32 %88
