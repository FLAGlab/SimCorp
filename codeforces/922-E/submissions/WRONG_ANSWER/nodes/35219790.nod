
1
  %retval = alloca i32, align 4
  %i = alloca i32, align 4
  %i7 = alloca i32, align 4
  %i17 = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %ref.tmp = alloca i64, align 8
  %ref.tmp56 = alloca i64, align 8
  %ref.tmp62 = alloca i64, align 8
  %ans = alloca i32, align 4
  %k79 = alloca i32, align 4
  store i32 0, i32* %retval
  %call = call zeroext i1 @_ZNSt8ios_base15sync_with_stdioEb(i1 zeroext false)
  %vtable = load i8** bitcast (%"class.std::basic_istream"* @_ZSt3cin to i8**)
  %vbase.offset.ptr = getelementptr i8* %vtable, i64 -24
  %0 = bitcast i8* %vbase.offset.ptr to i64*
  %vbase.offset = load i64* %0
  %add.ptr = getelementptr inbounds i8* bitcast (%"class.std::basic_istream"* @_ZSt3cin to i8*), i64 %vbase.offset
  %1 = bitcast i8* %add.ptr to %"class.std::basic_ios"*
  %call1 = call %"class.std::basic_ostream"* @_ZNSt9basic_iosIcSt11char_traitsIcEE3tieEPSo(%"class.std::basic_ios"* %1, %"class.std::basic_ostream"* null)
  %call2 = call %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* @_ZSt3cin, i32* @n)
  %call3 = call %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* %call2, i64* @W)
  %call4 = call %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* %call3, i64* @B)
  %call5 = call %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* %call4, i64* @X)
  store i32 1, i32* %i, align 4
  br label %for.cond

2
  %2 = load i32* %i, align 4
  %3 = load i32* @n, align 4
  %cmp = icmp sle i32 %2, %3
  br i1 %cmp, label %for.body, label %for.end

3
  %4 = load i32* %i, align 4
  %idxprom = sext i32 %4 to i64
  %arrayidx = getelementptr inbounds [1123 x i32]* @c, i32 0, i64 %idxprom
  %call6 = call %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* @_ZSt3cin, i32* %arrayidx)
  %5 = load i32* %i, align 4
  %inc = add nsw i32 %5, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

4
  store i32 1, i32* %i7, align 4
  br label %for.cond8

5
  %6 = load i32* %i7, align 4
  %7 = load i32* @n, align 4
  %cmp9 = icmp sle i32 %6, %7
  br i1 %cmp9, label %for.body10, label %for.end16

6
  %8 = load i32* %i7, align 4
  %idxprom11 = sext i32 %8 to i64
  %arrayidx12 = getelementptr inbounds [1123 x i32]* @cost, i32 0, i64 %idxprom11
  %call13 = call %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* @_ZSt3cin, i32* %arrayidx12)
  %9 = load i32* %i7, align 4
  %inc15 = add nsw i32 %9, 1
  store i32 %inc15, i32* %i7, align 4
  br label %for.cond8

7
  call void @llvm.memset.p0i8.i64(i8* bitcast ([2 x [11234 x i64]]* @dp to i8*), i8 -1, i64 179744, i32 16, i1 false)
  %10 = load i64* @W, align 8
  store i64 %10, i64* getelementptr inbounds ([2 x [11234 x i64]]* @dp, i32 0, i64 0, i64 0), align 8
  store i32 1, i32* %i17, align 4
  br label %for.cond18

8
  %11 = load i32* %i17, align 4
  %12 = load i32* @n, align 4
  %cmp19 = icmp sle i32 %11, %12
  br i1 %cmp19, label %for.body20, label %for.end78

9
  %13 = load i32* %i17, align 4
  %rem = srem i32 %13, 2
  %idxprom21 = sext i32 %rem to i64
  %arrayidx22 = getelementptr inbounds [2 x [11234 x i64]]* @dp, i32 0, i64 %idxprom21
  %14 = bitcast [11234 x i64]* %arrayidx22 to i8*
  call void @llvm.memset.p0i8.i64(i8* %14, i8 -1, i64 89872, i32 8, i1 false)
  store i32 0, i32* %j, align 4
  br label %for.cond23

10
  %15 = load i32* %j, align 4
  %16 = load i32* %i17, align 4
  %idxprom24 = sext i32 %16 to i64
  %arrayidx25 = getelementptr inbounds [1123 x i32]* @c, i32 0, i64 %idxprom24
  %17 = load i32* %arrayidx25, align 4
  %cmp26 = icmp sle i32 %15, %17
  br i1 %cmp26, label %for.body27, label %for.end75

11
  store i32 0, i32* %k, align 4
  br label %for.cond28

12
  %18 = load i32* %j, align 4
  %19 = load i32* %k, align 4
  %add = add nsw i32 %18, %19
  %cmp29 = icmp slt i32 %add, 11234
  br i1 %cmp29, label %for.body30, label %for.end72

13
  %20 = load i32* %k, align 4
  %idxprom31 = sext i32 %20 to i64
  %21 = load i32* %i17, align 4
  %rem32 = srem i32 %21, 2
  %tobool = icmp ne i32 %rem32, 0
  %lnot = xor i1 %tobool, true
  %idxprom33 = zext i1 %lnot to i64
  %arrayidx34 = getelementptr inbounds [2 x [11234 x i64]]* @dp, i32 0, i64 %idxprom33
  %arrayidx35 = getelementptr inbounds [11234 x i64]* %arrayidx34, i32 0, i64 %idxprom31
  %22 = load i64* %arrayidx35, align 8
  %cmp36 = icmp ne i64 %22, -1
  br i1 %cmp36, label %if.then, label %if.end

14
  %23 = load i32* %j, align 4
  %24 = load i32* %k, align 4
  %add37 = add nsw i32 %23, %24
  %idxprom38 = sext i32 %add37 to i64
  %25 = load i32* %i17, align 4
  %rem39 = srem i32 %25, 2
  %idxprom40 = sext i32 %rem39 to i64
  %arrayidx41 = getelementptr inbounds [2 x [11234 x i64]]* @dp, i32 0, i64 %idxprom40
  %arrayidx42 = getelementptr inbounds [11234 x i64]* %arrayidx41, i32 0, i64 %idxprom38
  %26 = load i32* %k, align 4
  %idxprom43 = sext i32 %26 to i64
  %27 = load i32* %i17, align 4
  %rem44 = srem i32 %27, 2
  %tobool45 = icmp ne i32 %rem44, 0
  %lnot46 = xor i1 %tobool45, true
  %idxprom47 = zext i1 %lnot46 to i64
  %arrayidx48 = getelementptr inbounds [2 x [11234 x i64]]* @dp, i32 0, i64 %idxprom47
  %arrayidx49 = getelementptr inbounds [11234 x i64]* %arrayidx48, i32 0, i64 %idxprom43
  %28 = load i64* %arrayidx49, align 8
  %29 = load i32* %i17, align 4
  %cmp50 = icmp ne i32 %29, 1
  %conv = zext i1 %cmp50 to i64
  %30 = load i64* @X, align 8
  %mul = mul nsw i64 %conv, %30
  %add51 = add nsw i64 %28, %mul
  store i64 %add51, i64* %ref.tmp, align 8
  %31 = load i64* @W, align 8
  %32 = load i32* %j, align 4
  %33 = load i32* %k, align 4
  %add52 = add nsw i32 %32, %33
  %conv53 = sext i32 %add52 to i64
  %34 = load i64* @B, align 8
  %mul54 = mul nsw i64 %conv53, %34
  %add55 = add nsw i64 %31, %mul54
  store i64 %add55, i64* %ref.tmp56, align 8
  %call57 = call i64* @_ZSt3minIxERKT_S2_S2_(i64* %ref.tmp, i64* %ref.tmp56)
  %35 = load i64* %call57
  %36 = load i32* %i17, align 4
  %idxprom58 = sext i32 %36 to i64
  %arrayidx59 = getelementptr inbounds [1123 x i32]* @cost, i32 0, i64 %idxprom58
  %37 = load i32* %arrayidx59, align 4
  %38 = load i32* %j, align 4
  %mul60 = mul nsw i32 %37, %38
  %conv61 = sext i32 %mul60 to i64
  %sub = sub nsw i64 %35, %conv61
  store i64 %sub, i64* %ref.tmp62, align 8
  %call63 = call i64* @_ZSt3maxIxERKT_S2_S2_(i64* %arrayidx42, i64* %ref.tmp62)
  %39 = load i64* %call63
  %40 = load i32* %j, align 4
  %41 = load i32* %k, align 4
  %add64 = add nsw i32 %40, %41
  %idxprom65 = sext i32 %add64 to i64
  %42 = load i32* %i17, align 4
  %rem66 = srem i32 %42, 2
  %idxprom67 = sext i32 %rem66 to i64
  %arrayidx68 = getelementptr inbounds [2 x [11234 x i64]]* @dp, i32 0, i64 %idxprom67
  %arrayidx69 = getelementptr inbounds [11234 x i64]* %arrayidx68, i32 0, i64 %idxprom65
  store i64 %39, i64* %arrayidx69, align 8
  br label %if.end

15
  %43 = load i32* %k, align 4
  %inc71 = add nsw i32 %43, 1
  store i32 %inc71, i32* %k, align 4
  br label %for.cond28

16
  %44 = load i32* %j, align 4
  %inc74 = add nsw i32 %44, 1
  store i32 %inc74, i32* %j, align 4
  br label %for.cond23

17
  %45 = load i32* %i17, align 4
  %inc77 = add nsw i32 %45, 1
  store i32 %inc77, i32* %i17, align 4
  br label %for.cond18

18
  store i32 0, i32* %ans, align 4
  store i32 0, i32* %k79, align 4
  br label %for.cond80

19
  %46 = load i32* %k79, align 4
  %cmp81 = icmp slt i32 %46, 11234
  br i1 %cmp81, label %for.body82, label %for.end94

20
  %47 = load i32* %k79, align 4
  %idxprom83 = sext i32 %47 to i64
  %48 = load i32* @n, align 4
  %rem84 = srem i32 %48, 2
  %idxprom85 = sext i32 %rem84 to i64
  %arrayidx86 = getelementptr inbounds [2 x [11234 x i64]]* @dp, i32 0, i64 %idxprom85
  %arrayidx87 = getelementptr inbounds [11234 x i64]* %arrayidx86, i32 0, i64 %idxprom83
  %49 = load i64* %arrayidx87, align 8
  %cmp88 = icmp ne i64 %49, -1
  br i1 %cmp88, label %if.then89, label %if.end91

21
  %call90 = call i32* @_ZSt3maxIiERKT_S2_S2_(i32* %ans, i32* %k79)
  %50 = load i32* %call90
  store i32 %50, i32* %ans, align 4
  br label %if.end91

22
  %51 = load i32* %k79, align 4
  %inc93 = add nsw i32 %51, 1
  store i32 %inc93, i32* %k79, align 4
  br label %for.cond80

23
  %52 = load i32* %ans, align 4
  %call95 = call %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* @_ZSt4cout, i32 %52)
  %call96 = call %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* %call95, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  %53 = load i32* %retval
  ret i32 %53
