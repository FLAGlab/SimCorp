
1
  %retval = alloca i32, align 4
  %sc = alloca i32, align 4
  %i = alloca i32, align 4
  %i4 = alloca i32, align 4
  %i15 = alloca i32, align 4
  %j = alloca i32, align 4
  %i32 = alloca i32, align 4
  %j36 = alloca i32, align 4
  %k = alloca i32, align 4
  %ref.tmp = alloca i32, align 4
  %ref.tmp68 = alloca i32, align 4
  %i92 = alloca i32, align 4
  store i32 0, i32* %retval
  %call = call i32 (i8*, ...)* @scanf(i8* getelementptr inbounds ([12 x i8]* @.str, i32 0, i32 0), i32* @n, i32* @w, i32* @b, i32* @x)
  store i32 0, i32* %sc, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

2
  %0 = load i32* %i, align 4
  %1 = load i32* @n, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

3
  %2 = load i32* %i, align 4
  %idx.ext = sext i32 %2 to i64
  %add.ptr = getelementptr inbounds i32* getelementptr inbounds ([1005 x i32]* @c, i32 0, i32 0), i64 %idx.ext
  %add.ptr1 = getelementptr inbounds i32* %add.ptr, i64 1
  %call2 = call i32 (i8*, ...)* @scanf(i8* getelementptr inbounds ([3 x i8]* @.str1, i32 0, i32 0), i32* %add.ptr1)
  %3 = load i32* %i, align 4
  %add = add nsw i32 %3, 1
  %idxprom = sext i32 %add to i64
  %arrayidx = getelementptr inbounds [1005 x i32]* @c, i32 0, i64 %idxprom
  %4 = load i32* %arrayidx, align 4
  %5 = load i32* %sc, align 4
  %add3 = add nsw i32 %5, %4
  store i32 %add3, i32* %sc, align 4
  %6 = load i32* %i, align 4
  %inc = add nsw i32 %6, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

4
  store i32 0, i32* %i4, align 4
  br label %for.cond5

5
  %7 = load i32* %i4, align 4
  %8 = load i32* @n, align 4
  %cmp6 = icmp slt i32 %7, %8
  br i1 %cmp6, label %for.body7, label %for.end14

6
  %9 = load i32* %i4, align 4
  %idx.ext8 = sext i32 %9 to i64
  %add.ptr9 = getelementptr inbounds i32* getelementptr inbounds ([1005 x i32]* @cost, i32 0, i32 0), i64 %idx.ext8
  %add.ptr10 = getelementptr inbounds i32* %add.ptr9, i64 1
  %call11 = call i32 (i8*, ...)* @scanf(i8* getelementptr inbounds ([3 x i8]* @.str1, i32 0, i32 0), i32* %add.ptr10)
  %10 = load i32* %i4, align 4
  %inc13 = add nsw i32 %10, 1
  store i32 %inc13, i32* %i4, align 4
  br label %for.cond5

7
  store i32 0, i32* %i15, align 4
  br label %for.cond16

8
  %11 = load i32* %i15, align 4
  %12 = load i32* @n, align 4
  %cmp17 = icmp sle i32 %11, %12
  br i1 %cmp17, label %for.body18, label %for.end31

9
  store i32 0, i32* %j, align 4
  br label %for.cond19

10
  %13 = load i32* %j, align 4
  %14 = load i32* %sc, align 4
  %cmp20 = icmp sle i32 %13, %14
  br i1 %cmp20, label %for.body21, label %for.end28

11
  %15 = load i32* %j, align 4
  %idxprom22 = sext i32 %15 to i64
  %16 = load i32* %i15, align 4
  %idxprom23 = sext i32 %16 to i64
  %arrayidx24 = getelementptr inbounds [1005 x [10005 x i32]]* @dp, i32 0, i64 %idxprom23
  %arrayidx25 = getelementptr inbounds [10005 x i32]* %arrayidx24, i32 0, i64 %idxprom22
  store i32 1000000000, i32* %arrayidx25, align 4
  %17 = load i32* %j, align 4
  %inc27 = add nsw i32 %17, 1
  store i32 %inc27, i32* %j, align 4
  br label %for.cond19

12
  %18 = load i32* %i15, align 4
  %inc30 = add nsw i32 %18, 1
  store i32 %inc30, i32* %i15, align 4
  br label %for.cond16

13
  store i32 0, i32* getelementptr inbounds ([1005 x [10005 x i32]]* @dp, i32 0, i64 0, i64 0), align 4
  store i32 1, i32* %i32, align 4
  br label %for.cond33

14
  %19 = load i32* %i32, align 4
  %20 = load i32* @n, align 4
  %cmp34 = icmp sle i32 %19, %20
  br i1 %cmp34, label %for.body35, label %for.end91

15
  store i32 0, i32* %j36, align 4
  br label %for.cond37

16
  %21 = load i32* %j36, align 4
  %22 = load i32* %sc, align 4
  %cmp38 = icmp sle i32 %21, %22
  br i1 %cmp38, label %for.body39, label %for.end88

17
  %23 = load i32* %j36, align 4
  %cmp40 = icmp eq i32 %23, 0
  br i1 %cmp40, label %if.then, label %if.end

18
  %24 = load i32* %j36, align 4
  %idxprom41 = sext i32 %24 to i64
  %25 = load i32* %i32, align 4
  %idxprom42 = sext i32 %25 to i64
  %arrayidx43 = getelementptr inbounds [1005 x [10005 x i32]]* @dp, i32 0, i64 %idxprom42
  %arrayidx44 = getelementptr inbounds [10005 x i32]* %arrayidx43, i32 0, i64 %idxprom41
  store i32 0, i32* %arrayidx44, align 4
  br label %if.end

19
  store i32 0, i32* %k, align 4
  br label %for.cond45

20
  %26 = load i32* %k, align 4
  %27 = load i32* %i32, align 4
  %idxprom46 = sext i32 %27 to i64
  %arrayidx47 = getelementptr inbounds [1005 x i32]* @c, i32 0, i64 %idxprom46
  %28 = load i32* %arrayidx47, align 4
  %cmp48 = icmp sle i32 %26, %28
  br i1 %cmp48, label %land.rhs, label %land.end

21
  %29 = load i32* %j36, align 4
  %30 = load i32* %k, align 4
  %sub = sub nsw i32 %29, %30
  %cmp49 = icmp sge i32 %sub, 0
  br label %land.end

22
  %31 = phi i1 [ false, %for.cond45 ], [ %cmp49, %land.rhs ]
  br i1 %31, label %for.body50, label %for.end77

23
  %32 = load i32* %j36, align 4
  %idxprom51 = sext i32 %32 to i64
  %33 = load i32* %i32, align 4
  %idxprom52 = sext i32 %33 to i64
  %arrayidx53 = getelementptr inbounds [1005 x [10005 x i32]]* @dp, i32 0, i64 %idxprom52
  %arrayidx54 = getelementptr inbounds [10005 x i32]* %arrayidx53, i32 0, i64 %idxprom51
  %34 = load i32* %j36, align 4
  %35 = load i32* %k, align 4
  %sub55 = sub nsw i32 %34, %35
  %idxprom56 = sext i32 %sub55 to i64
  %36 = load i32* %i32, align 4
  %sub57 = sub nsw i32 %36, 1
  %idxprom58 = sext i32 %sub57 to i64
  %arrayidx59 = getelementptr inbounds [1005 x [10005 x i32]]* @dp, i32 0, i64 %idxprom58
  %arrayidx60 = getelementptr inbounds [10005 x i32]* %arrayidx59, i32 0, i64 %idxprom56
  %37 = load i32* %arrayidx60, align 4
  %38 = load i32* %i32, align 4
  %idxprom61 = sext i32 %38 to i64
  %arrayidx62 = getelementptr inbounds [1005 x i32]* @cost, i32 0, i64 %idxprom61
  %39 = load i32* %arrayidx62, align 4
  %40 = load i32* %k, align 4
  %mul = mul nsw i32 %39, %40
  %add63 = add nsw i32 %37, %mul
  store i32 %add63, i32* %ref.tmp, align 4
  %41 = load i32* @w, align 4
  %42 = load i32* @b, align 4
  %43 = load i32* %j36, align 4
  %44 = load i32* %k, align 4
  %sub64 = sub nsw i32 %43, %44
  %mul65 = mul nsw i32 %42, %sub64
  %add66 = add nsw i32 %41, %mul65
  %sub67 = sub nsw i32 0, %add66
  store i32 %sub67, i32* %ref.tmp68, align 4
  %call69 = call i32* @_ZSt3maxIiERKT_S2_S2_(i32* %ref.tmp, i32* %ref.tmp68)
  %call70 = call i32* @_ZSt3minIiERKT_S2_S2_(i32* %arrayidx54, i32* %call69)
  %45 = load i32* %call70
  %46 = load i32* %j36, align 4
  %idxprom71 = sext i32 %46 to i64
  %47 = load i32* %i32, align 4
  %idxprom72 = sext i32 %47 to i64
  %arrayidx73 = getelementptr inbounds [1005 x [10005 x i32]]* @dp, i32 0, i64 %idxprom72
  %arrayidx74 = getelementptr inbounds [10005 x i32]* %arrayidx73, i32 0, i64 %idxprom71
  store i32 %45, i32* %arrayidx74, align 4
  %48 = load i32* %k, align 4
  %inc76 = add nsw i32 %48, 1
  store i32 %inc76, i32* %k, align 4
  br label %for.cond45

24
  %49 = load i32* %i32, align 4
  %cmp78 = icmp ne i32 %49, 1
  br i1 %cmp78, label %if.then79, label %if.end85

25
  %50 = load i32* @x, align 4
  %51 = load i32* %j36, align 4
  %idxprom80 = sext i32 %51 to i64
  %52 = load i32* %i32, align 4
  %idxprom81 = sext i32 %52 to i64
  %arrayidx82 = getelementptr inbounds [1005 x [10005 x i32]]* @dp, i32 0, i64 %idxprom81
  %arrayidx83 = getelementptr inbounds [10005 x i32]* %arrayidx82, i32 0, i64 %idxprom80
  %53 = load i32* %arrayidx83, align 4
  %sub84 = sub nsw i32 %53, %50
  store i32 %sub84, i32* %arrayidx83, align 4
  br label %if.end85

26
  %54 = load i32* %j36, align 4
  %inc87 = add nsw i32 %54, 1
  store i32 %inc87, i32* %j36, align 4
  br label %for.cond37

27
  %55 = load i32* %i32, align 4
  %inc90 = add nsw i32 %55, 1
  store i32 %inc90, i32* %i32, align 4
  br label %for.cond33

28
  %56 = load i32* %sc, align 4
  store i32 %56, i32* %i92, align 4
  br label %for.cond93

29
  %57 = load i32* %i92, align 4
  %cmp94 = icmp sge i32 %57, 0
  br i1 %cmp94, label %for.body95, label %for.end105

30
  %58 = load i32* %i92, align 4
  %idxprom96 = sext i32 %58 to i64
  %59 = load i32* @n, align 4
  %idxprom97 = sext i32 %59 to i64
  %arrayidx98 = getelementptr inbounds [1005 x [10005 x i32]]* @dp, i32 0, i64 %idxprom97
  %arrayidx99 = getelementptr inbounds [10005 x i32]* %arrayidx98, i32 0, i64 %idxprom96
  %60 = load i32* %arrayidx99, align 4
  %61 = load i32* @w, align 4
  %cmp100 = icmp sle i32 %60, %61
  br i1 %cmp100, label %if.then101, label %if.end103

31
  %62 = load i32* %i92, align 4
  %call102 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([3 x i8]* @.str1, i32 0, i32 0), i32 %62)
  store i32 0, i32* %retval
  br label %for.end105

32
  %63 = load i32* %i92, align 4
  %dec = add nsw i32 %63, -1
  store i32 %dec, i32* %i92, align 4
  br label %for.cond93

33
  %64 = load i32* %retval
  ret i32 %64
