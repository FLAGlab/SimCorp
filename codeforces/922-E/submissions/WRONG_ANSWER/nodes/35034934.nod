
1
  %retval = alloca i32, align 4
  %N = alloca i32, align 4
  %W = alloca i32, align 4
  %B = alloca i32, align 4
  %X = alloca i32, align 4
  %n = alloca [1010 x i32], align 16
  %c = alloca [1010 x i32], align 16
  %w = alloca [10100 x i32], align 16
  %b = alloca [10100 x i32], align 16
  %t = alloca [10100 x i32], align 16
  %back = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %ww = alloca i32, align 4
  %bb = alloca i32, align 4
  store i32 0, i32* %retval
  %0 = bitcast [10100 x i32]* %t to i8*
  call void @llvm.memset.p0i8.i64(i8* %0, i8 0, i64 40400, i32 16, i1 false)
  %call = call i32 (i8*, ...)* @scanf(i8* getelementptr inbounds ([9 x i8]* @.str, i32 0, i32 0), i32* %N, i32* %W, i32* %B, i32* %X)
  store i32 1, i32* %i, align 4
  br label %for.cond

2
  %1 = load i32* %i, align 4
  %2 = load i32* %N, align 4
  %cmp = icmp sle i32 %1, %2
  br i1 %cmp, label %for.body, label %for.end

3
  %arraydecay = getelementptr inbounds [1010 x i32]* %n, i32 0, i32 0
  %3 = load i32* %i, align 4
  %idx.ext = sext i32 %3 to i64
  %add.ptr = getelementptr inbounds i32* %arraydecay, i64 %idx.ext
  %call1 = call i32 (i8*, ...)* @scanf(i8* getelementptr inbounds ([3 x i8]* @.str1, i32 0, i32 0), i32* %add.ptr)
  %4 = load i32* %i, align 4
  %inc = add nsw i32 %4, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

4
  store i32 1, i32* %i, align 4
  br label %for.cond2

5
  %5 = load i32* %i, align 4
  %6 = load i32* %N, align 4
  %cmp3 = icmp sle i32 %5, %6
  br i1 %cmp3, label %for.body4, label %for.end11

6
  %arraydecay5 = getelementptr inbounds [1010 x i32]* %c, i32 0, i32 0
  %7 = load i32* %i, align 4
  %idx.ext6 = sext i32 %7 to i64
  %add.ptr7 = getelementptr inbounds i32* %arraydecay5, i64 %idx.ext6
  %call8 = call i32 (i8*, ...)* @scanf(i8* getelementptr inbounds ([3 x i8]* @.str1, i32 0, i32 0), i32* %add.ptr7)
  %8 = load i32* %i, align 4
  %inc10 = add nsw i32 %8, 1
  store i32 %inc10, i32* %i, align 4
  br label %for.cond2

7
  %9 = load i32* %W, align 4
  %arrayidx = getelementptr inbounds [10100 x i32]* %w, i32 0, i64 0
  store i32 %9, i32* %arrayidx, align 4
  %10 = load i32* %W, align 4
  %arrayidx12 = getelementptr inbounds [10100 x i32]* %b, i32 0, i64 0
  store i32 %10, i32* %arrayidx12, align 4
  %arrayidx13 = getelementptr inbounds [10100 x i32]* %t, i32 0, i64 0
  store i32 1, i32* %arrayidx13, align 4
  store i32 0, i32* %back, align 4
  store i32 1, i32* %i, align 4
  br label %for.cond14

8
  %11 = load i32* %i, align 4
  %12 = load i32* %N, align 4
  %cmp15 = icmp sle i32 %11, %12
  br i1 %cmp15, label %for.body16, label %for.end112

9
  %13 = load i32* %back, align 4
  store i32 %13, i32* %j, align 4
  br label %for.cond17

10
  %14 = load i32* %j, align 4
  %cmp18 = icmp sge i32 %14, 0
  br i1 %cmp18, label %land.rhs, label %land.end

11
  %15 = load i32* %j, align 4
  %16 = load i32* %i, align 4
  %idxprom = sext i32 %16 to i64
  %arrayidx19 = getelementptr inbounds [1010 x i32]* %n, i32 0, i64 %idxprom
  %17 = load i32* %arrayidx19, align 4
  %add = add nsw i32 %15, %17
  %idxprom20 = sext i32 %add to i64
  %arrayidx21 = getelementptr inbounds [10100 x i32]* %t, i32 0, i64 %idxprom20
  %18 = load i32* %arrayidx21, align 4
  %tobool = icmp ne i32 %18, 0
  %lnot = xor i1 %tobool, true
  br label %land.end

12
  %19 = phi i1 [ false, %for.cond17 ], [ %lnot, %land.rhs ]
  br i1 %19, label %for.body22, label %for.end109

13
  store i32 1, i32* %k, align 4
  br label %for.cond23

14
  %20 = load i32* %k, align 4
  %21 = load i32* %i, align 4
  %idxprom24 = sext i32 %21 to i64
  %arrayidx25 = getelementptr inbounds [1010 x i32]* %n, i32 0, i64 %idxprom24
  %22 = load i32* %arrayidx25, align 4
  %cmp26 = icmp sle i32 %20, %22
  br i1 %cmp26, label %for.body27, label %for.end107

15
  %23 = load i32* %i, align 4
  %24 = load i32* %j, align 4
  %idxprom28 = sext i32 %24 to i64
  %arrayidx29 = getelementptr inbounds [10100 x i32]* %t, i32 0, i64 %idxprom28
  %25 = load i32* %arrayidx29, align 4
  %sub = sub nsw i32 %23, %25
  %26 = load i32* %X, align 4
  %mul = mul nsw i32 %sub, %26
  %27 = load i32* %j, align 4
  %idxprom30 = sext i32 %27 to i64
  %arrayidx31 = getelementptr inbounds [10100 x i32]* %w, i32 0, i64 %idxprom30
  %28 = load i32* %arrayidx31, align 4
  %add32 = add nsw i32 %mul, %28
  %29 = load i32* %j, align 4
  %idxprom33 = sext i32 %29 to i64
  %arrayidx34 = getelementptr inbounds [10100 x i32]* %b, i32 0, i64 %idxprom33
  %30 = load i32* %arrayidx34, align 4
  %cmp35 = icmp slt i32 %add32, %30
  br i1 %cmp35, label %cond.true, label %cond.false

16
  %31 = load i32* %i, align 4
  %32 = load i32* %j, align 4
  %idxprom36 = sext i32 %32 to i64
  %arrayidx37 = getelementptr inbounds [10100 x i32]* %t, i32 0, i64 %idxprom36
  %33 = load i32* %arrayidx37, align 4
  %sub38 = sub nsw i32 %31, %33
  %34 = load i32* %X, align 4
  %mul39 = mul nsw i32 %sub38, %34
  %35 = load i32* %j, align 4
  %idxprom40 = sext i32 %35 to i64
  %arrayidx41 = getelementptr inbounds [10100 x i32]* %w, i32 0, i64 %idxprom40
  %36 = load i32* %arrayidx41, align 4
  %add42 = add nsw i32 %mul39, %36
  br label %cond.end

17
  %37 = load i32* %j, align 4
  %idxprom43 = sext i32 %37 to i64
  %arrayidx44 = getelementptr inbounds [10100 x i32]* %b, i32 0, i64 %idxprom43
  %38 = load i32* %arrayidx44, align 4
  br label %cond.end

18
  %cond = phi i32 [ %add42, %cond.true ], [ %38, %cond.false ]
  %39 = load i32* %k, align 4
  %40 = load i32* %i, align 4
  %idxprom45 = sext i32 %40 to i64
  %arrayidx46 = getelementptr inbounds [1010 x i32]* %c, i32 0, i64 %idxprom45
  %41 = load i32* %arrayidx46, align 4
  %mul47 = mul nsw i32 %39, %41
  %sub48 = sub nsw i32 %cond, %mul47
  store i32 %sub48, i32* %ww, align 4
  %42 = load i32* %ww, align 4
  %cmp49 = icmp sge i32 %42, 0
  br i1 %cmp49, label %land.lhs.true, label %land.end104

19
  %43 = load i32* %j, align 4
  %44 = load i32* %k, align 4
  %add50 = add nsw i32 %43, %44
  %idxprom51 = sext i32 %add50 to i64
  %arrayidx52 = getelementptr inbounds [10100 x i32]* %t, i32 0, i64 %idxprom51
  %45 = load i32* %arrayidx52, align 4
  %tobool53 = icmp ne i32 %45, 0
  br i1 %tobool53, label %lor.lhs.false, label %land.rhs84

20
  %46 = load i32* %j, align 4
  %47 = load i32* %k, align 4
  %add54 = add nsw i32 %46, %47
  %idxprom55 = sext i32 %add54 to i64
  %arrayidx56 = getelementptr inbounds [10100 x i32]* %w, i32 0, i64 %idxprom55
  %48 = load i32* %arrayidx56, align 4
  %49 = load i32* %i, align 4
  %50 = load i32* %j, align 4
  %51 = load i32* %k, align 4
  %add57 = add nsw i32 %50, %51
  %idxprom58 = sext i32 %add57 to i64
  %arrayidx59 = getelementptr inbounds [10100 x i32]* %t, i32 0, i64 %idxprom58
  %52 = load i32* %arrayidx59, align 4
  %sub60 = sub nsw i32 %49, %52
  %53 = load i32* %X, align 4
  %mul61 = mul nsw i32 %sub60, %53
  %add62 = add nsw i32 %48, %mul61
  %54 = load i32* %j, align 4
  %55 = load i32* %k, align 4
  %add63 = add nsw i32 %54, %55
  %idxprom64 = sext i32 %add63 to i64
  %arrayidx65 = getelementptr inbounds [10100 x i32]* %b, i32 0, i64 %idxprom64
  %56 = load i32* %arrayidx65, align 4
  %cmp66 = icmp slt i32 %add62, %56
  br i1 %cmp66, label %cond.true67, label %cond.false77

21
  %57 = load i32* %j, align 4
  %58 = load i32* %k, align 4
  %add68 = add nsw i32 %57, %58
  %idxprom69 = sext i32 %add68 to i64
  %arrayidx70 = getelementptr inbounds [10100 x i32]* %w, i32 0, i64 %idxprom69
  %59 = load i32* %arrayidx70, align 4
  %60 = load i32* %i, align 4
  %61 = load i32* %j, align 4
  %62 = load i32* %k, align 4
  %add71 = add nsw i32 %61, %62
  %idxprom72 = sext i32 %add71 to i64
  %arrayidx73 = getelementptr inbounds [10100 x i32]* %t, i32 0, i64 %idxprom72
  %63 = load i32* %arrayidx73, align 4
  %sub74 = sub nsw i32 %60, %63
  %64 = load i32* %X, align 4
  %mul75 = mul nsw i32 %sub74, %64
  %add76 = add nsw i32 %59, %mul75
  br label %cond.end81

22
  %65 = load i32* %j, align 4
  %66 = load i32* %k, align 4
  %add78 = add nsw i32 %65, %66
  %idxprom79 = sext i32 %add78 to i64
  %arrayidx80 = getelementptr inbounds [10100 x i32]* %b, i32 0, i64 %idxprom79
  %67 = load i32* %arrayidx80, align 4
  br label %cond.end81

23
  %cond82 = phi i32 [ %add76, %cond.true67 ], [ %67, %cond.false77 ]
  %68 = load i32* %ww, align 4
  %cmp83 = icmp slt i32 %cond82, %68
  br i1 %cmp83, label %land.rhs84, label %land.end104

24
  %69 = load i32* %ww, align 4
  %70 = load i32* %j, align 4
  %71 = load i32* %k, align 4
  %add85 = add nsw i32 %70, %71
  %idxprom86 = sext i32 %add85 to i64
  %arrayidx87 = getelementptr inbounds [10100 x i32]* %w, i32 0, i64 %idxprom86
  store i32 %69, i32* %arrayidx87, align 4
  %72 = load i32* %j, align 4
  %idxprom88 = sext i32 %72 to i64
  %arrayidx89 = getelementptr inbounds [10100 x i32]* %b, i32 0, i64 %idxprom88
  %73 = load i32* %arrayidx89, align 4
  %74 = load i32* %B, align 4
  %75 = load i32* %k, align 4
  %mul90 = mul nsw i32 %74, %75
  %add91 = add nsw i32 %73, %mul90
  %76 = load i32* %j, align 4
  %77 = load i32* %k, align 4
  %add92 = add nsw i32 %76, %77
  %idxprom93 = sext i32 %add92 to i64
  %arrayidx94 = getelementptr inbounds [10100 x i32]* %b, i32 0, i64 %idxprom93
  store i32 %add91, i32* %arrayidx94, align 4
  %78 = load i32* %i, align 4
  %79 = load i32* %j, align 4
  %80 = load i32* %k, align 4
  %add95 = add nsw i32 %79, %80
  %idxprom96 = sext i32 %add95 to i64
  %arrayidx97 = getelementptr inbounds [10100 x i32]* %t, i32 0, i64 %idxprom96
  store i32 %78, i32* %arrayidx97, align 4
  %81 = load i32* %back, align 4
  %82 = load i32* %j, align 4
  %83 = load i32* %k, align 4
  %add98 = add nsw i32 %82, %83
  %cmp99 = icmp slt i32 %81, %add98
  br i1 %cmp99, label %land.rhs100, label %land.end103

25
  %84 = load i32* %j, align 4
  %85 = load i32* %k, align 4
  %add101 = add nsw i32 %84, %85
  store i32 %add101, i32* %back, align 4
  %tobool102 = icmp ne i32 %add101, 0
  br label %land.end103

26
  %86 = phi i1 [ false, %land.rhs84 ], [ %tobool102, %land.rhs100 ]
  br label %land.end104

27
  %87 = phi i1 [ false, %cond.end81 ], [ false, %cond.end ], [ %86, %land.end103 ]
  %88 = load i32* %k, align 4
  %inc106 = add nsw i32 %88, 1
  store i32 %inc106, i32* %k, align 4
  br label %for.cond23

28
  %89 = load i32* %j, align 4
  %dec = add nsw i32 %89, -1
  store i32 %dec, i32* %j, align 4
  br label %for.cond17

29
  %90 = load i32* %i, align 4
  %inc111 = add nsw i32 %90, 1
  store i32 %inc111, i32* %i, align 4
  br label %for.cond14

30
  %91 = load i32* %back, align 4
  %call113 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([4 x i8]* @.str2, i32 0, i32 0), i32 %91)
  %92 = load i32* %retval
  ret i32 %92
