
1
  %retval = alloca i32, align 4
  %N = alloca i32, align 4
  %W = alloca i32, align 4
  %B = alloca i32, align 4
  %X = alloca i32, align 4
  %n = alloca [1010 x i32], align 16
  %c = alloca [1010 x i32], align 16
  %w = alloca [10100 x i32], align 16
  %b = alloca [10100 x i32], align 16
  %t = alloca [10100 x i32], align 16
  %back = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %ww = alloca i32, align 4
  %bb = alloca i32, align 4
  store i32 0, i32* %retval
  %0 = bitcast [10100 x i32]* %w to i8*
  call void @llvm.memset.p0i8.i64(i8* %0, i8 0, i64 40400, i32 16, i1 false)
  %1 = bitcast [10100 x i32]* %b to i8*
  call void @llvm.memset.p0i8.i64(i8* %1, i8 0, i64 40400, i32 16, i1 false)
  %2 = bitcast [10100 x i32]* %t to i8*
  call void @llvm.memset.p0i8.i64(i8* %2, i8 0, i64 40400, i32 16, i1 false)
  %call = call i32 (i8*, ...)* @scanf(i8* getelementptr inbounds ([9 x i8]* @.str, i32 0, i32 0), i32* %N, i32* %W, i32* %B, i32* %X)
  store i32 1, i32* %i, align 4
  br label %for.cond

2
  %3 = load i32* %i, align 4
  %4 = load i32* %N, align 4
  %cmp = icmp sle i32 %3, %4
  br i1 %cmp, label %for.body, label %for.end

3
  %arraydecay = getelementptr inbounds [1010 x i32]* %n, i32 0, i32 0
  %5 = load i32* %i, align 4
  %idx.ext = sext i32 %5 to i64
  %add.ptr = getelementptr inbounds i32* %arraydecay, i64 %idx.ext
  %call1 = call i32 (i8*, ...)* @scanf(i8* getelementptr inbounds ([3 x i8]* @.str1, i32 0, i32 0), i32* %add.ptr)
  %6 = load i32* %i, align 4
  %inc = add nsw i32 %6, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

4
  store i32 1, i32* %i, align 4
  br label %for.cond2

5
  %7 = load i32* %i, align 4
  %8 = load i32* %N, align 4
  %cmp3 = icmp sle i32 %7, %8
  br i1 %cmp3, label %for.body4, label %for.end11

6
  %arraydecay5 = getelementptr inbounds [1010 x i32]* %c, i32 0, i32 0
  %9 = load i32* %i, align 4
  %idx.ext6 = sext i32 %9 to i64
  %add.ptr7 = getelementptr inbounds i32* %arraydecay5, i64 %idx.ext6
  %call8 = call i32 (i8*, ...)* @scanf(i8* getelementptr inbounds ([3 x i8]* @.str1, i32 0, i32 0), i32* %add.ptr7)
  %10 = load i32* %i, align 4
  %inc10 = add nsw i32 %10, 1
  store i32 %inc10, i32* %i, align 4
  br label %for.cond2

7
  %11 = load i32* %W, align 4
  %arrayidx = getelementptr inbounds [10100 x i32]* %w, i32 0, i64 0
  store i32 %11, i32* %arrayidx, align 4
  %12 = load i32* %W, align 4
  %arrayidx12 = getelementptr inbounds [10100 x i32]* %b, i32 0, i64 0
  store i32 %12, i32* %arrayidx12, align 4
  %arrayidx13 = getelementptr inbounds [10100 x i32]* %t, i32 0, i64 0
  store i32 1, i32* %arrayidx13, align 4
  store i32 0, i32* %back, align 4
  store i32 1, i32* %i, align 4
  br label %for.cond14

8
  %13 = load i32* %i, align 4
  %14 = load i32* %N, align 4
  %cmp15 = icmp sle i32 %13, %14
  br i1 %cmp15, label %for.body16, label %for.end78

9
  %15 = load i32* %back, align 4
  store i32 %15, i32* %j, align 4
  br label %for.cond17

10
  %16 = load i32* %j, align 4
  %cmp18 = icmp sge i32 %16, 0
  br i1 %cmp18, label %for.body19, label %for.end75

11
  store i32 1, i32* %k, align 4
  br label %for.cond20

12
  %17 = load i32* %k, align 4
  %18 = load i32* %i, align 4
  %idxprom = sext i32 %18 to i64
  %arrayidx21 = getelementptr inbounds [1010 x i32]* %n, i32 0, i64 %idxprom
  %19 = load i32* %arrayidx21, align 4
  %cmp22 = icmp sle i32 %17, %19
  br i1 %cmp22, label %for.body23, label %for.end73

13
  %20 = load i32* %i, align 4
  %21 = load i32* %j, align 4
  %idxprom24 = sext i32 %21 to i64
  %arrayidx25 = getelementptr inbounds [10100 x i32]* %t, i32 0, i64 %idxprom24
  %22 = load i32* %arrayidx25, align 4
  %sub = sub nsw i32 %20, %22
  %23 = load i32* %X, align 4
  %mul = mul nsw i32 %sub, %23
  %24 = load i32* %j, align 4
  %idxprom26 = sext i32 %24 to i64
  %arrayidx27 = getelementptr inbounds [10100 x i32]* %w, i32 0, i64 %idxprom26
  %25 = load i32* %arrayidx27, align 4
  %add = add nsw i32 %mul, %25
  %26 = load i32* %j, align 4
  %idxprom28 = sext i32 %26 to i64
  %arrayidx29 = getelementptr inbounds [10100 x i32]* %b, i32 0, i64 %idxprom28
  %27 = load i32* %arrayidx29, align 4
  %cmp30 = icmp slt i32 %add, %27
  br i1 %cmp30, label %cond.true, label %cond.false

14
  %28 = load i32* %i, align 4
  %29 = load i32* %j, align 4
  %idxprom31 = sext i32 %29 to i64
  %arrayidx32 = getelementptr inbounds [10100 x i32]* %t, i32 0, i64 %idxprom31
  %30 = load i32* %arrayidx32, align 4
  %sub33 = sub nsw i32 %28, %30
  %31 = load i32* %X, align 4
  %mul34 = mul nsw i32 %sub33, %31
  %32 = load i32* %j, align 4
  %idxprom35 = sext i32 %32 to i64
  %arrayidx36 = getelementptr inbounds [10100 x i32]* %w, i32 0, i64 %idxprom35
  %33 = load i32* %arrayidx36, align 4
  %add37 = add nsw i32 %mul34, %33
  br label %cond.end

15
  %34 = load i32* %j, align 4
  %idxprom38 = sext i32 %34 to i64
  %arrayidx39 = getelementptr inbounds [10100 x i32]* %b, i32 0, i64 %idxprom38
  %35 = load i32* %arrayidx39, align 4
  br label %cond.end

16
  %cond = phi i32 [ %add37, %cond.true ], [ %35, %cond.false ]
  %36 = load i32* %k, align 4
  %37 = load i32* %i, align 4
  %idxprom40 = sext i32 %37 to i64
  %arrayidx41 = getelementptr inbounds [1010 x i32]* %c, i32 0, i64 %idxprom40
  %38 = load i32* %arrayidx41, align 4
  %mul42 = mul nsw i32 %36, %38
  %sub43 = sub nsw i32 %cond, %mul42
  store i32 %sub43, i32* %ww, align 4
  %39 = load i32* %ww, align 4
  %cmp44 = icmp sge i32 %39, 0
  br i1 %cmp44, label %land.lhs.true, label %land.end70

17
  %40 = load i32* %j, align 4
  %41 = load i32* %k, align 4
  %add45 = add nsw i32 %40, %41
  %idxprom46 = sext i32 %add45 to i64
  %arrayidx47 = getelementptr inbounds [10100 x i32]* %t, i32 0, i64 %idxprom46
  %42 = load i32* %arrayidx47, align 4
  %tobool = icmp ne i32 %42, 0
  br i1 %tobool, label %lor.lhs.false, label %land.rhs

18
  %43 = load i32* %j, align 4
  %44 = load i32* %k, align 4
  %add48 = add nsw i32 %43, %44
  %idxprom49 = sext i32 %add48 to i64
  %arrayidx50 = getelementptr inbounds [10100 x i32]* %w, i32 0, i64 %idxprom49
  %45 = load i32* %arrayidx50, align 4
  %46 = load i32* %ww, align 4
  %cmp51 = icmp slt i32 %45, %46
  br i1 %cmp51, label %land.rhs, label %land.end70

19
  %47 = load i32* %ww, align 4
  %48 = load i32* %j, align 4
  %49 = load i32* %k, align 4
  %add52 = add nsw i32 %48, %49
  %idxprom53 = sext i32 %add52 to i64
  %arrayidx54 = getelementptr inbounds [10100 x i32]* %w, i32 0, i64 %idxprom53
  store i32 %47, i32* %arrayidx54, align 4
  %50 = load i32* %j, align 4
  %idxprom55 = sext i32 %50 to i64
  %arrayidx56 = getelementptr inbounds [10100 x i32]* %b, i32 0, i64 %idxprom55
  %51 = load i32* %arrayidx56, align 4
  %52 = load i32* %B, align 4
  %53 = load i32* %k, align 4
  %mul57 = mul nsw i32 %52, %53
  %add58 = add nsw i32 %51, %mul57
  %54 = load i32* %j, align 4
  %55 = load i32* %k, align 4
  %add59 = add nsw i32 %54, %55
  %idxprom60 = sext i32 %add59 to i64
  %arrayidx61 = getelementptr inbounds [10100 x i32]* %b, i32 0, i64 %idxprom60
  store i32 %add58, i32* %arrayidx61, align 4
  %56 = load i32* %i, align 4
  %57 = load i32* %j, align 4
  %58 = load i32* %k, align 4
  %add62 = add nsw i32 %57, %58
  %idxprom63 = sext i32 %add62 to i64
  %arrayidx64 = getelementptr inbounds [10100 x i32]* %t, i32 0, i64 %idxprom63
  store i32 %56, i32* %arrayidx64, align 4
  %59 = load i32* %back, align 4
  %60 = load i32* %j, align 4
  %61 = load i32* %k, align 4
  %add65 = add nsw i32 %60, %61
  %cmp66 = icmp slt i32 %59, %add65
  br i1 %cmp66, label %land.rhs67, label %land.end

20
  %62 = load i32* %j, align 4
  %63 = load i32* %k, align 4
  %add68 = add nsw i32 %62, %63
  store i32 %add68, i32* %back, align 4
  %tobool69 = icmp ne i32 %add68, 0
  br label %land.end

21
  %64 = phi i1 [ false, %land.rhs ], [ %tobool69, %land.rhs67 ]
  br label %land.end70

22
  %65 = phi i1 [ false, %lor.lhs.false ], [ false, %cond.end ], [ %64, %land.end ]
  %66 = load i32* %k, align 4
  %inc72 = add nsw i32 %66, 1
  store i32 %inc72, i32* %k, align 4
  br label %for.cond20

23
  %67 = load i32* %j, align 4
  %dec = add nsw i32 %67, -1
  store i32 %dec, i32* %j, align 4
  br label %for.cond17

24
  %68 = load i32* %i, align 4
  %inc77 = add nsw i32 %68, 1
  store i32 %inc77, i32* %i, align 4
  br label %for.cond14

25
  %69 = load i32* %back, align 4
  %call79 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([4 x i8]* @.str2, i32 0, i32 0), i32 %69)
  %70 = load i32* %retval
  ret i32 %70
