
1
  %retval = alloca i32, align 4
  %sc = alloca i32, align 4
  %i = alloca i32, align 4
  %i4 = alloca i32, align 4
  %i15 = alloca i32, align 4
  %j = alloca i32, align 4
  %i32 = alloca i32, align 4
  %j36 = alloca i32, align 4
  %xx = alloca i32, align 4
  %k = alloca i32, align 4
  %ref.tmp = alloca i32, align 4
  %ref.tmp60 = alloca i32, align 4
  %ref.tmp66 = alloca i32, align 4
  %i92 = alloca i32, align 4
  store i32 0, i32* %retval
  %call = call i32 (i8*, ...)* @scanf(i8* getelementptr inbounds ([12 x i8]* @.str, i32 0, i32 0), i32* @n, i32* @w, i32* @b, i32* @x)
  store i32 0, i32* %sc, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

2
  %0 = load i32* %i, align 4
  %1 = load i32* @n, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

3
  %2 = load i32* %i, align 4
  %idx.ext = sext i32 %2 to i64
  %add.ptr = getelementptr inbounds i32* getelementptr inbounds ([1005 x i32]* @c, i32 0, i32 0), i64 %idx.ext
  %add.ptr1 = getelementptr inbounds i32* %add.ptr, i64 1
  %call2 = call i32 (i8*, ...)* @scanf(i8* getelementptr inbounds ([3 x i8]* @.str1, i32 0, i32 0), i32* %add.ptr1)
  %3 = load i32* %i, align 4
  %add = add nsw i32 %3, 1
  %idxprom = sext i32 %add to i64
  %arrayidx = getelementptr inbounds [1005 x i32]* @c, i32 0, i64 %idxprom
  %4 = load i32* %arrayidx, align 4
  %5 = load i32* %sc, align 4
  %add3 = add nsw i32 %5, %4
  store i32 %add3, i32* %sc, align 4
  %6 = load i32* %i, align 4
  %inc = add nsw i32 %6, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

4
  store i32 0, i32* %i4, align 4
  br label %for.cond5

5
  %7 = load i32* %i4, align 4
  %8 = load i32* @n, align 4
  %cmp6 = icmp slt i32 %7, %8
  br i1 %cmp6, label %for.body7, label %for.end14

6
  %9 = load i32* %i4, align 4
  %idx.ext8 = sext i32 %9 to i64
  %add.ptr9 = getelementptr inbounds i32* getelementptr inbounds ([1005 x i32]* @cost, i32 0, i32 0), i64 %idx.ext8
  %add.ptr10 = getelementptr inbounds i32* %add.ptr9, i64 1
  %call11 = call i32 (i8*, ...)* @scanf(i8* getelementptr inbounds ([3 x i8]* @.str1, i32 0, i32 0), i32* %add.ptr10)
  %10 = load i32* %i4, align 4
  %inc13 = add nsw i32 %10, 1
  store i32 %inc13, i32* %i4, align 4
  br label %for.cond5

7
  store i32 0, i32* %i15, align 4
  br label %for.cond16

8
  %11 = load i32* %i15, align 4
  %12 = load i32* @n, align 4
  %cmp17 = icmp sle i32 %11, %12
  br i1 %cmp17, label %for.body18, label %for.end31

9
  store i32 0, i32* %j, align 4
  br label %for.cond19

10
  %13 = load i32* %j, align 4
  %14 = load i32* %sc, align 4
  %cmp20 = icmp sle i32 %13, %14
  br i1 %cmp20, label %for.body21, label %for.end28

11
  %15 = load i32* %j, align 4
  %idxprom22 = sext i32 %15 to i64
  %16 = load i32* %i15, align 4
  %idxprom23 = sext i32 %16 to i64
  %arrayidx24 = getelementptr inbounds [1005 x [10005 x i32]]* @dp, i32 0, i64 %idxprom23
  %arrayidx25 = getelementptr inbounds [10005 x i32]* %arrayidx24, i32 0, i64 %idxprom22
  store i32 -2000000000, i32* %arrayidx25, align 4
  %17 = load i32* %j, align 4
  %inc27 = add nsw i32 %17, 1
  store i32 %inc27, i32* %j, align 4
  br label %for.cond19

12
  %18 = load i32* %i15, align 4
  %inc30 = add nsw i32 %18, 1
  store i32 %inc30, i32* %i15, align 4
  br label %for.cond16

13
  %19 = load i32* @w, align 4
  store i32 %19, i32* getelementptr inbounds ([1005 x [10005 x i32]]* @dp, i32 0, i64 0, i64 0), align 4
  store i32 1, i32* %i32, align 4
  br label %for.cond33

14
  %20 = load i32* %i32, align 4
  %21 = load i32* @n, align 4
  %cmp34 = icmp sle i32 %20, %21
  br i1 %cmp34, label %for.body35, label %for.end91

15
  store i32 0, i32* %j36, align 4
  br label %for.cond37

16
  %22 = load i32* %j36, align 4
  %23 = load i32* %sc, align 4
  %cmp38 = icmp sle i32 %22, %23
  br i1 %cmp38, label %for.body39, label %for.end88

17
  %24 = load i32* @x, align 4
  store i32 %24, i32* %xx, align 4
  %25 = load i32* %i32, align 4
  %cmp40 = icmp eq i32 %25, 1
  br i1 %cmp40, label %if.then, label %if.end

18
  store i32 0, i32* %xx, align 4
  br label %if.end

19
  store i32 0, i32* %k, align 4
  br label %for.cond41

20
  %26 = load i32* %k, align 4
  %27 = load i32* %i32, align 4
  %idxprom42 = sext i32 %27 to i64
  %arrayidx43 = getelementptr inbounds [1005 x i32]* @c, i32 0, i64 %idxprom42
  %28 = load i32* %arrayidx43, align 4
  %cmp44 = icmp sle i32 %26, %28
  br i1 %cmp44, label %land.rhs, label %land.end

21
  %29 = load i32* %j36, align 4
  %30 = load i32* %k, align 4
  %sub = sub nsw i32 %29, %30
  %cmp45 = icmp sge i32 %sub, 0
  br label %land.end

22
  %31 = phi i1 [ false, %for.cond41 ], [ %cmp45, %land.rhs ]
  br i1 %31, label %for.body46, label %for.end74

23
  %32 = load i32* %j36, align 4
  %idxprom47 = sext i32 %32 to i64
  %33 = load i32* %i32, align 4
  %idxprom48 = sext i32 %33 to i64
  %arrayidx49 = getelementptr inbounds [1005 x [10005 x i32]]* @dp, i32 0, i64 %idxprom48
  %arrayidx50 = getelementptr inbounds [10005 x i32]* %arrayidx49, i32 0, i64 %idxprom47
  %34 = load i32* %j36, align 4
  %35 = load i32* %k, align 4
  %sub51 = sub nsw i32 %34, %35
  %idxprom52 = sext i32 %sub51 to i64
  %36 = load i32* %i32, align 4
  %sub53 = sub nsw i32 %36, 1
  %idxprom54 = sext i32 %sub53 to i64
  %arrayidx55 = getelementptr inbounds [1005 x [10005 x i32]]* @dp, i32 0, i64 %idxprom54
  %arrayidx56 = getelementptr inbounds [10005 x i32]* %arrayidx55, i32 0, i64 %idxprom52
  %37 = load i32* %arrayidx56, align 4
  %38 = load i32* %xx, align 4
  %add57 = add nsw i32 %37, %38
  store i32 %add57, i32* %ref.tmp, align 4
  %39 = load i32* @w, align 4
  %40 = load i32* @b, align 4
  %41 = load i32* %j36, align 4
  %42 = load i32* %k, align 4
  %sub58 = sub nsw i32 %41, %42
  %mul = mul nsw i32 %40, %sub58
  %add59 = add nsw i32 %39, %mul
  store i32 %add59, i32* %ref.tmp60, align 4
  %call61 = call i32* @_ZSt3minIiERKT_S2_S2_(i32* %ref.tmp, i32* %ref.tmp60)
  %43 = load i32* %call61
  %44 = load i32* %i32, align 4
  %idxprom62 = sext i32 %44 to i64
  %arrayidx63 = getelementptr inbounds [1005 x i32]* @cost, i32 0, i64 %idxprom62
  %45 = load i32* %arrayidx63, align 4
  %46 = load i32* %k, align 4
  %mul64 = mul nsw i32 %45, %46
  %sub65 = sub nsw i32 %43, %mul64
  store i32 %sub65, i32* %ref.tmp66, align 4
  %call67 = call i32* @_ZSt3maxIiERKT_S2_S2_(i32* %arrayidx50, i32* %ref.tmp66)
  %47 = load i32* %call67
  %48 = load i32* %j36, align 4
  %idxprom68 = sext i32 %48 to i64
  %49 = load i32* %i32, align 4
  %idxprom69 = sext i32 %49 to i64
  %arrayidx70 = getelementptr inbounds [1005 x [10005 x i32]]* @dp, i32 0, i64 %idxprom69
  %arrayidx71 = getelementptr inbounds [10005 x i32]* %arrayidx70, i32 0, i64 %idxprom68
  store i32 %47, i32* %arrayidx71, align 4
  %50 = load i32* %k, align 4
  %inc73 = add nsw i32 %50, 1
  store i32 %inc73, i32* %k, align 4
  br label %for.cond41

24
  %51 = load i32* %j36, align 4
  %idxprom75 = sext i32 %51 to i64
  %52 = load i32* %i32, align 4
  %idxprom76 = sext i32 %52 to i64
  %arrayidx77 = getelementptr inbounds [1005 x [10005 x i32]]* @dp, i32 0, i64 %idxprom76
  %arrayidx78 = getelementptr inbounds [10005 x i32]* %arrayidx77, i32 0, i64 %idxprom75
  %53 = load i32* %arrayidx78, align 4
  %cmp79 = icmp slt i32 %53, 0
  br i1 %cmp79, label %if.then80, label %if.end85

25
  %54 = load i32* %j36, align 4
  %idxprom81 = sext i32 %54 to i64
  %55 = load i32* %i32, align 4
  %idxprom82 = sext i32 %55 to i64
  %arrayidx83 = getelementptr inbounds [1005 x [10005 x i32]]* @dp, i32 0, i64 %idxprom82
  %arrayidx84 = getelementptr inbounds [10005 x i32]* %arrayidx83, i32 0, i64 %idxprom81
  store i32 -2000000000, i32* %arrayidx84, align 4
  br label %if.end85

26
  %56 = load i32* %j36, align 4
  %inc87 = add nsw i32 %56, 1
  store i32 %inc87, i32* %j36, align 4
  br label %for.cond37

27
  %57 = load i32* %i32, align 4
  %inc90 = add nsw i32 %57, 1
  store i32 %inc90, i32* %i32, align 4
  br label %for.cond33

28
  %58 = load i32* %sc, align 4
  store i32 %58, i32* %i92, align 4
  br label %for.cond93

29
  %59 = load i32* %i92, align 4
  %cmp94 = icmp sge i32 %59, 0
  br i1 %cmp94, label %for.body95, label %for.end105

30
  %60 = load i32* %i92, align 4
  %idxprom96 = sext i32 %60 to i64
  %61 = load i32* @n, align 4
  %idxprom97 = sext i32 %61 to i64
  %arrayidx98 = getelementptr inbounds [1005 x [10005 x i32]]* @dp, i32 0, i64 %idxprom97
  %arrayidx99 = getelementptr inbounds [10005 x i32]* %arrayidx98, i32 0, i64 %idxprom96
  %62 = load i32* %arrayidx99, align 4
  %cmp100 = icmp sge i32 %62, 0
  br i1 %cmp100, label %if.then101, label %if.end103

31
  %63 = load i32* %i92, align 4
  %call102 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([3 x i8]* @.str1, i32 0, i32 0), i32 %63)
  store i32 0, i32* %retval
  br label %for.end105

32
  %64 = load i32* %i92, align 4
  %dec = add nsw i32 %64, -1
  store i32 %dec, i32* %i92, align 4
  br label %for.cond93

33
  %65 = load i32* %retval
  ret i32 %65
