
1
  %retval = alloca i32, align 4
  %n = alloca i32, align 4
  %w = alloca i32, align 4
  %b = alloca i32, align 4
  %x = alloca i32, align 4
  %sz = alloca i32, align 4
  %turn = alloca i32, align 4
  %c = alloca [1001 x i32], align 16
  %cost = alloca [1001 x i32], align 16
  %dp = alloca [2 x [10001 x i64]], align 16
  %i = alloca i32, align 4
  %i2 = alloca i32, align 4
  %i12 = alloca i32, align 4
  %i27 = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %ref.tmp = alloca i64, align 8
  %ref.tmp54 = alloca i64, align 8
  %ref.tmp62 = alloca i64, align 8
  %j76 = alloca i32, align 4
  %j94 = alloca i32, align 4
  store i32 0, i32* %retval
  store i32 0, i32* %sz, align 4
  store i32 0, i32* %turn, align 4
  %call = call i32 (i8*, ...)* @scanf(i8* getelementptr inbounds ([9 x i8]* @.str, i32 0, i32 0), i32* %n, i32* %w, i32* %b, i32* %x)
  store i32 1, i32* %i, align 4
  br label %for.cond

2
  %0 = load i32* %i, align 4
  %1 = load i32* %n, align 4
  %cmp = icmp sle i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

3
  %2 = load i32* %i, align 4
  %idxprom = sext i32 %2 to i64
  %arrayidx = getelementptr inbounds [1001 x i32]* %c, i32 0, i64 %idxprom
  %call1 = call i32 (i8*, ...)* @scanf(i8* getelementptr inbounds ([3 x i8]* @.str1, i32 0, i32 0), i32* %arrayidx)
  %3 = load i32* %i, align 4
  %inc = add nsw i32 %3, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

4
  store i32 1, i32* %i2, align 4
  br label %for.cond3

5
  %4 = load i32* %i2, align 4
  %5 = load i32* %n, align 4
  %cmp4 = icmp sle i32 %4, %5
  br i1 %cmp4, label %for.body5, label %for.end11

6
  %6 = load i32* %i2, align 4
  %idxprom6 = sext i32 %6 to i64
  %arrayidx7 = getelementptr inbounds [1001 x i32]* %cost, i32 0, i64 %idxprom6
  %call8 = call i32 (i8*, ...)* @scanf(i8* getelementptr inbounds ([3 x i8]* @.str1, i32 0, i32 0), i32* %arrayidx7)
  %7 = load i32* %i2, align 4
  %inc10 = add nsw i32 %7, 1
  store i32 %inc10, i32* %i2, align 4
  br label %for.cond3

7
  store i32 0, i32* %i12, align 4
  br label %for.cond13

8
  %8 = load i32* %i12, align 4
  %cmp14 = icmp sle i32 %8, 10000
  br i1 %cmp14, label %for.body15, label %for.end24

9
  %9 = load i32* %i12, align 4
  %idxprom16 = sext i32 %9 to i64
  %arrayidx17 = getelementptr inbounds [2 x [10001 x i64]]* %dp, i32 0, i64 1
  %arrayidx18 = getelementptr inbounds [10001 x i64]* %arrayidx17, i32 0, i64 %idxprom16
  store i64 -1000000000000, i64* %arrayidx18, align 8
  %10 = load i32* %i12, align 4
  %idxprom19 = sext i32 %10 to i64
  %arrayidx20 = getelementptr inbounds [2 x [10001 x i64]]* %dp, i32 0, i64 0
  %arrayidx21 = getelementptr inbounds [10001 x i64]* %arrayidx20, i32 0, i64 %idxprom19
  store i64 -1000000000000, i64* %arrayidx21, align 8
  %11 = load i32* %i12, align 4
  %inc23 = add nsw i32 %11, 1
  store i32 %inc23, i32* %i12, align 4
  br label %for.cond13

10
  %12 = load i32* %w, align 4
  %conv = sext i32 %12 to i64
  %arrayidx25 = getelementptr inbounds [2 x [10001 x i64]]* %dp, i32 0, i64 0
  %arrayidx26 = getelementptr inbounds [10001 x i64]* %arrayidx25, i32 0, i64 0
  store i64 %conv, i64* %arrayidx26, align 8
  store i32 1, i32* %i27, align 4
  br label %for.cond28

11
  %13 = load i32* %i27, align 4
  %14 = load i32* %n, align 4
  %cmp29 = icmp sle i32 %13, %14
  br i1 %cmp29, label %for.body30, label %for.end93

12
  store i32 0, i32* %j, align 4
  br label %for.cond31

13
  %15 = load i32* %j, align 4
  %16 = load i32* %sz, align 4
  %cmp32 = icmp sle i32 %15, %16
  br i1 %cmp32, label %for.body33, label %for.end75

14
  store i32 0, i32* %k, align 4
  br label %for.cond34

15
  %17 = load i32* %k, align 4
  %18 = load i32* %i27, align 4
  %idxprom35 = sext i32 %18 to i64
  %arrayidx36 = getelementptr inbounds [1001 x i32]* %c, i32 0, i64 %idxprom35
  %19 = load i32* %arrayidx36, align 4
  %cmp37 = icmp sle i32 %17, %19
  br i1 %cmp37, label %for.body38, label %for.end72

16
  %20 = load i32* %j, align 4
  %21 = load i32* %k, align 4
  %add = add nsw i32 %20, %21
  %idxprom39 = sext i32 %add to i64
  %22 = load i32* %turn, align 4
  %xor = xor i32 %22, 1
  %idxprom40 = sext i32 %xor to i64
  %arrayidx41 = getelementptr inbounds [2 x [10001 x i64]]* %dp, i32 0, i64 %idxprom40
  %arrayidx42 = getelementptr inbounds [10001 x i64]* %arrayidx41, i32 0, i64 %idxprom39
  %23 = load i32* %w, align 4
  %conv43 = sext i32 %23 to i64
  %24 = load i32* %j, align 4
  %conv44 = sext i32 %24 to i64
  %mul = mul nsw i64 1, %conv44
  %25 = load i32* %b, align 4
  %conv45 = sext i32 %25 to i64
  %mul46 = mul nsw i64 %mul, %conv45
  %add47 = add nsw i64 %conv43, %mul46
  store i64 %add47, i64* %ref.tmp, align 8
  %26 = load i32* %j, align 4
  %idxprom48 = sext i32 %26 to i64
  %27 = load i32* %turn, align 4
  %idxprom49 = sext i32 %27 to i64
  %arrayidx50 = getelementptr inbounds [2 x [10001 x i64]]* %dp, i32 0, i64 %idxprom49
  %arrayidx51 = getelementptr inbounds [10001 x i64]* %arrayidx50, i32 0, i64 %idxprom48
  %28 = load i64* %arrayidx51, align 8
  %29 = load i32* %x, align 4
  %conv52 = sext i32 %29 to i64
  %add53 = add nsw i64 %28, %conv52
  store i64 %add53, i64* %ref.tmp54, align 8
  %call55 = call i64* @_ZSt3minIxERKT_S2_S2_(i64* %ref.tmp, i64* %ref.tmp54)
  %30 = load i64* %call55
  %31 = load i32* %k, align 4
  %conv56 = sext i32 %31 to i64
  %mul57 = mul nsw i64 1, %conv56
  %32 = load i32* %i27, align 4
  %idxprom58 = sext i32 %32 to i64
  %arrayidx59 = getelementptr inbounds [1001 x i32]* %cost, i32 0, i64 %idxprom58
  %33 = load i32* %arrayidx59, align 4
  %conv60 = sext i32 %33 to i64
  %mul61 = mul nsw i64 %mul57, %conv60
  %sub = sub nsw i64 %30, %mul61
  store i64 %sub, i64* %ref.tmp62, align 8
  %call63 = call i64* @_ZSt3maxIxERKT_S2_S2_(i64* %arrayidx42, i64* %ref.tmp62)
  %34 = load i64* %call63
  %35 = load i32* %j, align 4
  %36 = load i32* %k, align 4
  %add64 = add nsw i32 %35, %36
  %idxprom65 = sext i32 %add64 to i64
  %37 = load i32* %turn, align 4
  %xor66 = xor i32 %37, 1
  %idxprom67 = sext i32 %xor66 to i64
  %arrayidx68 = getelementptr inbounds [2 x [10001 x i64]]* %dp, i32 0, i64 %idxprom67
  %arrayidx69 = getelementptr inbounds [10001 x i64]* %arrayidx68, i32 0, i64 %idxprom65
  store i64 %34, i64* %arrayidx69, align 8
  %38 = load i32* %k, align 4
  %inc71 = add nsw i32 %38, 1
  store i32 %inc71, i32* %k, align 4
  br label %for.cond34

17
  %39 = load i32* %j, align 4
  %inc74 = add nsw i32 %39, 1
  store i32 %inc74, i32* %j, align 4
  br label %for.cond31

18
  store i32 0, i32* %j76, align 4
  br label %for.cond77

19
  %40 = load i32* %j76, align 4
  %cmp78 = icmp sle i32 %40, 10000
  br i1 %cmp78, label %for.body79, label %for.end86

20
  %41 = load i32* %j76, align 4
  %idxprom80 = sext i32 %41 to i64
  %42 = load i32* %turn, align 4
  %idxprom81 = sext i32 %42 to i64
  %arrayidx82 = getelementptr inbounds [2 x [10001 x i64]]* %dp, i32 0, i64 %idxprom81
  %arrayidx83 = getelementptr inbounds [10001 x i64]* %arrayidx82, i32 0, i64 %idxprom80
  store i64 -1000000000000, i64* %arrayidx83, align 8
  %43 = load i32* %j76, align 4
  %inc85 = add nsw i32 %43, 1
  store i32 %inc85, i32* %j76, align 4
  br label %for.cond77

21
  %44 = load i32* %i27, align 4
  %idxprom87 = sext i32 %44 to i64
  %arrayidx88 = getelementptr inbounds [1001 x i32]* %c, i32 0, i64 %idxprom87
  %45 = load i32* %arrayidx88, align 4
  %46 = load i32* %sz, align 4
  %add89 = add nsw i32 %46, %45
  store i32 %add89, i32* %sz, align 4
  %47 = load i32* %turn, align 4
  %xor90 = xor i32 %47, 1
  store i32 %xor90, i32* %turn, align 4
  %48 = load i32* %i27, align 4
  %inc92 = add nsw i32 %48, 1
  store i32 %inc92, i32* %i27, align 4
  br label %for.cond28

22
  %49 = load i32* %sz, align 4
  store i32 %49, i32* %j94, align 4
  br label %for.cond95

23
  %50 = load i32* %j94, align 4
  %cmp96 = icmp sge i32 %50, 0
  br i1 %cmp96, label %for.body97, label %for.end105

24
  %51 = load i32* %j94, align 4
  %idxprom98 = sext i32 %51 to i64
  %52 = load i32* %turn, align 4
  %idxprom99 = sext i32 %52 to i64
  %arrayidx100 = getelementptr inbounds [2 x [10001 x i64]]* %dp, i32 0, i64 %idxprom99
  %arrayidx101 = getelementptr inbounds [10001 x i64]* %arrayidx100, i32 0, i64 %idxprom98
  %53 = load i64* %arrayidx101, align 8
  %cmp102 = icmp sge i64 %53, 0
  br i1 %cmp102, label %if.then, label %if.end

25
  %54 = load i32* %j94, align 4
  %call103 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([4 x i8]* @.str2, i32 0, i32 0), i32 %54)
  br label %for.end105

26
  %55 = load i32* %j94, align 4
  %dec = add nsw i32 %55, -1
  store i32 %dec, i32* %j94, align 4
  br label %for.cond95

27
  ret i32 0
