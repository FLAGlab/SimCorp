
1
  %retval = alloca i32, align 4
  %argc.addr = alloca i32, align 4
  %argv.addr = alloca i8**, align 8
  %tStart = alloca i64, align 8
  %sum = alloca i32, align 4
  %i = alloca i32, align 4
  %_b = alloca i32, align 4
  %i14 = alloca i32, align 4
  %_b15 = alloca i32, align 4
  %i26 = alloca i32, align 4
  %_b27 = alloca i32, align 4
  %j = alloca i32, align 4
  %_b31 = alloca i32, align 4
  %i45 = alloca i32, align 4
  %_b46 = alloca i32, align 4
  %j51 = alloca i32, align 4
  %_b52 = alloca i32, align 4
  %k = alloca i32, align 4
  %_b56 = alloca i32, align 4
  %ref.tmp = alloca i64, align 8
  %ref.tmp82 = alloca i64, align 8
  %ref.tmp87 = alloca i64, align 8
  %ref.tmp94 = alloca i64, align 8
  %j120 = alloca i32, align 4
  %_a = alloca i32, align 4
  store i32 0, i32* %retval
  store i32 %argc, i32* %argc.addr, align 4
  store i8** %argv, i8*** %argv.addr, align 8
  %call = call zeroext i1 @_ZNSt8ios_base15sync_with_stdioEb(i1 zeroext false)
  %vtable = load i8** bitcast (%"class.std::basic_istream"* @_ZSt3cin to i8**)
  %vbase.offset.ptr = getelementptr i8* %vtable, i64 -24
  %0 = bitcast i8* %vbase.offset.ptr to i64*
  %vbase.offset = load i64* %0
  %add.ptr = getelementptr inbounds i8* bitcast (%"class.std::basic_istream"* @_ZSt3cin to i8*), i64 %vbase.offset
  %1 = bitcast i8* %add.ptr to %"class.std::basic_ios"*
  %call1 = call %"class.std::basic_ostream"* @_ZNSt9basic_iosIcSt11char_traitsIcEE3tieEPSo(%"class.std::basic_ios"* %1, %"class.std::basic_ostream"* null)
  %call2 = call i64 @clock() #2
  store i64 %call2, i64* %tStart, align 8
  %2 = load %struct._IO_FILE** @stdin, align 8
  %call3 = call %struct._IO_FILE* @freopen(i8* getelementptr inbounds ([9 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8]* @.str1, i32 0, i32 0), %struct._IO_FILE* %2)
  %3 = load %struct._IO_FILE** @stdout, align 8
  %call4 = call %struct._IO_FILE* @freopen(i8* getelementptr inbounds ([9 x i8]* @.str2, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8]* @.str3, i32 0, i32 0), %struct._IO_FILE* %3)
  store i32 0, i32* %sum, align 4
  %call5 = call %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* @_ZSt3cin, i64* @n)
  %call6 = call %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* %call5, i64* @W)
  %call7 = call %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* %call6, i64* @B)
  %call8 = call %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* %call7, i64* @X)
  store i32 1, i32* %i, align 4
  %4 = load i64* @n, align 8
  %conv = trunc i64 %4 to i32
  store i32 %conv, i32* %_b, align 4
  br label %for.cond

2
  %5 = load i32* %i, align 4
  %6 = load i32* %_b, align 4
  %cmp = icmp sle i32 %5, %6
  br i1 %cmp, label %for.body, label %for.end

3
  %7 = load i32* %i, align 4
  %idxprom = sext i32 %7 to i64
  %arrayidx = getelementptr inbounds [1005 x i64]* @c, i32 0, i64 %idxprom
  %call9 = call %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* @_ZSt3cin, i64* %arrayidx)
  %8 = load i32* %i, align 4
  %idxprom10 = sext i32 %8 to i64
  %arrayidx11 = getelementptr inbounds [1005 x i64]* @c, i32 0, i64 %idxprom10
  %9 = load i64* %arrayidx11, align 8
  %10 = load i32* %sum, align 4
  %conv12 = sext i32 %10 to i64
  %add = add nsw i64 %conv12, %9
  %conv13 = trunc i64 %add to i32
  store i32 %conv13, i32* %sum, align 4
  %11 = load i32* %i, align 4
  %inc = add nsw i32 %11, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

4
  store i32 1, i32* %i14, align 4
  %12 = load i64* @n, align 8
  %conv16 = trunc i64 %12 to i32
  store i32 %conv16, i32* %_b15, align 4
  br label %for.cond17

5
  %13 = load i32* %i14, align 4
  %14 = load i32* %_b15, align 4
  %cmp18 = icmp sle i32 %13, %14
  br i1 %cmp18, label %for.body19, label %for.end25

6
  %15 = load i32* %i14, align 4
  %idxprom20 = sext i32 %15 to i64
  %arrayidx21 = getelementptr inbounds [1005 x i64]* @cost, i32 0, i64 %idxprom20
  %call22 = call %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* @_ZSt3cin, i64* %arrayidx21)
  %16 = load i32* %i14, align 4
  %inc24 = add nsw i32 %16, 1
  store i32 %inc24, i32* %i14, align 4
  br label %for.cond17

7
  store i32 0, i32* %i26, align 4
  store i32 1004, i32* %_b27, align 4
  br label %for.cond28

8
  %17 = load i32* %i26, align 4
  %18 = load i32* %_b27, align 4
  %cmp29 = icmp sle i32 %17, %18
  br i1 %cmp29, label %for.body30, label %for.end44

9
  store i32 0, i32* %j, align 4
  store i32 10004, i32* %_b31, align 4
  br label %for.cond32

10
  %19 = load i32* %j, align 4
  %20 = load i32* %_b31, align 4
  %cmp33 = icmp sle i32 %19, %20
  br i1 %cmp33, label %for.body34, label %for.end41

11
  %21 = load i32* %i26, align 4
  %idxprom35 = sext i32 %21 to i64
  %22 = load i32* %i26, align 4
  %idxprom36 = sext i32 %22 to i64
  %arrayidx37 = getelementptr inbounds [1005 x [10005 x i64]]* @dp, i32 0, i64 %idxprom36
  %arrayidx38 = getelementptr inbounds [10005 x i64]* %arrayidx37, i32 0, i64 %idxprom35
  store i64 -1, i64* %arrayidx38, align 8
  %23 = load i32* %j, align 4
  %inc40 = add nsw i32 %23, 1
  store i32 %inc40, i32* %j, align 4
  br label %for.cond32

12
  %24 = load i32* %i26, align 4
  %inc43 = add nsw i32 %24, 1
  store i32 %inc43, i32* %i26, align 4
  br label %for.cond28

13
  %25 = load i64* @W, align 8
  store i64 %25, i64* getelementptr inbounds ([1005 x [10005 x i64]]* @dp, i32 0, i64 0, i64 0), align 8
  store i32 1, i32* %i45, align 4
  %26 = load i64* @n, align 8
  %conv47 = trunc i64 %26 to i32
  store i32 %conv47, i32* %_b46, align 4
  br label %for.cond48

14
  %27 = load i32* %i45, align 4
  %28 = load i32* %_b46, align 4
  %cmp49 = icmp sle i32 %27, %28
  br i1 %cmp49, label %for.body50, label %for.end119

15
  store i32 0, i32* %j51, align 4
  %29 = load i32* %sum, align 4
  store i32 %29, i32* %_b52, align 4
  br label %for.cond53

16
  %30 = load i32* %j51, align 4
  %31 = load i32* %_b52, align 4
  %cmp54 = icmp sle i32 %30, %31
  br i1 %cmp54, label %for.body55, label %for.end116

17
  store i32 1, i32* %k, align 4
  %32 = load i32* %j51, align 4
  %conv57 = sext i32 %32 to i64
  %mul = mul nsw i64 1, %conv57
  store i64 %mul, i64* %ref.tmp, align 8
  %33 = load i32* %i45, align 4
  %idxprom58 = sext i32 %33 to i64
  %arrayidx59 = getelementptr inbounds [1005 x i64]* @c, i32 0, i64 %idxprom58
  %call60 = call i64* @_ZSt3minIxERKT_S2_S2_(i64* %ref.tmp, i64* %arrayidx59)
  %34 = load i64* %call60
  %conv61 = trunc i64 %34 to i32
  store i32 %conv61, i32* %_b56, align 4
  br label %for.cond62

18
  %35 = load i32* %k, align 4
  %36 = load i32* %_b56, align 4
  %cmp63 = icmp sle i32 %35, %36
  br i1 %cmp63, label %for.body64, label %for.end102

19
  %37 = load i32* %j51, align 4
  %38 = load i32* %k, align 4
  %sub = sub nsw i32 %37, %38
  %idxprom65 = sext i32 %sub to i64
  %39 = load i32* %i45, align 4
  %sub66 = sub nsw i32 %39, 1
  %idxprom67 = sext i32 %sub66 to i64
  %arrayidx68 = getelementptr inbounds [1005 x [10005 x i64]]* @dp, i32 0, i64 %idxprom67
  %arrayidx69 = getelementptr inbounds [10005 x i64]* %arrayidx68, i32 0, i64 %idxprom65
  %40 = load i64* %arrayidx69, align 8
  %cmp70 = icmp ne i64 %40, -1
  br i1 %cmp70, label %if.then, label %if.end

20
  %41 = load i32* %j51, align 4
  %idxprom71 = sext i32 %41 to i64
  %42 = load i32* %i45, align 4
  %idxprom72 = sext i32 %42 to i64
  %arrayidx73 = getelementptr inbounds [1005 x [10005 x i64]]* @dp, i32 0, i64 %idxprom72
  %arrayidx74 = getelementptr inbounds [10005 x i64]* %arrayidx73, i32 0, i64 %idxprom71
  %43 = load i32* %j51, align 4
  %44 = load i32* %k, align 4
  %sub75 = sub nsw i32 %43, %44
  %idxprom76 = sext i32 %sub75 to i64
  %45 = load i32* %i45, align 4
  %sub77 = sub nsw i32 %45, 1
  %idxprom78 = sext i32 %sub77 to i64
  %arrayidx79 = getelementptr inbounds [1005 x [10005 x i64]]* @dp, i32 0, i64 %idxprom78
  %arrayidx80 = getelementptr inbounds [10005 x i64]* %arrayidx79, i32 0, i64 %idxprom76
  %46 = load i64* %arrayidx80, align 8
  %47 = load i64* @X, align 8
  %add81 = add nsw i64 %46, %47
  store i64 %add81, i64* %ref.tmp82, align 8
  %48 = load i64* @W, align 8
  %49 = load i32* %j51, align 4
  %50 = load i32* %k, align 4
  %sub83 = sub nsw i32 %49, %50
  %conv84 = sext i32 %sub83 to i64
  %51 = load i64* @B, align 8
  %mul85 = mul nsw i64 %conv84, %51
  %add86 = add nsw i64 %48, %mul85
  store i64 %add86, i64* %ref.tmp87, align 8
  %call88 = call i64* @_ZSt3minIxERKT_S2_S2_(i64* %ref.tmp82, i64* %ref.tmp87)
  %52 = load i64* %call88
  %53 = load i32* %i45, align 4
  %idxprom89 = sext i32 %53 to i64
  %arrayidx90 = getelementptr inbounds [1005 x i64]* @cost, i32 0, i64 %idxprom89
  %54 = load i64* %arrayidx90, align 8
  %55 = load i32* %k, align 4
  %conv91 = sext i32 %55 to i64
  %mul92 = mul nsw i64 %54, %conv91
  %sub93 = sub nsw i64 %52, %mul92
  store i64 %sub93, i64* %ref.tmp94, align 8
  %call95 = call i64* @_ZSt3maxIxERKT_S2_S2_(i64* %arrayidx74, i64* %ref.tmp94)
  %56 = load i64* %call95
  %57 = load i32* %j51, align 4
  %idxprom96 = sext i32 %57 to i64
  %58 = load i32* %i45, align 4
  %idxprom97 = sext i32 %58 to i64
  %arrayidx98 = getelementptr inbounds [1005 x [10005 x i64]]* @dp, i32 0, i64 %idxprom97
  %arrayidx99 = getelementptr inbounds [10005 x i64]* %arrayidx98, i32 0, i64 %idxprom96
  store i64 %56, i64* %arrayidx99, align 8
  br label %if.end

21
  %59 = load i32* %k, align 4
  %inc101 = add nsw i32 %59, 1
  store i32 %inc101, i32* %k, align 4
  br label %for.cond62

22
  %call103 = call %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* @_ZSt4cerr, i8* getelementptr inbounds ([4 x i8]* @.str4, i32 0, i32 0))
  %60 = load i32* %i45, align 4
  %call104 = call %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* %call103, i32 %60)
  %call105 = call %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* %call104, i8* getelementptr inbounds ([3 x i8]* @.str5, i32 0, i32 0))
  %61 = load i32* %j51, align 4
  %call106 = call %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* %call105, i32 %61)
  %call107 = call %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* %call106, i8* getelementptr inbounds ([5 x i8]* @.str6, i32 0, i32 0))
  %62 = load i32* %j51, align 4
  %idxprom108 = sext i32 %62 to i64
  %63 = load i32* %i45, align 4
  %idxprom109 = sext i32 %63 to i64
  %arrayidx110 = getelementptr inbounds [1005 x [10005 x i64]]* @dp, i32 0, i64 %idxprom109
  %arrayidx111 = getelementptr inbounds [10005 x i64]* %arrayidx110, i32 0, i64 %idxprom108
  %64 = load i64* %arrayidx111, align 8
  %call112 = call %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"* %call107, i64 %64)
  %call113 = call %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* %call112, i8 signext 10)
  %65 = load i32* %j51, align 4
  %inc115 = add nsw i32 %65, 1
  store i32 %inc115, i32* %j51, align 4
  br label %for.cond53

23
  %66 = load i32* %i45, align 4
  %inc118 = add nsw i32 %66, 1
  store i32 %inc118, i32* %i45, align 4
  br label %for.cond48

24
  %67 = load i32* %sum, align 4
  store i32 %67, i32* %j120, align 4
  store i32 0, i32* %_a, align 4
  br label %for.cond121

25
  %68 = load i32* %j120, align 4
  %69 = load i32* %_a, align 4
  %cmp122 = icmp sge i32 %68, %69
  br i1 %cmp122, label %for.body123, label %for.end133

26
  %70 = load i32* %j120, align 4
  %idxprom124 = sext i32 %70 to i64
  %71 = load i64* @n, align 8
  %arrayidx125 = getelementptr inbounds [1005 x [10005 x i64]]* @dp, i32 0, i64 %71
  %arrayidx126 = getelementptr inbounds [10005 x i64]* %arrayidx125, i32 0, i64 %idxprom124
  %72 = load i64* %arrayidx126, align 8
  %cmp127 = icmp sge i64 %72, 0
  br i1 %cmp127, label %if.then128, label %if.end131

27
  %73 = load i32* %j120, align 4
  %call129 = call %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* @_ZSt4cout, i32 %73)
  %call130 = call %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* %call129, i8 signext 10)
  store i32 0, i32* %retval
  br label %return

28
  %74 = load i32* %j120, align 4
  %dec = add nsw i32 %74, -1
  store i32 %dec, i32* %j120, align 4
  br label %for.cond121

29
  %75 = load %struct._IO_FILE** @stderr, align 8
  %call134 = call i64 @clock() #2
  %76 = load i64* %tStart, align 8
  %sub135 = sub nsw i64 %call134, %76
  %conv136 = sitofp i64 %sub135 to double
  %div = fdiv double %conv136, 1.000000e+06
  %call137 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %75, i8* getelementptr inbounds ([19 x i8]* @.str7, i32 0, i32 0), double %div)
  store i32 0, i32* %retval
  br label %return

30
  %77 = load i32* %retval
  ret i32 %77
