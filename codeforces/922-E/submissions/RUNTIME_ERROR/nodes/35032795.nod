
1
  %retval = alloca i32, align 4
  %n = alloca i32, align 4
  %w = alloca i32, align 4
  %b = alloca i32, align 4
  %x = alloca i32, align 4
  %c = alloca %"class.std::vector", align 8
  %ref.tmp = alloca %"class.std::allocator", align 1
  %exn.slot = alloca i8*
  %ehselector.slot = alloca i32
  %cost = alloca %"class.std::vector", align 8
  %ref.tmp7 = alloca %"class.std::allocator", align 1
  %i = alloca i32, align 4
  %i16 = alloca i32, align 4
  %ans = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store i32 0, i32* %retval
  %call = call zeroext i1 @_ZNSt8ios_base15sync_with_stdioEb(i1 zeroext false)
  %vtable = load i8** bitcast (%"class.std::basic_istream"* @_ZSt3cin to i8**)
  %vbase.offset.ptr = getelementptr i8* %vtable, i64 -24
  %0 = bitcast i8* %vbase.offset.ptr to i64*
  %vbase.offset = load i64* %0
  %add.ptr = getelementptr inbounds i8* bitcast (%"class.std::basic_istream"* @_ZSt3cin to i8*), i64 %vbase.offset
  %1 = bitcast i8* %add.ptr to %"class.std::basic_ios"*
  %call1 = call %"class.std::basic_ostream"* @_ZNSt9basic_iosIcSt11char_traitsIcEE3tieEPSo(%"class.std::basic_ios"* %1, %"class.std::basic_ostream"* null)
  %call2 = call %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* @_ZSt3cin, i32* %n)
  %call3 = call %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* %call2, i32* %w)
  %call4 = call %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* %call3, i32* %b)
  %call5 = call %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* %call4, i32* %x)
  %2 = load i32* %n, align 4
  %conv = sext i32 %2 to i64
  call void @_ZNSaIiEC1Ev(%"class.std::allocator"* %ref.tmp) #2
  invoke void @_ZNSt6vectorIiSaIiEEC1EmRKS0_(%"class.std::vector"* %c, i64 %conv, %"class.std::allocator"* %ref.tmp)
          to label %invoke.cont unwind label %lpad

2
  call void @_ZNSaIiED1Ev(%"class.std::allocator"* %ref.tmp) #2
  %3 = load i32* %n, align 4
  %conv6 = sext i32 %3 to i64
  call void @_ZNSaIiEC1Ev(%"class.std::allocator"* %ref.tmp7) #2
  invoke void @_ZNSt6vectorIiSaIiEEC1EmRKS0_(%"class.std::vector"* %cost, i64 %conv6, %"class.std::allocator"* %ref.tmp7)
          to label %invoke.cont9 unwind label %lpad8

3
  call void @_ZNSaIiED1Ev(%"class.std::allocator"* %ref.tmp7) #2
  store i32 0, i32* %i, align 4
  br label %for.cond

4
  %4 = load i32* %i, align 4
  %5 = load i32* %n, align 4
  %cmp = icmp slt i32 %4, %5
  br i1 %cmp, label %for.body, label %for.end

5
  %6 = load i32* %i, align 4
  %conv10 = sext i32 %6 to i64
  %call13 = invoke i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector"* %c, i64 %conv10)
          to label %invoke.cont12 unwind label %lpad11

6
  %call15 = invoke %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* @_ZSt3cin, i32* %call13)
          to label %invoke.cont14 unwind label %lpad11

7
  %7 = load i32* %i, align 4
  %inc = add nsw i32 %7, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

8
  %8 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %9 = extractvalue { i8*, i32 } %8, 0
  store i8* %9, i8** %exn.slot
  %10 = extractvalue { i8*, i32 } %8, 1
  store i32 %10, i32* %ehselector.slot
  call void @_ZNSaIiED1Ev(%"class.std::allocator"* %ref.tmp) #2
  br label %eh.resume

9
  %11 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %12 = extractvalue { i8*, i32 } %11, 0
  store i8* %12, i8** %exn.slot
  %13 = extractvalue { i8*, i32 } %11, 1
  store i32 %13, i32* %ehselector.slot
  call void @_ZNSaIiED1Ev(%"class.std::allocator"* %ref.tmp7) #2
  br label %ehcleanup

10
  %14 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %15 = extractvalue { i8*, i32 } %14, 0
  store i8* %15, i8** %exn.slot
  %16 = extractvalue { i8*, i32 } %14, 1
  store i32 %16, i32* %ehselector.slot
  call void @_ZNSt6vectorIiSaIiEED1Ev(%"class.std::vector"* %cost) #2
  br label %ehcleanup

11
  store i32 0, i32* %i16, align 4
  br label %for.cond17

12
  %17 = load i32* %i16, align 4
  %18 = load i32* %n, align 4
  %cmp18 = icmp slt i32 %17, %18
  br i1 %cmp18, label %for.body19, label %for.end27

13
  %19 = load i32* %i16, align 4
  %conv20 = sext i32 %19 to i64
  %call22 = invoke i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector"* %cost, i64 %conv20)
          to label %invoke.cont21 unwind label %lpad11

14
  %call24 = invoke %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* @_ZSt3cin, i32* %call22)
          to label %invoke.cont23 unwind label %lpad11

15
  %20 = load i32* %i16, align 4
  %inc26 = add nsw i32 %20, 1
  store i32 %inc26, i32* %i16, align 4
  br label %for.cond17

16
  store i32 0, i32* %ans, align 4
  %21 = load i32* %w, align 4
  %22 = load i32* %w, align 4
  %23 = load i32* %b, align 4
  %24 = load i32* %x, align 4
  invoke void @_Z5buildiRSt6vectorIiSaIiEES2_iiiiiRi(i32 0, %"class.std::vector"* %c, %"class.std::vector"* %cost, i32 %21, i32 %22, i32 0, i32 %23, i32 %24, i32* %ans)
          to label %invoke.cont28 unwind label %lpad11

17
  %25 = load i32* %ans, align 4
  %call30 = invoke %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* @_ZSt4cout, i32 %25)
          to label %invoke.cont29 unwind label %lpad11

18
  %call32 = invoke %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* %call30, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
          to label %invoke.cont31 unwind label %lpad11

19
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  call void @_ZNSt6vectorIiSaIiEED1Ev(%"class.std::vector"* %cost) #2
  call void @_ZNSt6vectorIiSaIiEED1Ev(%"class.std::vector"* %c) #2
  %26 = load i32* %retval
  ret i32 %26

20
  call void @_ZNSt6vectorIiSaIiEED1Ev(%"class.std::vector"* %c) #2
  br label %eh.resume

21
  %exn = load i8** %exn.slot
  %sel = load i32* %ehselector.slot
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val33 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val33
