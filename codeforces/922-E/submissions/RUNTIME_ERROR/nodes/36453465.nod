
1
  %retval = alloca i32, align 4
  %n = alloca i64, align 8
  %w = alloca i64, align 8
  %b = alloca i64, align 8
  %x = alloca i64, align 8
  %sum = alloca i64, align 8
  %ans = alloca i32, align 4
  %i = alloca i32, align 4
  %i4 = alloca i32, align 4
  %i15 = alloca i32, align 4
  %j = alloca i32, align 4
  %temp = alloca i64, align 8
  %ref.tmp = alloca i64, align 8
  %k = alloca i32, align 4
  %next = alloca i64, align 8
  %ref.tmp113 = alloca i32, align 4
  store i32 0, i32* %retval
  store i64 0, i64* %sum, align 8
  store i32 0, i32* %ans, align 4
  call void @llvm.memset.p0i8.i64(i8* bitcast ([1005 x [1005 x [2 x i64]]]* @dp to i8*), i8 -1, i64 16160400, i32 16, i1 false)
  %call = call i32 (i8*, ...)* @scanf(i8* getelementptr inbounds ([17 x i8]* @.str, i32 0, i32 0), i64* %n, i64* %w, i64* %b, i64* %x)
  %0 = load i64* %w, align 8
  store i64 %0, i64* getelementptr inbounds ([1005 x [1005 x [2 x i64]]]* @dp, i32 0, i64 0, i64 0, i64 1), align 8
  store i64 %0, i64* getelementptr inbounds ([1005 x [1005 x [2 x i64]]]* @dp, i32 0, i64 0, i64 0, i64 0), align 8
  store i32 0, i32* %i, align 4
  br label %for.cond

2
  %1 = load i32* %i, align 4
  %conv = sext i32 %1 to i64
  %2 = load i64* %n, align 8
  %cmp = icmp slt i64 %conv, %2
  br i1 %cmp, label %for.body, label %for.end

3
  %3 = load i32* %i, align 4
  %idxprom = sext i32 %3 to i64
  %arrayidx = getelementptr inbounds [1005 x i64]* @num, i32 0, i64 %idxprom
  %call1 = call i32 (i8*, ...)* @scanf(i8* getelementptr inbounds ([5 x i8]* @.str1, i32 0, i32 0), i64* %arrayidx)
  %4 = load i32* %i, align 4
  %idxprom2 = sext i32 %4 to i64
  %arrayidx3 = getelementptr inbounds [1005 x i64]* @num, i32 0, i64 %idxprom2
  %5 = load i64* %arrayidx3, align 8
  %6 = load i64* %sum, align 8
  %add = add nsw i64 %6, %5
  store i64 %add, i64* %sum, align 8
  %7 = load i32* %i, align 4
  %inc = add nsw i32 %7, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

4
  store i32 0, i32* %i4, align 4
  br label %for.cond5

5
  %8 = load i32* %i4, align 4
  %conv6 = sext i32 %8 to i64
  %9 = load i64* %n, align 8
  %cmp7 = icmp slt i64 %conv6, %9
  br i1 %cmp7, label %for.body8, label %for.end14

6
  %10 = load i32* %i4, align 4
  %idxprom9 = sext i32 %10 to i64
  %arrayidx10 = getelementptr inbounds [1005 x i64]* @cost, i32 0, i64 %idxprom9
  %call11 = call i32 (i8*, ...)* @scanf(i8* getelementptr inbounds ([5 x i8]* @.str1, i32 0, i32 0), i64* %arrayidx10)
  %11 = load i32* %i4, align 4
  %inc13 = add nsw i32 %11, 1
  store i32 %inc13, i32* %i4, align 4
  br label %for.cond5

7
  store i32 0, i32* %i15, align 4
  br label %for.cond16

8
  %12 = load i32* %i15, align 4
  %conv17 = sext i32 %12 to i64
  %13 = load i64* %n, align 8
  %cmp18 = icmp slt i64 %conv17, %13
  br i1 %cmp18, label %for.body19, label %for.end124

9
  store i32 0, i32* %j, align 4
  br label %for.cond20

10
  %14 = load i32* %j, align 4
  %conv21 = sext i32 %14 to i64
  %15 = load i64* %sum, align 8
  %cmp22 = icmp slt i64 %conv21, %15
  br i1 %cmp22, label %for.body23, label %for.end121

11
  %16 = load i32* %j, align 4
  %idxprom24 = sext i32 %16 to i64
  %17 = load i32* %i15, align 4
  %idxprom25 = sext i32 %17 to i64
  %arrayidx26 = getelementptr inbounds [1005 x [1005 x [2 x i64]]]* @dp, i32 0, i64 %idxprom25
  %arrayidx27 = getelementptr inbounds [1005 x [2 x i64]]* %arrayidx26, i32 0, i64 %idxprom24
  %arrayidx28 = getelementptr inbounds [2 x i64]* %arrayidx27, i32 0, i64 1
  %18 = load i64* %arrayidx28, align 8
  %cmp29 = icmp ne i64 %18, -1
  br i1 %cmp29, label %if.then, label %if.end118

12
  %19 = load i32* %j, align 4
  %idxprom30 = sext i32 %19 to i64
  %20 = load i32* %i15, align 4
  %idxprom31 = sext i32 %20 to i64
  %arrayidx32 = getelementptr inbounds [1005 x [1005 x [2 x i64]]]* @dp, i32 0, i64 %idxprom31
  %arrayidx33 = getelementptr inbounds [1005 x [2 x i64]]* %arrayidx32, i32 0, i64 %idxprom30
  %arrayidx34 = getelementptr inbounds [2 x i64]* %arrayidx33, i32 0, i64 1
  %21 = load i64* %arrayidx34, align 8
  %22 = load i32* %i15, align 4
  %idxprom35 = sext i32 %22 to i64
  %arrayidx36 = getelementptr inbounds [1005 x i64]* @cost, i32 0, i64 %idxprom35
  %23 = load i64* %arrayidx36, align 8
  %div = sdiv i64 %21, %23
  store i64 %div, i64* %ref.tmp, align 8
  %24 = load i32* %i15, align 4
  %idxprom37 = sext i32 %24 to i64
  %arrayidx38 = getelementptr inbounds [1005 x i64]* @num, i32 0, i64 %idxprom37
  %call39 = call i64* @_ZSt3minIxERKT_S2_S2_(i64* %ref.tmp, i64* %arrayidx38)
  %25 = load i64* %call39
  store i64 %25, i64* %temp, align 8
  store i32 0, i32* %k, align 4
  br label %for.cond40

13
  %26 = load i32* %k, align 4
  %conv41 = sext i32 %26 to i64
  %27 = load i64* %temp, align 8
  %cmp42 = icmp sle i64 %conv41, %27
  br i1 %cmp42, label %for.body43, label %for.end117

14
  %28 = load i32* %j, align 4
  %idxprom44 = sext i32 %28 to i64
  %29 = load i32* %i15, align 4
  %idxprom45 = sext i32 %29 to i64
  %arrayidx46 = getelementptr inbounds [1005 x [1005 x [2 x i64]]]* @dp, i32 0, i64 %idxprom45
  %arrayidx47 = getelementptr inbounds [1005 x [2 x i64]]* %arrayidx46, i32 0, i64 %idxprom44
  %arrayidx48 = getelementptr inbounds [2 x i64]* %arrayidx47, i32 0, i64 1
  %30 = load i64* %arrayidx48, align 8
  %31 = load i32* %k, align 4
  %conv49 = sext i32 %31 to i64
  %32 = load i32* %i15, align 4
  %idxprom50 = sext i32 %32 to i64
  %arrayidx51 = getelementptr inbounds [1005 x i64]* @cost, i32 0, i64 %idxprom50
  %33 = load i64* %arrayidx51, align 8
  %mul = mul nsw i64 %conv49, %33
  %sub = sub nsw i64 %30, %mul
  %34 = load i64* %x, align 8
  %add52 = add nsw i64 %sub, %34
  %35 = load i32* %j, align 4
  %idxprom53 = sext i32 %35 to i64
  %36 = load i32* %i15, align 4
  %idxprom54 = sext i32 %36 to i64
  %arrayidx55 = getelementptr inbounds [1005 x [1005 x [2 x i64]]]* @dp, i32 0, i64 %idxprom54
  %arrayidx56 = getelementptr inbounds [1005 x [2 x i64]]* %arrayidx55, i32 0, i64 %idxprom53
  %arrayidx57 = getelementptr inbounds [2 x i64]* %arrayidx56, i32 0, i64 0
  %37 = load i64* %arrayidx57, align 8
  %38 = load i32* %k, align 4
  %conv58 = sext i32 %38 to i64
  %39 = load i64* %b, align 8
  %mul59 = mul nsw i64 %conv58, %39
  %add60 = add nsw i64 %37, %mul59
  %cmp61 = icmp sle i64 %add52, %add60
  br i1 %cmp61, label %cond.true, label %cond.false

15
  %40 = load i32* %j, align 4
  %idxprom62 = sext i32 %40 to i64
  %41 = load i32* %i15, align 4
  %idxprom63 = sext i32 %41 to i64
  %arrayidx64 = getelementptr inbounds [1005 x [1005 x [2 x i64]]]* @dp, i32 0, i64 %idxprom63
  %arrayidx65 = getelementptr inbounds [1005 x [2 x i64]]* %arrayidx64, i32 0, i64 %idxprom62
  %arrayidx66 = getelementptr inbounds [2 x i64]* %arrayidx65, i32 0, i64 1
  %42 = load i64* %arrayidx66, align 8
  %43 = load i32* %k, align 4
  %conv67 = sext i32 %43 to i64
  %44 = load i32* %i15, align 4
  %idxprom68 = sext i32 %44 to i64
  %arrayidx69 = getelementptr inbounds [1005 x i64]* @cost, i32 0, i64 %idxprom68
  %45 = load i64* %arrayidx69, align 8
  %mul70 = mul nsw i64 %conv67, %45
  %sub71 = sub nsw i64 %42, %mul70
  %46 = load i64* %x, align 8
  %add72 = add nsw i64 %sub71, %46
  br label %cond.end

16
  %47 = load i32* %j, align 4
  %idxprom73 = sext i32 %47 to i64
  %48 = load i32* %i15, align 4
  %idxprom74 = sext i32 %48 to i64
  %arrayidx75 = getelementptr inbounds [1005 x [1005 x [2 x i64]]]* @dp, i32 0, i64 %idxprom74
  %arrayidx76 = getelementptr inbounds [1005 x [2 x i64]]* %arrayidx75, i32 0, i64 %idxprom73
  %arrayidx77 = getelementptr inbounds [2 x i64]* %arrayidx76, i32 0, i64 0
  %49 = load i64* %arrayidx77, align 8
  %50 = load i32* %k, align 4
  %conv78 = sext i32 %50 to i64
  %51 = load i64* %b, align 8
  %mul79 = mul nsw i64 %conv78, %51
  %add80 = add nsw i64 %49, %mul79
  br label %cond.end

17
  %cond = phi i64 [ %add72, %cond.true ], [ %add80, %cond.false ]
  store i64 %cond, i64* %next, align 8
  %52 = load i32* %j, align 4
  %53 = load i32* %k, align 4
  %add81 = add nsw i32 %52, %53
  %idxprom82 = sext i32 %add81 to i64
  %54 = load i32* %i15, align 4
  %add83 = add nsw i32 %54, 1
  %idxprom84 = sext i32 %add83 to i64
  %arrayidx85 = getelementptr inbounds [1005 x [1005 x [2 x i64]]]* @dp, i32 0, i64 %idxprom84
  %arrayidx86 = getelementptr inbounds [1005 x [2 x i64]]* %arrayidx85, i32 0, i64 %idxprom82
  %arrayidx87 = getelementptr inbounds [2 x i64]* %arrayidx86, i32 0, i64 1
  %55 = load i64* %arrayidx87, align 8
  %56 = load i64* %next, align 8
  %cmp88 = icmp slt i64 %55, %56
  br i1 %cmp88, label %if.then89, label %if.end

18
  %57 = load i32* %j, align 4
  %idxprom90 = sext i32 %57 to i64
  %58 = load i32* %i15, align 4
  %idxprom91 = sext i32 %58 to i64
  %arrayidx92 = getelementptr inbounds [1005 x [1005 x [2 x i64]]]* @dp, i32 0, i64 %idxprom91
  %arrayidx93 = getelementptr inbounds [1005 x [2 x i64]]* %arrayidx92, i32 0, i64 %idxprom90
  %arrayidx94 = getelementptr inbounds [2 x i64]* %arrayidx93, i32 0, i64 0
  %59 = load i64* %arrayidx94, align 8
  %60 = load i32* %k, align 4
  %conv95 = sext i32 %60 to i64
  %61 = load i64* %b, align 8
  %mul96 = mul nsw i64 %conv95, %61
  %add97 = add nsw i64 %59, %mul96
  %62 = load i32* %j, align 4
  %63 = load i32* %k, align 4
  %add98 = add nsw i32 %62, %63
  %idxprom99 = sext i32 %add98 to i64
  %64 = load i32* %i15, align 4
  %add100 = add nsw i32 %64, 1
  %idxprom101 = sext i32 %add100 to i64
  %arrayidx102 = getelementptr inbounds [1005 x [1005 x [2 x i64]]]* @dp, i32 0, i64 %idxprom101
  %arrayidx103 = getelementptr inbounds [1005 x [2 x i64]]* %arrayidx102, i32 0, i64 %idxprom99
  %arrayidx104 = getelementptr inbounds [2 x i64]* %arrayidx103, i32 0, i64 0
  store i64 %add97, i64* %arrayidx104, align 8
  %65 = load i64* %next, align 8
  %66 = load i32* %j, align 4
  %67 = load i32* %k, align 4
  %add105 = add nsw i32 %66, %67
  %idxprom106 = sext i32 %add105 to i64
  %68 = load i32* %i15, align 4
  %add107 = add nsw i32 %68, 1
  %idxprom108 = sext i32 %add107 to i64
  %arrayidx109 = getelementptr inbounds [1005 x [1005 x [2 x i64]]]* @dp, i32 0, i64 %idxprom108
  %arrayidx110 = getelementptr inbounds [1005 x [2 x i64]]* %arrayidx109, i32 0, i64 %idxprom106
  %arrayidx111 = getelementptr inbounds [2 x i64]* %arrayidx110, i32 0, i64 1
  store i64 %65, i64* %arrayidx111, align 8
  br label %if.end

19
  %69 = load i32* %j, align 4
  %70 = load i32* %k, align 4
  %add112 = add nsw i32 %69, %70
  store i32 %add112, i32* %ref.tmp113, align 4
  %call114 = call i32* @_ZSt3maxIiERKT_S2_S2_(i32* %ans, i32* %ref.tmp113)
  %71 = load i32* %call114
  store i32 %71, i32* %ans, align 4
  %72 = load i32* %k, align 4
  %inc116 = add nsw i32 %72, 1
  store i32 %inc116, i32* %k, align 4
  br label %for.cond40

20
  br label %if.end118

21
  %73 = load i32* %j, align 4
  %inc120 = add nsw i32 %73, 1
  store i32 %inc120, i32* %j, align 4
  br label %for.cond20

22
  %74 = load i32* %i15, align 4
  %inc123 = add nsw i32 %74, 1
  store i32 %inc123, i32* %i15, align 4
  br label %for.cond16

23
  %75 = load i32* %ans, align 4
  %call125 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([4 x i8]* @.str2, i32 0, i32 0), i32 %75)
  ret i32 0
