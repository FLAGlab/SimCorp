
1
  %retval = alloca i32, align 4
  %n = alloca i32, align 4
  %W = alloca i64, align 8
  %B = alloca i64, align 8
  %X = alloca i64, align 8
  %PQ = alloca %"class.std::priority_queue", align 8
  %ref.tmp = alloca %"struct.std::less", align 1
  %ref.tmp6 = alloca %"class.std::vector", align 8
  %exn.slot = alloca i8*
  %ehselector.slot = alloca i32
  %val = alloca i64, align 8
  %capacity = alloca i64, align 8
  %birds = alloca i32, align 4
  %bir = alloca %"class.std::vector", align 8
  %ref.tmp7 = alloca %"class.std::allocator", align 1
  %i = alloca i32, align 4
  %i16 = alloca i32, align 4
  %v = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  store i32 0, i32* %retval
  %call = call zeroext i1 @_ZNSt8ios_base15sync_with_stdioEb(i1 zeroext false)
  %vtable = load i8** bitcast (%"class.std::basic_istream"* @_ZSt3cin to i8**)
  %vbase.offset.ptr = getelementptr i8* %vtable, i64 -24
  %0 = bitcast i8* %vbase.offset.ptr to i64*
  %vbase.offset = load i64* %0
  %add.ptr = getelementptr inbounds i8* bitcast (%"class.std::basic_istream"* @_ZSt3cin to i8*), i64 %vbase.offset
  %1 = bitcast i8* %add.ptr to %"class.std::basic_ios"*
  %call1 = call %"class.std::basic_ostream"* @_ZNSt9basic_iosIcSt11char_traitsIcEE3tieEPSo(%"class.std::basic_ios"* %1, %"class.std::basic_ostream"* null)
  %call2 = call %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* @_ZSt3cin, i32* %n)
  %call3 = call %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* %call2, i64* %W)
  %call4 = call %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* %call3, i64* %B)
  %call5 = call %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* %call4, i64* %X)
  call void @_ZNSt6vectorIxSaIxEEC1Ev(%"class.std::vector"* %ref.tmp6)
  invoke void @_ZNSt14priority_queueIxSt6vectorIxSaIxEESt4lessIxEEC1ERKS4_OS2_(%"class.std::priority_queue"* %PQ, %"struct.std::less"* %ref.tmp, %"class.std::vector"* %ref.tmp6)
          to label %invoke.cont unwind label %lpad

2
  call void @_ZNSt6vectorIxSaIxEED1Ev(%"class.std::vector"* %ref.tmp6) #2
  %2 = load i64* %W, align 8
  store i64 %2, i64* %capacity, align 8
  store i32 0, i32* %birds, align 4
  %3 = load i32* %n, align 4
  %conv = sext i32 %3 to i64
  call void @_ZNSaIxEC1Ev(%"class.std::allocator"* %ref.tmp7) #2
  invoke void @_ZNSt6vectorIxSaIxEEC1EmRKS0_(%"class.std::vector"* %bir, i64 %conv, %"class.std::allocator"* %ref.tmp7)
          to label %invoke.cont9 unwind label %lpad8

3
  call void @_ZNSaIxED1Ev(%"class.std::allocator"* %ref.tmp7) #2
  store i32 0, i32* %i, align 4
  br label %for.cond

4
  %4 = load i32* %i, align 4
  %5 = load i32* %n, align 4
  %cmp = icmp slt i32 %4, %5
  br i1 %cmp, label %for.body, label %for.end

5
  %6 = load i32* %i, align 4
  %conv10 = sext i32 %6 to i64
  %call13 = invoke i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector"* %bir, i64 %conv10)
          to label %invoke.cont12 unwind label %lpad11

6
  %call15 = invoke %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* @_ZSt3cin, i64* %call13)
          to label %invoke.cont14 unwind label %lpad11

7
  %7 = load i32* %i, align 4
  %inc = add nsw i32 %7, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

8
  %8 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %9 = extractvalue { i8*, i32 } %8, 0
  store i8* %9, i8** %exn.slot
  %10 = extractvalue { i8*, i32 } %8, 1
  store i32 %10, i32* %ehselector.slot
  call void @_ZNSt6vectorIxSaIxEED1Ev(%"class.std::vector"* %ref.tmp6) #2
  br label %eh.resume

9
  %11 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %12 = extractvalue { i8*, i32 } %11, 0
  store i8* %12, i8** %exn.slot
  %13 = extractvalue { i8*, i32 } %11, 1
  store i32 %13, i32* %ehselector.slot
  call void @_ZNSaIxED1Ev(%"class.std::allocator"* %ref.tmp7) #2
  br label %ehcleanup

10
  %14 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %15 = extractvalue { i8*, i32 } %14, 0
  store i8* %15, i8** %exn.slot
  %16 = extractvalue { i8*, i32 } %14, 1
  store i32 %16, i32* %ehselector.slot
  call void @_ZNSt6vectorIxSaIxEED1Ev(%"class.std::vector"* %bir) #2
  br label %ehcleanup

11
  store i32 0, i32* %i16, align 4
  br label %for.cond17

12
  %17 = load i32* %i16, align 4
  %18 = load i32* %n, align 4
  %cmp18 = icmp slt i32 %17, %18
  br i1 %cmp18, label %for.body19, label %for.end65

13
  %call21 = invoke %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* @_ZSt3cin, i64* %val)
          to label %invoke.cont20 unwind label %lpad11

14
  br label %while.cond

15
  %19 = load i32* %i16, align 4
  %conv22 = sext i32 %19 to i64
  %call24 = invoke i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector"* %bir, i64 %conv22)
          to label %invoke.cont23 unwind label %lpad11

16
  %20 = load i64* %call24
  %cmp25 = icmp sgt i64 %20, 0
  br i1 %cmp25, label %land.rhs, label %land.end

17
  %call27 = invoke zeroext i1 @_ZNKSt14priority_queueIxSt6vectorIxSaIxEESt4lessIxEE5emptyEv(%"class.std::priority_queue"* %PQ)
          to label %invoke.cont26 unwind label %lpad11

18
  br i1 %call27, label %land.lhs.true, label %lor.rhs

19
  %21 = load i64* %W, align 8
  %22 = load i64* %val, align 8
  %cmp28 = icmp sge i64 %21, %22
  br i1 %cmp28, label %lor.end34, label %lor.rhs

20
  %23 = load i64* %val, align 8
  %call30 = invoke i64* @_ZNKSt14priority_queueIxSt6vectorIxSaIxEESt4lessIxEE3topEv(%"class.std::priority_queue"* %PQ)
          to label %invoke.cont29 unwind label %lpad11

21
  %24 = load i64* %call30
  %cmp31 = icmp slt i64 %23, %24
  br i1 %cmp31, label %lor.end, label %lor.rhs32

22
  %25 = load i64* %W, align 8
  %26 = load i64* %val, align 8
  %cmp33 = icmp sge i64 %25, %26
  br label %lor.end

23
  %27 = phi i1 [ true, %invoke.cont29 ], [ %cmp33, %lor.rhs32 ]
  br label %lor.end34

24
  %28 = phi i1 [ true, %land.lhs.true ], [ %27, %lor.end ]
  br label %land.end

25
  %29 = phi i1 [ false, %invoke.cont23 ], [ %28, %lor.end34 ]
  br i1 %29, label %while.body, label %while.end

26
  %30 = load i64* %W, align 8
  %31 = load i64* %val, align 8
  %cmp35 = icmp sge i64 %30, %31
  br i1 %cmp35, label %if.then, label %if.else

27
  %32 = load i64* %val, align 8
  %33 = load i64* %W, align 8
  %sub = sub nsw i64 %33, %32
  store i64 %sub, i64* %W, align 8
  %34 = load i32* %birds, align 4
  %inc36 = add nsw i32 %34, 1
  store i32 %inc36, i32* %birds, align 4
  invoke void @_ZNSt14priority_queueIxSt6vectorIxSaIxEESt4lessIxEE4pushERKx(%"class.std::priority_queue"* %PQ, i64* %val)
          to label %invoke.cont37 unwind label %lpad11

28
  %35 = load i64* %B, align 8
  %36 = load i64* %capacity, align 8
  %add = add nsw i64 %36, %35
  store i64 %add, i64* %capacity, align 8
  %37 = load i32* %i16, align 4
  %conv38 = sext i32 %37 to i64
  %call40 = invoke i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector"* %bir, i64 %conv38)
          to label %invoke.cont39 unwind label %lpad11

29
  %38 = load i64* %call40
  %dec = add nsw i64 %38, -1
  store i64 %dec, i64* %call40
  br label %if.end59

30
  %call42 = invoke zeroext i1 @_ZNKSt14priority_queueIxSt6vectorIxSaIxEESt4lessIxEE5emptyEv(%"class.std::priority_queue"* %PQ)
          to label %invoke.cont41 unwind label %lpad11

31
  br i1 %call42, label %if.end58, label %if.then43

32
  %call45 = invoke i64* @_ZNKSt14priority_queueIxSt6vectorIxSaIxEESt4lessIxEE3topEv(%"class.std::priority_queue"* %PQ)
          to label %invoke.cont44 unwind label %lpad11

33
  %39 = load i64* %call45
  store i64 %39, i64* %v, align 8
  %40 = load i64* %v, align 8
  %41 = load i64* %val, align 8
  %cmp46 = icmp sgt i64 %40, %41
  br i1 %cmp46, label %if.then47, label %if.end

34
  %42 = load i64* %v, align 8
  %43 = load i64* %val, align 8
  %sub48 = sub nsw i64 %42, %43
  %44 = load i64* %W, align 8
  %add49 = add nsw i64 %44, %sub48
  store i64 %add49, i64* %W, align 8
  invoke void @_ZNSt14priority_queueIxSt6vectorIxSaIxEESt4lessIxEE3popEv(%"class.std::priority_queue"* %PQ)
          to label %invoke.cont50 unwind label %lpad11

35
  invoke void @_ZNSt14priority_queueIxSt6vectorIxSaIxEESt4lessIxEE4pushERKx(%"class.std::priority_queue"* %PQ, i64* %val)
          to label %invoke.cont51 unwind label %lpad11

36
  %call53 = invoke i64* @_ZSt3minIxERKT_S2_S2_(i64* %W, i64* %capacity)
          to label %invoke.cont52 unwind label %lpad11

37
  %45 = load i64* %call53
  store i64 %45, i64* %W, align 8
  %46 = load i32* %i16, align 4
  %conv54 = sext i32 %46 to i64
  %call56 = invoke i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector"* %bir, i64 %conv54)
          to label %invoke.cont55 unwind label %lpad11

38
  %47 = load i64* %call56
  %dec57 = add nsw i64 %47, -1
  store i64 %dec57, i64* %call56
  br label %if.end

39
  br label %if.end58

40
  br label %if.end59

41
  br label %while.cond

42
  %48 = load i64* %X, align 8
  %49 = load i64* %W, align 8
  %add60 = add nsw i64 %49, %48
  store i64 %add60, i64* %W, align 8
  %call62 = invoke i64* @_ZSt3minIxERKT_S2_S2_(i64* %W, i64* %capacity)
          to label %invoke.cont61 unwind label %lpad11

43
  %50 = load i64* %call62
  store i64 %50, i64* %W, align 8
  %51 = load i32* %i16, align 4
  %inc64 = add nsw i32 %51, 1
  store i32 %inc64, i32* %i16, align 4
  br label %for.cond17

44
  %52 = load i32* %birds, align 4
  %call67 = invoke %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* @_ZSt4cout, i32 %52)
          to label %invoke.cont66 unwind label %lpad11

45
  %call69 = invoke %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* %call67, i8* getelementptr inbounds ([2 x i8]* @.str, i32 0, i32 0))
          to label %invoke.cont68 unwind label %lpad11

46
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  call void @_ZNSt6vectorIxSaIxEED1Ev(%"class.std::vector"* %bir) #2
  call void @_ZNSt14priority_queueIxSt6vectorIxSaIxEESt4lessIxEED1Ev(%"class.std::priority_queue"* %PQ) #2
  %53 = load i32* %retval
  ret i32 %53

47
  call void @_ZNSt14priority_queueIxSt6vectorIxSaIxEESt4lessIxEED1Ev(%"class.std::priority_queue"* %PQ) #2
  br label %eh.resume

48
  %exn = load i8** %exn.slot
  %sel = load i32* %ehselector.slot
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val70 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val70
