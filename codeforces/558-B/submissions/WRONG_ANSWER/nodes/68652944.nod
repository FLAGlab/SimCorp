
1
  %retval = alloca i32, align 4
  %n = alloca i64, align 8
  %x = alloca i64, align 8
  %max = alloca i64, align 8
  %begin = alloca i64, align 8
  %end = alloca i64, align 8
  %i = alloca i32, align 4
  store i32 0, i32* %retval
  store i64 0, i64* %max, align 8
  store i64 0, i64* %begin, align 8
  store i64 10000001, i64* %end, align 8
  %call = call %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* @_ZSt3cin, i64* %n)
  store i32 1, i32* %i, align 4
  br label %for.cond

2
  %0 = load i32* %i, align 4
  %conv = sext i32 %0 to i64
  %1 = load i64* %n, align 8
  %cmp = icmp sle i64 %conv, %1
  br i1 %cmp, label %for.body, label %for.end

3
  %call1 = call %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* @_ZSt3cin, i64* %x)
  %2 = load i64* %x, align 8
  %arrayidx = getelementptr inbounds [100001 x i32]* @pos, i32 0, i64 %2
  %3 = load i32* %arrayidx, align 4
  %cmp2 = icmp eq i32 %3, 0
  br i1 %cmp2, label %if.then, label %if.end

4
  %4 = load i32* %i, align 4
  %5 = load i64* %x, align 8
  %arrayidx3 = getelementptr inbounds [100001 x i32]* @pos, i32 0, i64 %5
  store i32 %4, i32* %arrayidx3, align 4
  br label %if.end

5
  %6 = load i64* %x, align 8
  %arrayidx4 = getelementptr inbounds [100001 x i32]* @co, i32 0, i64 %6
  %7 = load i32* %arrayidx4, align 4
  %inc = add nsw i32 %7, 1
  store i32 %inc, i32* %arrayidx4, align 4
  %8 = load i64* %x, align 8
  %arrayidx5 = getelementptr inbounds [100001 x i32]* @co, i32 0, i64 %8
  %9 = load i32* %arrayidx5, align 4
  %conv6 = sext i32 %9 to i64
  %10 = load i64* %max, align 8
  %cmp7 = icmp sgt i64 %conv6, %10
  br i1 %cmp7, label %if.then15, label %lor.lhs.false

6
  %11 = load i64* %x, align 8
  %arrayidx8 = getelementptr inbounds [100001 x i32]* @co, i32 0, i64 %11
  %12 = load i32* %arrayidx8, align 4
  %conv9 = sext i32 %12 to i64
  %13 = load i64* %max, align 8
  %cmp10 = icmp eq i64 %conv9, %13
  br i1 %cmp10, label %land.lhs.true, label %if.end21

7
  %14 = load i32* %i, align 4
  %15 = load i64* %x, align 8
  %arrayidx11 = getelementptr inbounds [100001 x i32]* @pos, i32 0, i64 %15
  %16 = load i32* %arrayidx11, align 4
  %sub = sub nsw i32 %14, %16
  %conv12 = sext i32 %sub to i64
  %17 = load i64* %end, align 8
  %18 = load i64* %begin, align 8
  %sub13 = sub nsw i64 %17, %18
  %cmp14 = icmp sgt i64 %conv12, %sub13
  br i1 %cmp14, label %if.then15, label %if.end21

8
  %19 = load i64* %x, align 8
  %arrayidx16 = getelementptr inbounds [100001 x i32]* @co, i32 0, i64 %19
  %20 = load i32* %arrayidx16, align 4
  %conv17 = sext i32 %20 to i64
  store i64 %conv17, i64* %max, align 8
  %21 = load i64* %x, align 8
  %arrayidx18 = getelementptr inbounds [100001 x i32]* @pos, i32 0, i64 %21
  %22 = load i32* %arrayidx18, align 4
  %conv19 = sext i32 %22 to i64
  store i64 %conv19, i64* %begin, align 8
  %23 = load i32* %i, align 4
  %conv20 = sext i32 %23 to i64
  store i64 %conv20, i64* %end, align 8
  br label %if.end21

9
  %24 = load i32* %i, align 4
  %inc22 = add nsw i32 %24, 1
  store i32 %inc22, i32* %i, align 4
  br label %for.cond

10
  %25 = load i64* %begin, align 8
  %call23 = call %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"* @_ZSt4cout, i64 %25)
  %call24 = call %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* %call23, i8* getelementptr inbounds ([2 x i8]* @.str, i32 0, i32 0))
  %26 = load i64* %end, align 8
  %call25 = call %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"* %call24, i64 %26)
  ret i32 0
