
1
  %retval = alloca i32, align 4
  %tb = alloca %"class.std::map", align 8
  %btn = alloca i32, align 4
  %btrt = alloca i32, align 4
  %exn.slot = alloca i8*
  %ehselector.slot = alloca i32
  %i = alloca i32, align 4
  %i19 = alloca i32, align 4
  %i33 = alloca i32, align 4
  store i32 0, i32* %retval
  call void @_ZNSt3mapIiiSt4lessIiESaISt4pairIKiiEEEC1Ev(%"class.std::map"* %tb)
  store i32 0, i32* %btn, align 4
  store i32 0, i32* %btrt, align 4
  %call = invoke i32 (i8*, ...)* @scanf(i8* getelementptr inbounds ([3 x i8]* @.str, i32 0, i32 0), i32* @n)
          to label %invoke.cont unwind label %lpad

2
  store i32 1, i32* %i, align 4
  br label %for.cond

3
  %0 = load i32* %i, align 4
  %1 = load i32* @n, align 4
  %cmp = icmp sle i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

4
  %2 = load i32* %i, align 4
  %idxprom = sext i32 %2 to i64
  %arrayidx = getelementptr inbounds [100023 x i32]* @a, i32 0, i64 %idxprom
  %call2 = invoke i32 (i8*, ...)* @scanf(i8* getelementptr inbounds ([3 x i8]* @.str, i32 0, i32 0), i32* %arrayidx)
          to label %invoke.cont1 unwind label %lpad

5
  %3 = load i32* %i, align 4
  %idxprom3 = sext i32 %3 to i64
  %arrayidx4 = getelementptr inbounds [100023 x i32]* @a, i32 0, i64 %idxprom3
  %call6 = invoke i32* @_ZNSt3mapIiiSt4lessIiESaISt4pairIKiiEEEixERS3_(%"class.std::map"* %tb, i32* %arrayidx4)
          to label %invoke.cont5 unwind label %lpad

6
  %4 = load i32* %call6
  %inc = add nsw i32 %4, 1
  store i32 %inc, i32* %call6
  %5 = load i32* %i, align 4
  %idxprom7 = sext i32 %5 to i64
  %arrayidx8 = getelementptr inbounds [100023 x i32]* @a, i32 0, i64 %idxprom7
  %call10 = invoke i32* @_ZNSt3mapIiiSt4lessIiESaISt4pairIKiiEEEixERS3_(%"class.std::map"* %tb, i32* %arrayidx8)
          to label %invoke.cont9 unwind label %lpad

7
  %6 = load i32* %call10
  %7 = load i32* %btrt, align 4
  %cmp11 = icmp sgt i32 %6, %7
  br i1 %cmp11, label %if.then, label %if.end

8
  %8 = load i32* %i, align 4
  %idxprom12 = sext i32 %8 to i64
  %arrayidx13 = getelementptr inbounds [100023 x i32]* @a, i32 0, i64 %idxprom12
  %call15 = invoke i32* @_ZNSt3mapIiiSt4lessIiESaISt4pairIKiiEEEixERS3_(%"class.std::map"* %tb, i32* %arrayidx13)
          to label %invoke.cont14 unwind label %lpad

9
  %9 = load i32* %call15
  store i32 %9, i32* %btrt, align 4
  %10 = load i32* %i, align 4
  %idxprom16 = sext i32 %10 to i64
  %arrayidx17 = getelementptr inbounds [100023 x i32]* @a, i32 0, i64 %idxprom16
  %11 = load i32* %arrayidx17, align 4
  store i32 %11, i32* %btn, align 4
  br label %if.end

10
  %12 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %13 = extractvalue { i8*, i32 } %12, 0
  store i8* %13, i8** %exn.slot
  %14 = extractvalue { i8*, i32 } %12, 1
  store i32 %14, i32* %ehselector.slot
  call void @_ZNSt3mapIiiSt4lessIiESaISt4pairIKiiEEED1Ev(%"class.std::map"* %tb) #2
  %exn = load i8** %exn.slot
  %sel = load i32* %ehselector.slot
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val46 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val46

11
  %15 = load i32* %i, align 4
  %inc18 = add nsw i32 %15, 1
  store i32 %inc18, i32* %i, align 4
  br label %for.cond

12
  store i32 1, i32* %i19, align 4
  br label %for.cond20

13
  %16 = load i32* %i19, align 4
  %17 = load i32* @n, align 4
  %cmp21 = icmp sle i32 %16, %17
  br i1 %cmp21, label %for.body22, label %for.end32

14
  %18 = load i32* %i19, align 4
  %idxprom23 = sext i32 %18 to i64
  %arrayidx24 = getelementptr inbounds [100023 x i32]* @a, i32 0, i64 %idxprom23
  %19 = load i32* %arrayidx24, align 4
  %20 = load i32* %btn, align 4
  %cmp25 = icmp eq i32 %19, %20
  br i1 %cmp25, label %if.then26, label %if.end29

15
  %21 = load i32* %i19, align 4
  %call28 = invoke i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([4 x i8]* @.str1, i32 0, i32 0), i32 %21)
          to label %invoke.cont27 unwind label %lpad

16
  br label %for.end32

17
  %22 = load i32* %i19, align 4
  %inc31 = add nsw i32 %22, 1
  store i32 %inc31, i32* %i19, align 4
  br label %for.cond20

18
  %23 = load i32* @n, align 4
  store i32 %23, i32* %i33, align 4
  br label %for.cond34

19
  %24 = load i32* %i33, align 4
  %cmp35 = icmp sge i32 %24, 1
  br i1 %cmp35, label %for.body36, label %for.end45

20
  %25 = load i32* %i33, align 4
  %idxprom37 = sext i32 %25 to i64
  %arrayidx38 = getelementptr inbounds [100023 x i32]* @a, i32 0, i64 %idxprom37
  %26 = load i32* %arrayidx38, align 4
  %27 = load i32* %btn, align 4
  %cmp39 = icmp eq i32 %26, %27
  br i1 %cmp39, label %if.then40, label %if.end43

21
  %28 = load i32* %i33, align 4
  %call42 = invoke i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([3 x i8]* @.str, i32 0, i32 0), i32 %28)
          to label %invoke.cont41 unwind label %lpad

22
  br label %for.end45

23
  %29 = load i32* %i33, align 4
  %dec = add nsw i32 %29, -1
  store i32 %dec, i32* %i33, align 4
  br label %for.cond34

24
  call void @_ZNSt3mapIiiSt4lessIiESaISt4pairIKiiEEED1Ev(%"class.std::map"* %tb) #2
  %30 = load i32* %retval
  ret i32 %30
