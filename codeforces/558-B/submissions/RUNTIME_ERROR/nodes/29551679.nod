
1
  %retval = alloca i32, align 4
  %maxi = alloca i64, align 8
  %q = alloca i64, align 8
  %i = alloca i64, align 8
  %l = alloca i64, align 8
  %r = alloca i64, align 8
  store i32 0, i32* %retval
  call void @llvm.memset.p0i8.i64(i8* bitcast ([100001 x i64]* @pok to i8*), i8 0, i64 800008, i32 16, i1 false)
  %call = call %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* @_ZSt3cin, i64* @n)
  store i64 0, i64* %maxi, align 8
  store i64 1, i64* %i, align 8
  br label %for.cond

2
  %0 = load i64* %i, align 8
  %1 = load i64* @n, align 8
  %cmp = icmp sle i64 %0, %1
  br i1 %cmp, label %for.body, label %for.end

3
  %2 = load i64* %i, align 8
  %arrayidx = getelementptr inbounds [100001 x i64]* @s, i32 0, i64 %2
  %call1 = call %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* @_ZSt3cin, i64* %arrayidx)
  %3 = load i64* %i, align 8
  %arrayidx2 = getelementptr inbounds [100001 x i64]* @s, i32 0, i64 %3
  %4 = load i64* %arrayidx2, align 8
  %arrayidx3 = getelementptr inbounds [100001 x i64]* @pok, i32 0, i64 %4
  %5 = load i64* %arrayidx3, align 8
  %inc = add nsw i64 %5, 1
  store i64 %inc, i64* %arrayidx3, align 8
  %6 = load i64* %i, align 8
  %arrayidx4 = getelementptr inbounds [100001 x i64]* @s, i32 0, i64 %6
  %7 = load i64* %arrayidx4, align 8
  %arrayidx5 = getelementptr inbounds [100001 x i64]* @pok, i32 0, i64 %7
  %8 = load i64* %arrayidx5, align 8
  %9 = load i64* %maxi, align 8
  %cmp6 = icmp sgt i64 %8, %9
  br i1 %cmp6, label %if.then, label %if.end

4
  %10 = load i64* %i, align 8
  %arrayidx7 = getelementptr inbounds [100001 x i64]* @s, i32 0, i64 %10
  %11 = load i64* %arrayidx7, align 8
  %arrayidx8 = getelementptr inbounds [100001 x i64]* @pok, i32 0, i64 %11
  %12 = load i64* %arrayidx8, align 8
  store i64 %12, i64* %maxi, align 8
  %13 = load i64* %i, align 8
  %arrayidx9 = getelementptr inbounds [100001 x i64]* @s, i32 0, i64 %13
  %14 = load i64* %arrayidx9, align 8
  store i64 %14, i64* %q, align 8
  br label %if.end

5
  %15 = load i64* %i, align 8
  %inc10 = add nsw i64 %15, 1
  store i64 %inc10, i64* %i, align 8
  br label %for.cond

6
  store i64 1, i64* %l, align 8
  %16 = load i64* @n, align 8
  store i64 %16, i64* %r, align 8
  br label %while.cond11

7
  %17 = load i64* %r, align 8
  %arrayidx12 = getelementptr inbounds [100001 x i64]* @s, i32 0, i64 %17
  %18 = load i64* %arrayidx12, align 8
  %19 = load i64* %q, align 8
  %cmp13 = icmp ne i64 %18, %19
  br i1 %cmp13, label %while.body14, label %while.end

8
  %20 = load i64* %r, align 8
  %dec = add nsw i64 %20, -1
  store i64 %dec, i64* %r, align 8
  br label %while.cond11

9
  br label %while.cond15

10
  %21 = load i64* %l, align 8
  %arrayidx16 = getelementptr inbounds [100001 x i64]* @s, i32 0, i64 %21
  %22 = load i64* %arrayidx16, align 8
  %23 = load i64* %q, align 8
  %cmp17 = icmp ne i64 %22, %23
  br i1 %cmp17, label %while.body18, label %while.end20

11
  %24 = load i64* %l, align 8
  %inc19 = add nsw i64 %24, 1
  store i64 %inc19, i64* %l, align 8
  br label %while.cond15

12
  %25 = load i64* %l, align 8
  %call22 = call %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"* @_ZSt4cout, i64 %25)
  %call23 = call %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* %call22, i8* getelementptr inbounds ([2 x i8]* @.str, i32 0, i32 0))
  %26 = load i64* %r, align 8
  %call24 = call %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"* %call23, i64 %26)
  ret i32 0
