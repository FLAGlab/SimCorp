
1
  %retval = alloca i32, align 4
  %n = alloca i32, align 4
  %l = alloca i32, align 4
  %r = alloca i32, align 4
  %i = alloca i32, align 4
  %q = alloca i32, align 4
  store i32 0, i32* %retval
  %call = call i32 (i8*, ...)* @scanf(i8* getelementptr inbounds ([3 x i8]* @.str, i32 0, i32 0), i32* %n)
  store i32 0, i32* %l, align 4
  store i32 0, i32* %r, align 4
  store i32 1, i32* %i, align 4
  br label %for.cond

2
  %0 = load i32* %i, align 4
  %1 = load i32* %n, align 4
  %cmp = icmp sle i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

3
  %call1 = call i32 (i8*, ...)* @scanf(i8* getelementptr inbounds ([3 x i8]* @.str, i32 0, i32 0), i32* %q)
  %2 = load i32* %q, align 4
  %idxprom = sext i32 %2 to i64
  %arrayidx = getelementptr inbounds [100005 x %struct.node]* @p, i32 0, i64 %idxprom
  %cnt = getelementptr inbounds %struct.node* %arrayidx, i32 0, i32 2
  %3 = load i32* %cnt, align 4
  %tobool = icmp ne i32 %3, 0
  br i1 %tobool, label %if.then, label %if.else

4
  %4 = load i32* %i, align 4
  %5 = load i32* %q, align 4
  %idxprom2 = sext i32 %5 to i64
  %arrayidx3 = getelementptr inbounds [100005 x %struct.node]* @p, i32 0, i64 %idxprom2
  %y = getelementptr inbounds %struct.node* %arrayidx3, i32 0, i32 1
  store i32 %4, i32* %y, align 4
  br label %if.end

5
  %6 = load i32* %i, align 4
  %7 = load i32* %q, align 4
  %idxprom4 = sext i32 %7 to i64
  %arrayidx5 = getelementptr inbounds [100005 x %struct.node]* @p, i32 0, i64 %idxprom4
  %x = getelementptr inbounds %struct.node* %arrayidx5, i32 0, i32 0
  store i32 %6, i32* %x, align 4
  %8 = load i32* %i, align 4
  %9 = load i32* %q, align 4
  %idxprom6 = sext i32 %9 to i64
  %arrayidx7 = getelementptr inbounds [100005 x %struct.node]* @p, i32 0, i64 %idxprom6
  %y8 = getelementptr inbounds %struct.node* %arrayidx7, i32 0, i32 1
  store i32 %8, i32* %y8, align 4
  br label %if.end

6
  %10 = load i32* %q, align 4
  %idxprom9 = sext i32 %10 to i64
  %arrayidx10 = getelementptr inbounds [100005 x %struct.node]* @p, i32 0, i64 %idxprom9
  %cnt11 = getelementptr inbounds %struct.node* %arrayidx10, i32 0, i32 2
  %11 = load i32* %cnt11, align 4
  %inc = add nsw i32 %11, 1
  store i32 %inc, i32* %cnt11, align 4
  %12 = load i32* %i, align 4
  %inc12 = add nsw i32 %12, 1
  store i32 %inc12, i32* %i, align 4
  br label %for.cond

7
  %13 = load i32* %n, align 4
  %idx.ext = sext i32 %13 to i64
  %add.ptr = getelementptr inbounds %struct.node* getelementptr inbounds ([100005 x %struct.node]* @p, i32 0, i32 0), i64 %idx.ext
  %add.ptr13 = getelementptr inbounds %struct.node* %add.ptr, i64 1
  call void @_ZSt4sortIP4nodePFbRKS0_S3_EEvT_S6_T0_(%struct.node* getelementptr inbounds ([100005 x %struct.node]* @p, i32 0, i64 1), %struct.node* %add.ptr13, i1 (%struct.node*, %struct.node*)* @_Z3cmpRK4nodeS1_)
  %14 = load i32* getelementptr inbounds ([100005 x %struct.node]* @p, i32 0, i64 1, i32 0), align 4
  store i32 %14, i32* %l, align 4
  %15 = load i32* getelementptr inbounds ([100005 x %struct.node]* @p, i32 0, i64 1, i32 1), align 4
  store i32 %15, i32* %r, align 4
  %16 = load i32* %l, align 4
  %17 = load i32* %r, align 4
  %call14 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([7 x i8]* @.str2, i32 0, i32 0), i32 %16, i32 %17)
  ret i32 0
