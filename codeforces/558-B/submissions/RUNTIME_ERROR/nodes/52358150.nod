
1
  %retval = alloca i32, align 4
  %n = alloca i32, align 4
  %pos1 = alloca i32, align 4
  %pos2 = alloca i32, align 4
  %maxx = alloca i32, align 4
  %i = alloca i32, align 4
  %x = alloca i32, align 4
  store i32 0, i32* %retval
  store i32 0, i32* %pos1, align 4
  store i32 0, i32* %pos2, align 4
  store i32 0, i32* %maxx, align 4
  %call = call i32 (i8*, ...)* @scanf(i8* getelementptr inbounds ([3 x i8]* @.str, i32 0, i32 0), i32* %n)
  store i32 1, i32* %i, align 4
  br label %for.cond

2
  %0 = load i32* %i, align 4
  %1 = load i32* %n, align 4
  %cmp = icmp sle i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

3
  %call1 = call i32 (i8*, ...)* @scanf(i8* getelementptr inbounds ([3 x i8]* @.str, i32 0, i32 0), i32* %x)
  %call2 = call i32* @_ZNSt3mapIiiSt4lessIiESaISt4pairIKiiEEEixERS3_(%"class.std::map"* @m, i32* %x)
  %2 = load i32* %call2
  %inc = add nsw i32 %2, 1
  store i32 %inc, i32* %call2
  %3 = load i32* %x, align 4
  %idxprom = sext i32 %3 to i64
  %arrayidx = getelementptr inbounds [100010 x i32]* @a, i32 0, i64 %idxprom
  %4 = load i32* %arrayidx, align 4
  %tobool = icmp ne i32 %4, 0
  br i1 %tobool, label %if.end, label %if.then

4
  %5 = load i32* %i, align 4
  %6 = load i32* %x, align 4
  %idxprom3 = sext i32 %6 to i64
  %arrayidx4 = getelementptr inbounds [100010 x i32]* @a, i32 0, i64 %idxprom3
  store i32 %5, i32* %arrayidx4, align 4
  br label %if.end

5
  %call5 = call i32* @_ZNSt3mapIiiSt4lessIiESaISt4pairIKiiEEEixERS3_(%"class.std::map"* @m, i32* %x)
  %7 = load i32* %call5
  %8 = load i32* %maxx, align 4
  %cmp6 = icmp sgt i32 %7, %8
  br i1 %cmp6, label %if.then13, label %lor.lhs.false

6
  %call7 = call i32* @_ZNSt3mapIiiSt4lessIiESaISt4pairIKiiEEEixERS3_(%"class.std::map"* @m, i32* %x)
  %9 = load i32* %call7
  %10 = load i32* %maxx, align 4
  %cmp8 = icmp eq i32 %9, %10
  br i1 %cmp8, label %land.lhs.true, label %if.end17

7
  %11 = load i32* %i, align 4
  %12 = load i32* %x, align 4
  %idxprom9 = sext i32 %12 to i64
  %arrayidx10 = getelementptr inbounds [100010 x i32]* @a, i32 0, i64 %idxprom9
  %13 = load i32* %arrayidx10, align 4
  %sub = sub nsw i32 %11, %13
  %14 = load i32* %pos2, align 4
  %15 = load i32* %pos1, align 4
  %sub11 = sub nsw i32 %14, %15
  %cmp12 = icmp slt i32 %sub, %sub11
  br i1 %cmp12, label %if.then13, label %if.end17

8
  %call14 = call i32* @_ZNSt3mapIiiSt4lessIiESaISt4pairIKiiEEEixERS3_(%"class.std::map"* @m, i32* %x)
  %16 = load i32* %call14
  store i32 %16, i32* %maxx, align 4
  %17 = load i32* %x, align 4
  %idxprom15 = sext i32 %17 to i64
  %arrayidx16 = getelementptr inbounds [100010 x i32]* @a, i32 0, i64 %idxprom15
  %18 = load i32* %arrayidx16, align 4
  store i32 %18, i32* %pos1, align 4
  %19 = load i32* %i, align 4
  store i32 %19, i32* %pos2, align 4
  br label %if.end17

9
  %20 = load i32* %i, align 4
  %inc18 = add nsw i32 %20, 1
  store i32 %inc18, i32* %i, align 4
  br label %for.cond

10
  %21 = load i32* %pos1, align 4
  %22 = load i32* %pos2, align 4
  %call19 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([6 x i8]* @.str2, i32 0, i32 0), i32 %21, i32 %22)
  %23 = load i32* %retval
  ret i32 %23
