
1
  %retval = alloca i32, align 4
  %n = alloca i32, align 4
  %a = alloca %"class.std::vector", align 8
  %ref.tmp = alloca %"class.std::allocator", align 1
  %exn.slot = alloca i8*
  %ehselector.slot = alloca i32
  %pos = alloca %"class.std::vector.0", align 8
  %ref.tmp2 = alloca %"class.std::allocator.2", align 1
  %i = alloca i32, align 4
  %mx = alloca i32, align 4
  %i18 = alloca i32, align 4
  %ref.tmp27 = alloca i32, align 4
  %mn = alloca i32, align 4
  %l = alloca i32, align 4
  %r = alloca i32, align 4
  %i33 = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store i32 0, i32* %retval
  %call = call i32 (i8*, ...)* @scanf(i8* getelementptr inbounds ([3 x i8]* @.str, i32 0, i32 0), i32* %n)
  %0 = load i32* %n, align 4
  %conv = sext i32 %0 to i64
  call void @_ZNSaIiEC1Ev(%"class.std::allocator"* %ref.tmp) #2
  invoke void @_ZNSt6vectorIiSaIiEEC1EmRKS0_(%"class.std::vector"* %a, i64 %conv, %"class.std::allocator"* %ref.tmp)
          to label %invoke.cont unwind label %lpad

2
  call void @_ZNSaIiED1Ev(%"class.std::allocator"* %ref.tmp) #2
  %1 = load i32* %n, align 4
  %conv1 = sext i32 %1 to i64
  call void @_ZNSaISt6vectorIiSaIiEEEC1Ev(%"class.std::allocator.2"* %ref.tmp2) #2
  invoke void @_ZNSt6vectorIS_IiSaIiEESaIS1_EEC1EmRKS2_(%"class.std::vector.0"* %pos, i64 %conv1, %"class.std::allocator.2"* %ref.tmp2)
          to label %invoke.cont4 unwind label %lpad3

3
  call void @_ZNSaISt6vectorIiSaIiEEED1Ev(%"class.std::allocator.2"* %ref.tmp2) #2
  store i32 0, i32* %i, align 4
  br label %for.cond

4
  %2 = load i32* %i, align 4
  %3 = load i32* %n, align 4
  %cmp = icmp slt i32 %2, %3
  br i1 %cmp, label %for.body, label %for.end

5
  %4 = load i32* %i, align 4
  %conv5 = sext i32 %4 to i64
  %call8 = invoke i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector"* %a, i64 %conv5)
          to label %invoke.cont7 unwind label %lpad6

6
  %call10 = invoke i32 (i8*, ...)* @scanf(i8* getelementptr inbounds ([3 x i8]* @.str, i32 0, i32 0), i32* %call8)
          to label %invoke.cont9 unwind label %lpad6

7
  %5 = load i32* %i, align 4
  %conv11 = sext i32 %5 to i64
  %call13 = invoke i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector"* %a, i64 %conv11)
          to label %invoke.cont12 unwind label %lpad6

8
  %6 = load i32* %call13
  %sub = sub nsw i32 %6, 1
  %conv14 = sext i32 %sub to i64
  %call16 = invoke %"class.std::vector"* @_ZNSt6vectorIS_IiSaIiEESaIS1_EEixEm(%"class.std::vector.0"* %pos, i64 %conv14)
          to label %invoke.cont15 unwind label %lpad6

9
  invoke void @_ZNSt6vectorIiSaIiEE9push_backERKi(%"class.std::vector"* %call16, i32* %i)
          to label %invoke.cont17 unwind label %lpad6

10
  %7 = load i32* %i, align 4
  %inc = add nsw i32 %7, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

11
  %8 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %9 = extractvalue { i8*, i32 } %8, 0
  store i8* %9, i8** %exn.slot
  %10 = extractvalue { i8*, i32 } %8, 1
  store i32 %10, i32* %ehselector.slot
  call void @_ZNSaIiED1Ev(%"class.std::allocator"* %ref.tmp) #2
  br label %eh.resume

12
  %11 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %12 = extractvalue { i8*, i32 } %11, 0
  store i8* %12, i8** %exn.slot
  %13 = extractvalue { i8*, i32 } %11, 1
  store i32 %13, i32* %ehselector.slot
  call void @_ZNSaISt6vectorIiSaIiEEED1Ev(%"class.std::allocator.2"* %ref.tmp2) #2
  br label %ehcleanup

13
  %14 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %15 = extractvalue { i8*, i32 } %14, 0
  store i8* %15, i8** %exn.slot
  %16 = extractvalue { i8*, i32 } %14, 1
  store i32 %16, i32* %ehselector.slot
  call void @_ZNSt6vectorIS_IiSaIiEESaIS1_EED1Ev(%"class.std::vector.0"* %pos) #2
  br label %ehcleanup

14
  store i32 0, i32* %mx, align 4
  store i32 0, i32* %i18, align 4
  br label %for.cond19

15
  %17 = load i32* %i18, align 4
  %18 = load i32* %n, align 4
  %mul = mul nsw i32 10, %18
  %cmp20 = icmp slt i32 %17, %mul
  br i1 %cmp20, label %for.body21, label %for.end32

16
  %19 = load i32* %i18, align 4
  %conv22 = sext i32 %19 to i64
  %call24 = invoke %"class.std::vector"* @_ZNSt6vectorIS_IiSaIiEESaIS1_EEixEm(%"class.std::vector.0"* %pos, i64 %conv22)
          to label %invoke.cont23 unwind label %lpad6

17
  %call25 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector"* %call24) #2
  %conv26 = trunc i64 %call25 to i32
  store i32 %conv26, i32* %ref.tmp27, align 4
  %call29 = invoke i32* @_ZSt3maxIiERKT_S2_S2_(i32* %mx, i32* %ref.tmp27)
          to label %invoke.cont28 unwind label %lpad6

18
  %20 = load i32* %call29
  store i32 %20, i32* %mx, align 4
  %21 = load i32* %i18, align 4
  %inc31 = add nsw i32 %21, 1
  store i32 %inc31, i32* %i18, align 4
  br label %for.cond19

19
  store i32 2147483647, i32* %mn, align 4
  store i32 0, i32* %i33, align 4
  br label %for.cond34

20
  %22 = load i32* %i33, align 4
  %23 = load i32* %n, align 4
  %mul35 = mul nsw i32 10, %23
  %cmp36 = icmp slt i32 %22, %mul35
  br i1 %cmp36, label %for.body37, label %for.end87

21
  %24 = load i32* %i33, align 4
  %conv38 = sext i32 %24 to i64
  %call40 = invoke %"class.std::vector"* @_ZNSt6vectorIS_IiSaIiEESaIS1_EEixEm(%"class.std::vector.0"* %pos, i64 %conv38)
          to label %invoke.cont39 unwind label %lpad6

22
  %call41 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector"* %call40) #2
  %conv42 = trunc i64 %call41 to i32
  %25 = load i32* %mx, align 4
  %cmp43 = icmp eq i32 %conv42, %25
  br i1 %cmp43, label %if.then, label %if.end84

23
  %26 = load i32* %i33, align 4
  %conv44 = sext i32 %26 to i64
  %call46 = invoke %"class.std::vector"* @_ZNSt6vectorIS_IiSaIiEESaIS1_EEixEm(%"class.std::vector.0"* %pos, i64 %conv44)
          to label %invoke.cont45 unwind label %lpad6

24
  %27 = load i32* %mx, align 4
  %sub47 = sub nsw i32 %27, 1
  %conv48 = sext i32 %sub47 to i64
  %call50 = invoke i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector"* %call46, i64 %conv48)
          to label %invoke.cont49 unwind label %lpad6

25
  %28 = load i32* %call50
  %29 = load i32* %i33, align 4
  %conv51 = sext i32 %29 to i64
  %call53 = invoke %"class.std::vector"* @_ZNSt6vectorIS_IiSaIiEESaIS1_EEixEm(%"class.std::vector.0"* %pos, i64 %conv51)
          to label %invoke.cont52 unwind label %lpad6

26
  %call55 = invoke i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector"* %call53, i64 0)
          to label %invoke.cont54 unwind label %lpad6

27
  %30 = load i32* %call55
  %sub56 = sub nsw i32 %28, %30
  %31 = load i32* %mn, align 4
  %cmp57 = icmp slt i32 %sub56, %31
  br i1 %cmp57, label %if.then58, label %if.end

28
  %32 = load i32* %i33, align 4
  %conv59 = sext i32 %32 to i64
  %call61 = invoke %"class.std::vector"* @_ZNSt6vectorIS_IiSaIiEESaIS1_EEixEm(%"class.std::vector.0"* %pos, i64 %conv59)
          to label %invoke.cont60 unwind label %lpad6

29
  %33 = load i32* %mx, align 4
  %sub62 = sub nsw i32 %33, 1
  %conv63 = sext i32 %sub62 to i64
  %call65 = invoke i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector"* %call61, i64 %conv63)
          to label %invoke.cont64 unwind label %lpad6

30
  %34 = load i32* %call65
  %35 = load i32* %i33, align 4
  %conv66 = sext i32 %35 to i64
  %call68 = invoke %"class.std::vector"* @_ZNSt6vectorIS_IiSaIiEESaIS1_EEixEm(%"class.std::vector.0"* %pos, i64 %conv66)
          to label %invoke.cont67 unwind label %lpad6

31
  %call70 = invoke i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector"* %call68, i64 0)
          to label %invoke.cont69 unwind label %lpad6

32
  %36 = load i32* %call70
  %sub71 = sub nsw i32 %34, %36
  store i32 %sub71, i32* %mn, align 4
  %37 = load i32* %i33, align 4
  %conv72 = sext i32 %37 to i64
  %call74 = invoke %"class.std::vector"* @_ZNSt6vectorIS_IiSaIiEESaIS1_EEixEm(%"class.std::vector.0"* %pos, i64 %conv72)
          to label %invoke.cont73 unwind label %lpad6

33
  %call76 = invoke i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector"* %call74, i64 0)
          to label %invoke.cont75 unwind label %lpad6

34
  %38 = load i32* %call76
  store i32 %38, i32* %l, align 4
  %39 = load i32* %i33, align 4
  %conv77 = sext i32 %39 to i64
  %call79 = invoke %"class.std::vector"* @_ZNSt6vectorIS_IiSaIiEESaIS1_EEixEm(%"class.std::vector.0"* %pos, i64 %conv77)
          to label %invoke.cont78 unwind label %lpad6

35
  %40 = load i32* %mx, align 4
  %sub80 = sub nsw i32 %40, 1
  %conv81 = sext i32 %sub80 to i64
  %call83 = invoke i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector"* %call79, i64 %conv81)
          to label %invoke.cont82 unwind label %lpad6

36
  %41 = load i32* %call83
  store i32 %41, i32* %r, align 4
  br label %if.end

37
  br label %if.end84

38
  %42 = load i32* %i33, align 4
  %inc86 = add nsw i32 %42, 1
  store i32 %inc86, i32* %i33, align 4
  br label %for.cond34

39
  %43 = load i32* %l, align 4
  %add = add nsw i32 %43, 1
  %44 = load i32* %r, align 4
  %add88 = add nsw i32 %44, 1
  %call90 = invoke i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([7 x i8]* @.str1, i32 0, i32 0), i32 %add, i32 %add88)
          to label %invoke.cont89 unwind label %lpad6

40
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  call void @_ZNSt6vectorIS_IiSaIiEESaIS1_EED1Ev(%"class.std::vector.0"* %pos) #2
  call void @_ZNSt6vectorIiSaIiEED1Ev(%"class.std::vector"* %a) #2
  %45 = load i32* %retval
  ret i32 %45

41
  call void @_ZNSt6vectorIiSaIiEED1Ev(%"class.std::vector"* %a) #2
  br label %eh.resume

42
  %exn = load i8** %exn.slot
  %sel = load i32* %ehselector.slot
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val91 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val91
