
1
  %retval = alloca i32, align 4
  %tests = alloca i32, align 4
  %t = alloca [50 x %"class.std::basic_string"], align 16
  %exn.slot = alloca i8*
  %ehselector.slot = alloca i32
  %test = alloca i32, align 4
  %s = alloca %"class.std::basic_string", align 8
  %counter_a = alloca i32, align 4
  %counter_b = alloca i32, align 4
  %counter_c = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i32 0, i32* %retval
  %array.begin = getelementptr inbounds [50 x %"class.std::basic_string"]* %t, i32 0, i32 0
  %arrayctor.end = getelementptr inbounds %"class.std::basic_string"* %array.begin, i64 50
  br label %arrayctor.loop

2
  %arrayctor.cur = phi %"class.std::basic_string"* [ %array.begin, %entry ], [ %arrayctor.next, %invoke.cont ]
  invoke void @_ZNSsC1Ev(%"class.std::basic_string"* %arrayctor.cur)
          to label %invoke.cont unwind label %lpad

3
  %arrayctor.next = getelementptr inbounds %"class.std::basic_string"* %arrayctor.cur, i64 1
  %arrayctor.done = icmp eq %"class.std::basic_string"* %arrayctor.next, %arrayctor.end
  br i1 %arrayctor.done, label %arrayctor.cont, label %arrayctor.loop

4
  %call = invoke %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* @_ZSt3cin, i32* %tests)
          to label %invoke.cont3 unwind label %lpad2

5
  store i32 0, i32* %test, align 4
  br label %for.cond

6
  %0 = load i32* %test, align 4
  %1 = load i32* %tests, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end50

7
  invoke void @_ZNSsC1Ev(%"class.std::basic_string"* %s)
          to label %invoke.cont4 unwind label %lpad2

8
  %call7 = invoke %"class.std::basic_istream"* @_ZStrsIcSt11char_traitsIcESaIcEERSt13basic_istreamIT_T0_ES7_RSbIS4_S5_T1_E(%"class.std::basic_istream"* @_ZSt3cin, %"class.std::basic_string"* %s)
          to label %invoke.cont6 unwind label %lpad5

9
  store i32 0, i32* %counter_a, align 4
  store i32 0, i32* %counter_b, align 4
  store i32 0, i32* %counter_c, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond8

10
  %2 = load i32* %i, align 4
  %cmp9 = icmp slt i32 %2, 50
  br i1 %cmp9, label %for.body10, label %for.end

11
  %3 = load i32* %i, align 4
  %conv = sext i32 %3 to i64
  %call12 = invoke i8* @_ZNSsixEm(%"class.std::basic_string"* %s, i64 %conv)
          to label %invoke.cont11 unwind label %lpad5

12
  %4 = load i8* %call12
  %conv13 = sext i8 %4 to i32
  %cmp14 = icmp eq i32 %conv13, 65
  br i1 %cmp14, label %if.then, label %if.end

13
  %5 = load i32* %counter_a, align 4
  %add = add nsw i32 %5, 1
  store i32 %add, i32* %counter_a, align 4
  br label %if.end

14
  %6 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %7 = extractvalue { i8*, i32 } %6, 0
  store i8* %7, i8** %exn.slot
  %8 = extractvalue { i8*, i32 } %6, 1
  store i32 %8, i32* %ehselector.slot
  %arraydestroy.isempty = icmp eq %"class.std::basic_string"* %array.begin, %arrayctor.cur
  br i1 %arraydestroy.isempty, label %arraydestroy.done1, label %arraydestroy.body

15
  %arraydestroy.elementPast = phi %"class.std::basic_string"* [ %arrayctor.cur, %lpad ], [ %arraydestroy.element, %arraydestroy.body ]
  %arraydestroy.element = getelementptr inbounds %"class.std::basic_string"* %arraydestroy.elementPast, i64 -1
  call void @_ZNSsD1Ev(%"class.std::basic_string"* %arraydestroy.element) #2
  %arraydestroy.done = icmp eq %"class.std::basic_string"* %arraydestroy.element, %array.begin
  br i1 %arraydestroy.done, label %arraydestroy.done1, label %arraydestroy.body

16
  br label %eh.resume

17
  %9 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %10 = extractvalue { i8*, i32 } %9, 0
  store i8* %10, i8** %exn.slot
  %11 = extractvalue { i8*, i32 } %9, 1
  store i32 %11, i32* %ehselector.slot
  br label %ehcleanup

18
  %12 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %13 = extractvalue { i8*, i32 } %12, 0
  store i8* %13, i8** %exn.slot
  %14 = extractvalue { i8*, i32 } %12, 1
  store i32 %14, i32* %ehselector.slot
  call void @_ZNSsD1Ev(%"class.std::basic_string"* %s) #2
  br label %ehcleanup

19
  %15 = load i32* %i, align 4
  %conv15 = sext i32 %15 to i64
  %call17 = invoke i8* @_ZNSsixEm(%"class.std::basic_string"* %s, i64 %conv15)
          to label %invoke.cont16 unwind label %lpad5

20
  %16 = load i8* %call17
  %conv18 = sext i8 %16 to i32
  %cmp19 = icmp eq i32 %conv18, 66
  br i1 %cmp19, label %if.then20, label %if.end22

21
  %17 = load i32* %counter_b, align 4
  %add21 = add nsw i32 %17, 1
  store i32 %add21, i32* %counter_b, align 4
  br label %if.end22

22
  %18 = load i32* %i, align 4
  %conv23 = sext i32 %18 to i64
  %call25 = invoke i8* @_ZNSsixEm(%"class.std::basic_string"* %s, i64 %conv23)
          to label %invoke.cont24 unwind label %lpad5

23
  %19 = load i8* %call25
  %conv26 = sext i8 %19 to i32
  %cmp27 = icmp eq i32 %conv26, 67
  br i1 %cmp27, label %if.then28, label %if.end30

24
  %20 = load i32* %counter_c, align 4
  %add29 = add nsw i32 %20, 1
  store i32 %add29, i32* %counter_c, align 4
  br label %if.end30

25
  %21 = load i32* %i, align 4
  %conv31 = sext i32 %21 to i64
  %call33 = invoke i8* @_ZNSsixEm(%"class.std::basic_string"* %s, i64 %conv31)
          to label %invoke.cont32 unwind label %lpad5

26
  %22 = load i8* %call33
  %conv34 = sext i8 %22 to i32
  %cmp35 = icmp eq i32 %conv34, 0
  br i1 %cmp35, label %if.then36, label %if.end37

27
  br label %for.end

28
  %23 = load i32* %i, align 4
  %inc = add nsw i32 %23, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond8

29
  %24 = load i32* %counter_a, align 4
  %25 = load i32* %counter_c, align 4
  %add38 = add nsw i32 %24, %25
  %26 = load i32* %counter_b, align 4
  %cmp39 = icmp eq i32 %add38, %26
  br i1 %cmp39, label %if.then40, label %if.else

30
  %27 = load i32* %test, align 4
  %idxprom = sext i32 %27 to i64
  %arrayidx = getelementptr inbounds [50 x %"class.std::basic_string"]* %t, i32 0, i64 %idxprom
  %call42 = invoke %"class.std::basic_string"* @_ZNSsaSEPKc(%"class.std::basic_string"* %arrayidx, i8* getelementptr inbounds ([4 x i8]* @.str, i32 0, i32 0))
          to label %invoke.cont41 unwind label %lpad5

31
  br label %if.end47

32
  %28 = load i32* %test, align 4
  %idxprom43 = sext i32 %28 to i64
  %arrayidx44 = getelementptr inbounds [50 x %"class.std::basic_string"]* %t, i32 0, i64 %idxprom43
  %call46 = invoke %"class.std::basic_string"* @_ZNSsaSEPKc(%"class.std::basic_string"* %arrayidx44, i8* getelementptr inbounds ([3 x i8]* @.str1, i32 0, i32 0))
          to label %invoke.cont45 unwind label %lpad5

33
  br label %if.end47

34
  call void @_ZNSsD1Ev(%"class.std::basic_string"* %s) #2
  %29 = load i32* %test, align 4
  %inc49 = add nsw i32 %29, 1
  store i32 %inc49, i32* %test, align 4
  br label %for.cond

35
  store i32 0, i32* %j, align 4
  br label %for.cond51

36
  %30 = load i32* %j, align 4
  %cmp52 = icmp slt i32 %30, 50
  br i1 %cmp52, label %for.body53, label %for.end72

37
  %31 = load i32* %j, align 4
  %idxprom54 = sext i32 %31 to i64
  %arrayidx55 = getelementptr inbounds [50 x %"class.std::basic_string"]* %t, i32 0, i64 %idxprom54
  %call57 = invoke %"class.std::basic_ostream"* @_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKSbIS4_S5_T1_E(%"class.std::basic_ostream"* @_ZSt4cout, %"class.std::basic_string"* %arrayidx55)
          to label %invoke.cont56 unwind label %lpad2

38
  %call59 = invoke %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* %call57, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
          to label %invoke.cont58 unwind label %lpad2

39
  %32 = load i32* %j, align 4
  %idxprom60 = sext i32 %32 to i64
  %arrayidx61 = getelementptr inbounds [50 x %"class.std::basic_string"]* %t, i32 0, i64 %idxprom60
  %call63 = invoke zeroext i1 @_ZStneIcSt11char_traitsIcESaIcEEbRKSbIT_T0_T1_EPKS3_(%"class.std::basic_string"* %arrayidx61, i8* getelementptr inbounds ([4 x i8]* @.str, i32 0, i32 0))
          to label %invoke.cont62 unwind label %lpad2

40
  br i1 %call63, label %land.lhs.true, label %if.end69

41
  %33 = load i32* %j, align 4
  %idxprom64 = sext i32 %33 to i64
  %arrayidx65 = getelementptr inbounds [50 x %"class.std::basic_string"]* %t, i32 0, i64 %idxprom64
  %call67 = invoke zeroext i1 @_ZStneIcSt11char_traitsIcESaIcEEbRKSbIT_T0_T1_EPKS3_(%"class.std::basic_string"* %arrayidx65, i8* getelementptr inbounds ([3 x i8]* @.str1, i32 0, i32 0))
          to label %invoke.cont66 unwind label %lpad2

42
  br i1 %call67, label %if.then68, label %if.end69

43
  br label %for.end72

44
  %34 = load i32* %j, align 4
  %inc71 = add nsw i32 %34, 1
  store i32 %inc71, i32* %j, align 4
  br label %for.cond51

45
  %array.begin73 = getelementptr inbounds [50 x %"class.std::basic_string"]* %t, i32 0, i32 0
  %35 = getelementptr inbounds %"class.std::basic_string"* %array.begin73, i64 50
  br label %arraydestroy.body74

46
  %arraydestroy.elementPast75 = phi %"class.std::basic_string"* [ %35, %for.end72 ], [ %arraydestroy.element76, %arraydestroy.body74 ]
  %arraydestroy.element76 = getelementptr inbounds %"class.std::basic_string"* %arraydestroy.elementPast75, i64 -1
  call void @_ZNSsD1Ev(%"class.std::basic_string"* %arraydestroy.element76) #2
  %arraydestroy.done77 = icmp eq %"class.std::basic_string"* %arraydestroy.element76, %array.begin73
  br i1 %arraydestroy.done77, label %arraydestroy.done78, label %arraydestroy.body74

47
  %36 = load i32* %retval
  ret i32 %36

48
  %array.begin79 = getelementptr inbounds [50 x %"class.std::basic_string"]* %t, i32 0, i32 0
  %37 = getelementptr inbounds %"class.std::basic_string"* %array.begin79, i64 50
  br label %arraydestroy.body80

49
  %arraydestroy.elementPast81 = phi %"class.std::basic_string"* [ %37, %ehcleanup ], [ %arraydestroy.element82, %arraydestroy.body80 ]
  %arraydestroy.element82 = getelementptr inbounds %"class.std::basic_string"* %arraydestroy.elementPast81, i64 -1
  call void @_ZNSsD1Ev(%"class.std::basic_string"* %arraydestroy.element82) #2
  %arraydestroy.done83 = icmp eq %"class.std::basic_string"* %arraydestroy.element82, %array.begin79
  br i1 %arraydestroy.done83, label %arraydestroy.done84, label %arraydestroy.body80

50
  br label %eh.resume

51
  %exn = load i8** %exn.slot
  %sel = load i32* %ehselector.slot
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val85 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val85
