
1
  %retval = alloca i32, align 4
  %t = alloca i64, align 8
  %x = alloca i64, align 8
  %n = alloca i64, align 8
  %a = alloca i64, align 8
  %b = alloca i64, align 8
  %c = alloca i64, align 8
  %d = alloca i64, align 8
  %i = alloca i64, align 8
  %j = alloca i64, align 8
  %s = alloca %"class.std::basic_string", align 8
  %exn.slot = alloca i8*
  %ehselector.slot = alloca i32
  %saved_stack = alloca i8*
  %v = alloca %"class.std::vector", align 8
  %cleanup.dest.slot = alloca i32
  store i32 0, i32* %retval
  %call = call %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* @_ZSt3cin, i64* %t)
  call void @_ZNSsC1Ev(%"class.std::basic_string"* %s)
  br label %while.cond

2
  %0 = load i64* %t, align 8
  %dec = add nsw i64 %0, -1
  store i64 %dec, i64* %t, align 8
  %tobool = icmp ne i64 %0, 0
  br i1 %tobool, label %while.body, label %while.end

3
  %call1 = invoke %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* @_ZSt3cin, i64* %n)
          to label %invoke.cont unwind label %lpad

4
  %1 = load i64* %n, align 8
  %2 = call i8* @llvm.stacksave()
  store i8* %2, i8** %saved_stack
  %vla = alloca i64, i64 %1, align 16
  store i64 0, i64* %i, align 8
  br label %for.cond

5
  %3 = load i64* %i, align 8
  %4 = load i64* %n, align 8
  %cmp = icmp slt i64 %3, %4
  br i1 %cmp, label %for.body, label %for.end

6
  %5 = load i64* %i, align 8
  %arrayidx = getelementptr inbounds i64* %vla, i64 %5
  %call3 = invoke %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* @_ZSt3cin, i64* %arrayidx)
          to label %invoke.cont2 unwind label %lpad

7
  %6 = load i64* %i, align 8
  %arrayidx4 = getelementptr inbounds i64* %vla, i64 %6
  %7 = load i64* %arrayidx4, align 8
  %cmp5 = icmp eq i64 %7, 1
  br i1 %cmp5, label %if.then, label %if.end

8
  %8 = load i64* %i, align 8
  store i64 %8, i64* %a, align 8
  br label %if.end

9
  %9 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %10 = extractvalue { i8*, i32 } %9, 0
  store i8* %10, i8** %exn.slot
  %11 = extractvalue { i8*, i32 } %9, 1
  store i32 %11, i32* %ehselector.slot
  br label %ehcleanup

10
  %12 = load i64* %i, align 8
  %inc = add nsw i64 %12, 1
  store i64 %inc, i64* %i, align 8
  br label %for.cond

11
  invoke void @_ZNSt6vectorIxSaIxEEC1Ev(%"class.std::vector"* %v)
          to label %invoke.cont6 unwind label %lpad

12
  %13 = load i64* %a, align 8
  %sub = sub nsw i64 %13, 1
  store i64 %sub, i64* %i, align 8
  br label %for.cond7

13
  %14 = load i64* %i, align 8
  %cmp8 = icmp sge i64 %14, 0
  br i1 %cmp8, label %for.body9, label %for.end15

14
  %15 = load i64* %i, align 8
  %arrayidx10 = getelementptr inbounds i64* %vla, i64 %15
  invoke void @_ZNSt6vectorIxSaIxEE9push_backERKx(%"class.std::vector"* %v, i64* %arrayidx10)
          to label %invoke.cont12 unwind label %lpad11

15
  %16 = load i64* %i, align 8
  %dec14 = add nsw i64 %16, -1
  store i64 %dec14, i64* %i, align 8
  br label %for.cond7

16
  %17 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %18 = extractvalue { i8*, i32 } %17, 0
  store i8* %18, i8** %exn.slot
  %19 = extractvalue { i8*, i32 } %17, 1
  store i32 %19, i32* %ehselector.slot
  call void @_ZNSt6vectorIxSaIxEED1Ev(%"class.std::vector"* %v) #2
  br label %ehcleanup

17
  %20 = load i64* %a, align 8
  %add = add nsw i64 %20, 1
  store i64 %add, i64* %j, align 8
  br label %for.cond16

18
  %21 = load i64* %j, align 8
  %22 = load i64* %n, align 8
  %cmp17 = icmp slt i64 %21, %22
  br i1 %cmp17, label %for.body18, label %for.end23

19
  %23 = load i64* %j, align 8
  %arrayidx19 = getelementptr inbounds i64* %vla, i64 %23
  invoke void @_ZNSt6vectorIxSaIxEE9push_backERKx(%"class.std::vector"* %v, i64* %arrayidx19)
          to label %invoke.cont20 unwind label %lpad11

20
  %24 = load i64* %j, align 8
  %inc22 = add nsw i64 %24, 1
  store i64 %inc22, i64* %j, align 8
  br label %for.cond16

21
  %call25 = invoke %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* @_ZSt4cout, i32 1)
          to label %invoke.cont24 unwind label %lpad11

22
  store i64 0, i64* %i, align 8
  br label %for.cond26

23
  %25 = load i64* %i, align 8
  %26 = load i64* %n, align 8
  %sub27 = sub nsw i64 %26, 1
  %cmp28 = icmp slt i64 %25, %sub27
  br i1 %cmp28, label %for.body29, label %for.end38

24
  %call31 = invoke %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* @_ZSt4cout, i8* getelementptr inbounds ([2 x i8]* @.str, i32 0, i32 0))
          to label %invoke.cont30 unwind label %lpad11

25
  %27 = load i64* %i, align 8
  %call33 = invoke i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector"* %v, i64 %27)
          to label %invoke.cont32 unwind label %lpad11

26
  %28 = load i64* %call33
  %call35 = invoke %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"* %call31, i64 %28)
          to label %invoke.cont34 unwind label %lpad11

27
  %29 = load i64* %i, align 8
  %inc37 = add nsw i64 %29, 1
  store i64 %inc37, i64* %i, align 8
  br label %for.cond26

28
  %call40 = invoke %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* @_ZSt4cout, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
          to label %invoke.cont39 unwind label %lpad11

29
  call void @_ZNSt6vectorIxSaIxEED1Ev(%"class.std::vector"* %v) #2
  %30 = load i8** %saved_stack
  call void @llvm.stackrestore(i8* %30)
  br label %while.cond

30
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  call void @_ZNSsD1Ev(%"class.std::basic_string"* %s) #2
  %31 = load i32* %retval
  ret i32 %31

31
  call void @_ZNSsD1Ev(%"class.std::basic_string"* %s) #2
  %exn = load i8** %exn.slot
  %sel = load i32* %ehselector.slot
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val41 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val41
