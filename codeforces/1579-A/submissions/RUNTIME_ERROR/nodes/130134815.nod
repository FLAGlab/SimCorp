
1
  %retval = alloca i32, align 4
  %argc.addr = alloca i32, align 4
  %argv.addr = alloca i8**, align 8
  %i = alloca i32, align 4
  %ref.tmp = alloca %"class.std::basic_string", align 8
  %agg.tmp = alloca %"class.std::basic_string", align 8
  %ref.tmp2 = alloca %"class.std::allocator", align 1
  %exn.slot = alloca i8*
  %ehselector.slot = alloca i32
  store i32 0, i32* %retval
  store i32 %argc, i32* %argc.addr, align 4
  store i8** %argv, i8*** %argv.addr, align 8
  %0 = load i8*** %argv.addr, align 8
  %arrayidx = getelementptr inbounds i8** %0, i64 0
  %1 = load i8** %arrayidx, align 8
  %call = call %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* @_ZSt4cout, i8* %1)
  store i32 0, i32* %i, align 4
  br label %for.cond

2
  %2 = load i32* %i, align 4
  %cmp = icmp slt i32 %2, 6
  br i1 %cmp, label %for.body, label %for.end

3
  %3 = load i32* %i, align 4
  %add = add nsw i32 %3, 1
  %idxprom = sext i32 %add to i64
  %4 = load i8*** %argv.addr, align 8
  %arrayidx1 = getelementptr inbounds i8** %4, i64 %idxprom
  %5 = load i8** %arrayidx1, align 8
  call void @_ZNSaIcEC1Ev(%"class.std::allocator"* %ref.tmp2) #2
  invoke void @_ZNSsC1EPKcRKSaIcE(%"class.std::basic_string"* %agg.tmp, i8* %5, %"class.std::allocator"* %ref.tmp2)
          to label %invoke.cont unwind label %lpad

4
  invoke void @_Z9isCasimirSs(%"class.std::basic_string"* sret %ref.tmp, %"class.std::basic_string"* %agg.tmp)
          to label %invoke.cont4 unwind label %lpad3

5
  %call7 = invoke %"class.std::basic_ostream"* @_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKSbIS4_S5_T1_E(%"class.std::basic_ostream"* @_ZSt4cout, %"class.std::basic_string"* %ref.tmp)
          to label %invoke.cont6 unwind label %lpad5

6
  %call9 = invoke %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* %call7, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
          to label %invoke.cont8 unwind label %lpad5

7
  call void @_ZNSsD1Ev(%"class.std::basic_string"* %ref.tmp) #2
  call void @_ZNSsD1Ev(%"class.std::basic_string"* %agg.tmp) #2
  call void @_ZNSaIcED1Ev(%"class.std::allocator"* %ref.tmp2) #2
  %6 = load i32* %i, align 4
  %inc = add nsw i32 %6, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

8
  %7 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %8 = extractvalue { i8*, i32 } %7, 0
  store i8* %8, i8** %exn.slot
  %9 = extractvalue { i8*, i32 } %7, 1
  store i32 %9, i32* %ehselector.slot
  br label %ehcleanup10

9
  %10 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %11 = extractvalue { i8*, i32 } %10, 0
  store i8* %11, i8** %exn.slot
  %12 = extractvalue { i8*, i32 } %10, 1
  store i32 %12, i32* %ehselector.slot
  br label %ehcleanup

10
  %13 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %14 = extractvalue { i8*, i32 } %13, 0
  store i8* %14, i8** %exn.slot
  %15 = extractvalue { i8*, i32 } %13, 1
  store i32 %15, i32* %ehselector.slot
  call void @_ZNSsD1Ev(%"class.std::basic_string"* %ref.tmp) #2
  br label %ehcleanup

11
  call void @_ZNSsD1Ev(%"class.std::basic_string"* %agg.tmp) #2
  br label %ehcleanup10

12
  call void @_ZNSaIcED1Ev(%"class.std::allocator"* %ref.tmp2) #2
  %exn = load i8** %exn.slot
  %sel = load i32* %ehselector.slot
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val11 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val11

13
  ret i32 0
