
1
  %retval = alloca i32, align 4
  %t = alloca i32, align 4
  %s = alloca [50 x i8], align 16
  %a = alloca [3 x i32], align 4
  %i = alloca i32, align 4
  store i32 0, i32* %retval
  %call = call %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* @_ZSt3cin, i32* %t)
  br label %while.cond

2
  %0 = load i32* %t, align 4
  %dec = add nsw i32 %0, -1
  store i32 %dec, i32* %t, align 4
  %tobool = icmp ne i32 %0, 0
  br i1 %tobool, label %while.body, label %while.end

3
  %arraydecay = getelementptr inbounds [50 x i8]* %s, i32 0, i32 0
  %call1 = call %"class.std::basic_istream"* @_ZStrsIcSt11char_traitsIcEERSt13basic_istreamIT_T0_ES6_PS3_(%"class.std::basic_istream"* @_ZSt3cin, i8* %arraydecay)
  %1 = bitcast [3 x i32]* %a to i8*
  call void @llvm.memset.p0i8.i64(i8* %1, i8 0, i64 12, i32 4, i1 false)
  store i32 0, i32* %i, align 4
  br label %for.cond

4
  %2 = load i32* %i, align 4
  %idxprom = sext i32 %2 to i64
  %arrayidx = getelementptr inbounds [50 x i8]* %s, i32 0, i64 %idxprom
  %3 = load i8* %arrayidx, align 1
  %conv = sext i8 %3 to i32
  %cmp = icmp ne i32 %conv, 0
  br i1 %cmp, label %for.body, label %for.end

5
  %4 = load i32* %i, align 4
  %idxprom2 = sext i32 %4 to i64
  %arrayidx3 = getelementptr inbounds [50 x i8]* %s, i32 0, i64 %idxprom2
  %5 = load i8* %arrayidx3, align 1
  %conv4 = sext i8 %5 to i32
  %sub = sub nsw i32 %conv4, 65
  %idxprom5 = sext i32 %sub to i64
  %arrayidx6 = getelementptr inbounds [3 x i32]* %a, i32 0, i64 %idxprom5
  %6 = load i32* %arrayidx6, align 4
  %inc = add nsw i32 %6, 1
  store i32 %inc, i32* %arrayidx6, align 4
  %7 = load i32* %i, align 4
  %inc7 = add nsw i32 %7, 1
  store i32 %inc7, i32* %i, align 4
  br label %for.cond

6
  %arrayidx8 = getelementptr inbounds [3 x i32]* %a, i32 0, i64 0
  %8 = load i32* %arrayidx8, align 4
  %arrayidx9 = getelementptr inbounds [3 x i32]* %a, i32 0, i64 1
  %9 = load i32* %arrayidx9, align 4
  %arrayidx10 = getelementptr inbounds [3 x i32]* %a, i32 0, i64 2
  %10 = load i32* %arrayidx10, align 4
  %sub11 = sub nsw i32 %9, %10
  %cmp12 = icmp eq i32 %8, %sub11
  br i1 %cmp12, label %if.then, label %if.else

7
  %call13 = call %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* @_ZSt4cout, i8* getelementptr inbounds ([5 x i8]* @.str, i32 0, i32 0))
  br label %if.end

8
  %call14 = call %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* @_ZSt4cout, i8* getelementptr inbounds ([4 x i8]* @.str1, i32 0, i32 0))
  br label %if.end

9
  br label %while.cond

10
  ret i32 0
