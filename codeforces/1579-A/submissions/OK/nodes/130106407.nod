
1
  %retval = alloca i32, align 4
  %i = alloca i32, align 4
  store i32 0, i32* %retval
  %call = call i32 (i8*, ...)* @scanf(i8* getelementptr inbounds ([3 x i8]* @.str, i32 0, i32 0), i32* @T)
  br label %while.cond

2
  %0 = load i32* @T, align 4
  %dec = add nsw i32 %0, -1
  store i32 %dec, i32* @T, align 4
  %tobool = icmp ne i32 %0, 0
  br i1 %tobool, label %while.body, label %while.end

3
  %call1 = call i32 (i8*, ...)* @scanf(i8* getelementptr inbounds ([3 x i8]* @.str1, i32 0, i32 0), i8* getelementptr inbounds ([100 x i8]* @s, i32 0, i32 0))
  store i32 0, i32* getelementptr inbounds ([200 x i32]* @c, i32 0, i64 67), align 4
  store i32 0, i32* getelementptr inbounds ([200 x i32]* @c, i32 0, i64 66), align 4
  store i32 0, i32* getelementptr inbounds ([200 x i32]* @c, i32 0, i64 65), align 4
  %call2 = call i64 @strlen(i8* getelementptr inbounds ([100 x i8]* @s, i32 0, i32 0)) #5
  %sub = sub i64 %call2, 1
  %conv = trunc i64 %sub to i32
  store i32 %conv, i32* %i, align 4
  br label %for.cond

4
  %1 = load i32* %i, align 4
  %cmp = icmp sge i32 %1, 0
  br i1 %cmp, label %for.body, label %for.end

5
  %2 = load i32* %i, align 4
  %idxprom = sext i32 %2 to i64
  %arrayidx = getelementptr inbounds [100 x i8]* @s, i32 0, i64 %idxprom
  %3 = load i8* %arrayidx, align 1
  %idxprom3 = sext i8 %3 to i64
  %arrayidx4 = getelementptr inbounds [200 x i32]* @c, i32 0, i64 %idxprom3
  %4 = load i32* %arrayidx4, align 4
  %inc = add nsw i32 %4, 1
  store i32 %inc, i32* %arrayidx4, align 4
  %5 = load i32* %i, align 4
  %dec5 = add nsw i32 %5, -1
  store i32 %dec5, i32* %i, align 4
  br label %for.cond

6
  %6 = load i32* getelementptr inbounds ([200 x i32]* @c, i32 0, i64 65), align 4
  %7 = load i32* getelementptr inbounds ([200 x i32]* @c, i32 0, i64 67), align 4
  %add = add nsw i32 %6, %7
  %8 = load i32* getelementptr inbounds ([200 x i32]* @c, i32 0, i64 66), align 4
  %cmp6 = icmp eq i32 %add, %8
  %cond = select i1 %cmp6, i8* getelementptr inbounds ([5 x i8]* @.str2, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str3, i32 0, i32 0)
  %call7 = call i32 (i8*, ...)* @printf(i8* %cond)
  br label %while.cond

7
  ret i32 0
