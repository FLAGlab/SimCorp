
1
  %retval = alloca i32, align 4
  %t = alloca i32, align 4
  %i = alloca i32, align 4
  store i32 0, i32* %retval
  %call = call %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* @_ZSt3cin, i32* %t)
  br label %while.cond

2
  %0 = load i32* %t, align 4
  %dec = add nsw i32 %0, -1
  store i32 %dec, i32* %t, align 4
  %tobool = icmp ne i32 %0, 0
  br i1 %tobool, label %while.body, label %while.end

3
  %call1 = call %"class.std::basic_istream"* @_ZStrsIcSt11char_traitsIcESaIcEERSt13basic_istreamIT_T0_ES7_RSbIS4_S5_T1_E(%"class.std::basic_istream"* @_ZSt3cin, %"class.std::basic_string"* @s)
  store i32 0, i32* getelementptr inbounds ([4 x i32]* @a, i32 0, i64 2), align 4
  store i32 0, i32* getelementptr inbounds ([4 x i32]* @a, i32 0, i64 1), align 4
  store i32 0, i32* getelementptr inbounds ([4 x i32]* @a, i32 0, i64 0), align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

4
  %1 = load i32* %i, align 4
  %conv = sext i32 %1 to i64
  %call2 = call i64 @_ZNKSs4sizeEv(%"class.std::basic_string"* @s) #2
  %cmp = icmp ult i64 %conv, %call2
  br i1 %cmp, label %for.body, label %for.end

5
  %2 = load i32* %i, align 4
  %conv3 = sext i32 %2 to i64
  %call4 = call i8* @_ZNSsixEm(%"class.std::basic_string"* @s, i64 %conv3)
  %3 = load i8* %call4
  %conv5 = sext i8 %3 to i32
  %sub = sub nsw i32 %conv5, 65
  %idxprom = sext i32 %sub to i64
  %arrayidx = getelementptr inbounds [4 x i32]* @a, i32 0, i64 %idxprom
  %4 = load i32* %arrayidx, align 4
  %inc = add nsw i32 %4, 1
  store i32 %inc, i32* %arrayidx, align 4
  %5 = load i32* %i, align 4
  %inc6 = add nsw i32 %5, 1
  store i32 %inc6, i32* %i, align 4
  br label %for.cond

6
  %6 = load i32* getelementptr inbounds ([4 x i32]* @a, i32 0, i64 0), align 4
  %7 = load i32* getelementptr inbounds ([4 x i32]* @a, i32 0, i64 2), align 4
  %add = add nsw i32 %6, %7
  %8 = load i32* getelementptr inbounds ([4 x i32]* @a, i32 0, i64 1), align 4
  %cmp7 = icmp eq i32 %add, %8
  br i1 %cmp7, label %if.then, label %if.else

7
  %call8 = call i32 @puts(i8* getelementptr inbounds ([4 x i8]* @.str, i32 0, i32 0))
  br label %if.end

8
  %call9 = call i32 @puts(i8* getelementptr inbounds ([3 x i8]* @.str2, i32 0, i32 0))
  br label %if.end

9
  br label %while.cond

10
  ret i32 0
