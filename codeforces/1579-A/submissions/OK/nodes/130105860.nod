
1
  %retval = alloca i32, align 4
  %i = alloca i32, align 4
  store i32 0, i32* %retval
  %call = call i32 (i8*, ...)* @scanf(i8* getelementptr inbounds ([3 x i8]* @.str, i32 0, i32 0), i32* @T)
  br label %while.cond

2
  %0 = load i32* @T, align 4
  %dec = add nsw i32 %0, -1
  store i32 %dec, i32* @T, align 4
  %tobool = icmp ne i32 %0, 0
  br i1 %tobool, label %while.body, label %while.end

3
  %call1 = call %"class.std::basic_istream"* @_ZStrsIcSt11char_traitsIcESaIcEERSt13basic_istreamIT_T0_ES7_RSbIS4_S5_T1_E(%"class.std::basic_istream"* @_ZSt3cin, %"class.std::basic_string"* @s)
  store i32 0, i32* @c, align 4
  store i32 0, i32* @b, align 4
  store i32 0, i32* @a, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

4
  %1 = load i32* %i, align 4
  %conv = sext i32 %1 to i64
  %call2 = call i64 @_ZNKSs4sizeEv(%"class.std::basic_string"* @s) #2
  %cmp = icmp ult i64 %conv, %call2
  br i1 %cmp, label %for.body, label %for.end

5
  %2 = load i32* %i, align 4
  %conv3 = sext i32 %2 to i64
  %call4 = call i8* @_ZNSsixEm(%"class.std::basic_string"* @s, i64 %conv3)
  %3 = load i8* %call4
  %conv5 = sext i8 %3 to i32
  %cmp6 = icmp eq i32 %conv5, 65
  br i1 %cmp6, label %if.then, label %if.end

6
  %4 = load i32* @a, align 4
  %inc = add nsw i32 %4, 1
  store i32 %inc, i32* @a, align 4
  br label %if.end

7
  %5 = load i32* %i, align 4
  %conv7 = sext i32 %5 to i64
  %call8 = call i8* @_ZNSsixEm(%"class.std::basic_string"* @s, i64 %conv7)
  %6 = load i8* %call8
  %conv9 = sext i8 %6 to i32
  %cmp10 = icmp eq i32 %conv9, 66
  br i1 %cmp10, label %if.then11, label %if.end13

8
  %7 = load i32* @b, align 4
  %inc12 = add nsw i32 %7, 1
  store i32 %inc12, i32* @b, align 4
  br label %if.end13

9
  %8 = load i32* %i, align 4
  %conv14 = sext i32 %8 to i64
  %call15 = call i8* @_ZNSsixEm(%"class.std::basic_string"* @s, i64 %conv14)
  %9 = load i8* %call15
  %conv16 = sext i8 %9 to i32
  %cmp17 = icmp eq i32 %conv16, 67
  br i1 %cmp17, label %if.then18, label %if.end20

10
  %10 = load i32* @c, align 4
  %inc19 = add nsw i32 %10, 1
  store i32 %inc19, i32* @c, align 4
  br label %if.end20

11
  %11 = load i32* %i, align 4
  %inc21 = add nsw i32 %11, 1
  store i32 %inc21, i32* %i, align 4
  br label %for.cond

12
  %12 = load i32* @b, align 4
  %13 = load i32* @a, align 4
  %14 = load i32* @c, align 4
  %add = add nsw i32 %13, %14
  %cmp22 = icmp eq i32 %12, %add
  %cond = select i1 %cmp22, i8* getelementptr inbounds ([4 x i8]* @.str2, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str3, i32 0, i32 0)
  %call23 = call i32 @puts(i8* %cond)
  br label %while.cond

13
  %15 = load i32* %retval
  ret i32 %15
