
1
  %retval = alloca i32, align 4
  %T = alloca i32, align 4
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %A = alloca %"class.std::basic_string", align 8
  %ref.tmp = alloca %"class.std::allocator", align 1
  %exn.slot = alloca i8*
  %ehselector.slot = alloca i32
  %i = alloca i32, align 4
  store i32 0, i32* %retval
  %call = call i32 (i8*, ...)* @scanf(i8* getelementptr inbounds ([3 x i8]* @.str, i32 0, i32 0), i32* %T)
  br label %while.cond

2
  %0 = load i32* %T, align 4
  %dec = add nsw i32 %0, -1
  store i32 %dec, i32* %T, align 4
  %tobool = icmp ne i32 %0, 0
  br i1 %tobool, label %while.body, label %while.end

3
  store i32 0, i32* %x, align 4
  store i32 0, i32* %y, align 4
  call void @_ZNSaIcEC1Ev(%"class.std::allocator"* %ref.tmp) #2
  invoke void @_ZNSsC1EPKcRKSaIcE(%"class.std::basic_string"* %A, i8* getelementptr inbounds ([1 x i8]* @.str1, i32 0, i32 0), %"class.std::allocator"* %ref.tmp)
          to label %invoke.cont unwind label %lpad

4
  call void @_ZNSaIcED1Ev(%"class.std::allocator"* %ref.tmp) #2
  %call3 = invoke %"class.std::basic_istream"* @_ZStrsIcSt11char_traitsIcESaIcEERSt13basic_istreamIT_T0_ES7_RSbIS4_S5_T1_E(%"class.std::basic_istream"* @_ZSt3cin, %"class.std::basic_string"* %A)
          to label %invoke.cont2 unwind label %lpad1

5
  store i32 0, i32* %i, align 4
  br label %for.cond

6
  %1 = load i32* %i, align 4
  %conv = sext i32 %1 to i64
  %call4 = call i64 @_ZNKSs4sizeEv(%"class.std::basic_string"* %A) #2
  %cmp = icmp ult i64 %conv, %call4
  br i1 %cmp, label %for.body, label %for.end

7
  %2 = load i32* %i, align 4
  %conv5 = sext i32 %2 to i64
  %call7 = invoke i8* @_ZNSsixEm(%"class.std::basic_string"* %A, i64 %conv5)
          to label %invoke.cont6 unwind label %lpad1

8
  %3 = load i8* %call7
  %conv8 = sext i8 %3 to i32
  %cmp9 = icmp eq i32 %conv8, 65
  br i1 %cmp9, label %if.then, label %lor.lhs.false

9
  %4 = load i32* %i, align 4
  %conv10 = sext i32 %4 to i64
  %call12 = invoke i8* @_ZNSsixEm(%"class.std::basic_string"* %A, i64 %conv10)
          to label %invoke.cont11 unwind label %lpad1

10
  %5 = load i8* %call12
  %conv13 = sext i8 %5 to i32
  %cmp14 = icmp eq i32 %conv13, 67
  br i1 %cmp14, label %if.then, label %if.end

11
  %6 = load i32* %x, align 4
  %inc = add nsw i32 %6, 1
  store i32 %inc, i32* %x, align 4
  br label %if.end

12
  %7 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %8 = extractvalue { i8*, i32 } %7, 0
  store i8* %8, i8** %exn.slot
  %9 = extractvalue { i8*, i32 } %7, 1
  store i32 %9, i32* %ehselector.slot
  call void @_ZNSaIcED1Ev(%"class.std::allocator"* %ref.tmp) #2
  br label %eh.resume

13
  %10 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %11 = extractvalue { i8*, i32 } %10, 0
  store i8* %11, i8** %exn.slot
  %12 = extractvalue { i8*, i32 } %10, 1
  store i32 %12, i32* %ehselector.slot
  call void @_ZNSsD1Ev(%"class.std::basic_string"* %A) #2
  br label %eh.resume

14
  %13 = load i32* %i, align 4
  %conv15 = sext i32 %13 to i64
  %call17 = invoke i8* @_ZNSsixEm(%"class.std::basic_string"* %A, i64 %conv15)
          to label %invoke.cont16 unwind label %lpad1

15
  %14 = load i8* %call17
  %conv18 = sext i8 %14 to i32
  %cmp19 = icmp eq i32 %conv18, 66
  br i1 %cmp19, label %if.then20, label %if.end22

16
  %15 = load i32* %y, align 4
  %inc21 = add nsw i32 %15, 1
  store i32 %inc21, i32* %y, align 4
  br label %if.end22

17
  %16 = load i32* %i, align 4
  %inc23 = add nsw i32 %16, 1
  store i32 %inc23, i32* %i, align 4
  br label %for.cond

18
  %17 = load i32* %x, align 4
  %18 = load i32* %y, align 4
  %cmp24 = icmp eq i32 %17, %18
  br i1 %cmp24, label %if.then25, label %if.else

19
  %call27 = invoke i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([5 x i8]* @.str2, i32 0, i32 0))
          to label %invoke.cont26 unwind label %lpad1

20
  br label %if.end30

21
  %call29 = invoke i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([4 x i8]* @.str3, i32 0, i32 0))
          to label %invoke.cont28 unwind label %lpad1

22
  br label %if.end30

23
  call void @_ZNSsD1Ev(%"class.std::basic_string"* %A) #2
  br label %while.cond

24
  %19 = load i32* %retval
  ret i32 %19

25
  %exn = load i8** %exn.slot
  %sel = load i32* %ehselector.slot
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val31 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val31
