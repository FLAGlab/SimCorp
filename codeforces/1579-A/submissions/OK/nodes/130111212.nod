
1
  %retval = alloca i32, align 4
  %t = alloca i32, align 4
  %k = alloca i32, align 4
  %i = alloca i32, align 4
  %s = alloca %"class.std::basic_string", align 8
  %exn.slot = alloca i8*
  %ehselector.slot = alloca i32
  %cleanup.dest.slot = alloca i32
  store i32 0, i32* %retval
  call void @_ZNSsC1Ev(%"class.std::basic_string"* %s)
  %call = invoke %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* @_ZSt3cin, i32* %t)
          to label %invoke.cont unwind label %lpad

2
  br label %while.cond

3
  %0 = load i32* %t, align 4
  %dec = add nsw i32 %0, -1
  store i32 %dec, i32* %t, align 4
  %tobool = icmp ne i32 %0, 0
  br i1 %tobool, label %while.body, label %while.end

4
  store i32 0, i32* %k, align 4
  %call2 = invoke %"class.std::basic_istream"* @_ZStrsIcSt11char_traitsIcESaIcEERSt13basic_istreamIT_T0_ES7_RSbIS4_S5_T1_E(%"class.std::basic_istream"* @_ZSt3cin, %"class.std::basic_string"* %s)
          to label %invoke.cont1 unwind label %lpad

5
  store i32 0, i32* %i, align 4
  br label %for.cond

6
  %1 = load i32* %i, align 4
  %conv = sext i32 %1 to i64
  %call3 = call i64 @_ZNKSs4sizeEv(%"class.std::basic_string"* %s) #2
  %cmp = icmp ult i64 %conv, %call3
  br i1 %cmp, label %for.body, label %for.end

7
  %2 = load i32* %i, align 4
  %conv4 = sext i32 %2 to i64
  %call6 = invoke i8* @_ZNSsixEm(%"class.std::basic_string"* %s, i64 %conv4)
          to label %invoke.cont5 unwind label %lpad

8
  %3 = load i8* %call6
  %conv7 = sext i8 %3 to i32
  %cmp8 = icmp eq i32 %conv7, 66
  br i1 %cmp8, label %if.then, label %if.end

9
  %4 = load i32* %k, align 4
  %inc = add nsw i32 %4, 1
  store i32 %inc, i32* %k, align 4
  br label %if.end

10
  %5 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %6 = extractvalue { i8*, i32 } %5, 0
  store i8* %6, i8** %exn.slot
  %7 = extractvalue { i8*, i32 } %5, 1
  store i32 %7, i32* %ehselector.slot
  call void @_ZNSsD1Ev(%"class.std::basic_string"* %s) #2
  %exn = load i8** %exn.slot
  %sel = load i32* %ehselector.slot
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val20 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val20

11
  %8 = load i32* %i, align 4
  %inc9 = add nsw i32 %8, 1
  store i32 %inc9, i32* %i, align 4
  br label %for.cond

12
  %9 = load i32* %k, align 4
  %conv10 = sext i32 %9 to i64
  %call11 = call i64 @_ZNKSs4sizeEv(%"class.std::basic_string"* %s) #2
  %10 = load i32* %k, align 4
  %conv12 = sext i32 %10 to i64
  %sub = sub i64 %call11, %conv12
  %cmp13 = icmp eq i64 %conv10, %sub
  br i1 %cmp13, label %if.then14, label %if.else

13
  %call16 = invoke %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* @_ZSt4cout, i8* getelementptr inbounds ([5 x i8]* @.str, i32 0, i32 0))
          to label %invoke.cont15 unwind label %lpad

14
  br label %if.end19

15
  %call18 = invoke %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* @_ZSt4cout, i8* getelementptr inbounds ([4 x i8]* @.str1, i32 0, i32 0))
          to label %invoke.cont17 unwind label %lpad

16
  br label %if.end19

17
  br label %while.cond

18
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  call void @_ZNSsD1Ev(%"class.std::basic_string"* %s) #2
  %11 = load i32* %retval
  ret i32 %11
