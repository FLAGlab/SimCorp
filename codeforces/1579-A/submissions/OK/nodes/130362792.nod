
1
  %retval = alloca i32, align 4
  %t = alloca i32, align 4
  %s = alloca %"class.std::basic_string", align 8
  %exn.slot = alloca i8*
  %ehselector.slot = alloca i32
  %cnt = alloca i32, align 4
  %i = alloca i32, align 4
  store i32 0, i32* %retval
  %call = call %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* @_ZSt3cin, i32* %t)
  br label %while.cond

2
  %0 = load i32* %t, align 4
  %dec = add nsw i32 %0, -1
  store i32 %dec, i32* %t, align 4
  %tobool = icmp ne i32 %0, 0
  br i1 %tobool, label %while.body, label %while.end

3
  call void @_ZNSsC1Ev(%"class.std::basic_string"* %s)
  %call1 = invoke %"class.std::basic_istream"* @_ZStrsIcSt11char_traitsIcESaIcEERSt13basic_istreamIT_T0_ES7_RSbIS4_S5_T1_E(%"class.std::basic_istream"* @_ZSt3cin, %"class.std::basic_string"* %s)
          to label %invoke.cont unwind label %lpad

4
  store i32 0, i32* %cnt, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

5
  %1 = load i32* %i, align 4
  %conv = sext i32 %1 to i64
  %call2 = call i64 @_ZNKSs4sizeEv(%"class.std::basic_string"* %s) #2
  %cmp = icmp ult i64 %conv, %call2
  br i1 %cmp, label %for.body, label %for.end

6
  %2 = load i32* %i, align 4
  %conv3 = sext i32 %2 to i64
  %call5 = invoke i8* @_ZNSsixEm(%"class.std::basic_string"* %s, i64 %conv3)
          to label %invoke.cont4 unwind label %lpad

7
  %3 = load i8* %call5
  %conv6 = sext i8 %3 to i32
  %cmp7 = icmp eq i32 %conv6, 66
  br i1 %cmp7, label %if.then, label %if.end

8
  %4 = load i32* %cnt, align 4
  %inc = add nsw i32 %4, 1
  store i32 %inc, i32* %cnt, align 4
  br label %if.end

9
  %5 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %6 = extractvalue { i8*, i32 } %5, 0
  store i8* %6, i8** %exn.slot
  %7 = extractvalue { i8*, i32 } %5, 1
  store i32 %7, i32* %ehselector.slot
  call void @_ZNSsD1Ev(%"class.std::basic_string"* %s) #2
  %exn = load i8** %exn.slot
  %sel = load i32* %ehselector.slot
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val14 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val14

10
  %8 = load i32* %i, align 4
  %inc8 = add nsw i32 %8, 1
  store i32 %inc8, i32* %i, align 4
  br label %for.cond

11
  %9 = load i32* %cnt, align 4
  %mul = mul nsw i32 %9, 2
  %conv9 = sext i32 %mul to i64
  %call10 = call i64 @_ZNKSs4sizeEv(%"class.std::basic_string"* %s) #2
  %cmp11 = icmp eq i64 %conv9, %call10
  %cond = select i1 %cmp11, i8* getelementptr inbounds ([5 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str1, i32 0, i32 0)
  %call13 = invoke %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* @_ZSt4cout, i8* %cond)
          to label %invoke.cont12 unwind label %lpad

12
  call void @_ZNSsD1Ev(%"class.std::basic_string"* %s) #2
  br label %while.cond

13
  ret i32 0
