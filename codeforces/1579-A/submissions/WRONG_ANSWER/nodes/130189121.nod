
1
  %retval = alloca i32, align 4
  %a = alloca i64, align 8
  %b = alloca i64, align 8
  %n = alloca i64, align 8
  %m = alloca i64, align 8
  %i = alloca i64, align 8
  %j = alloca i64, align 8
  %k = alloca i64, align 8
  %l = alloca i64, align 8
  %o = alloca i64, align 8
  %cnt = alloca i64, align 8
  %s = alloca %"class.std::basic_string", align 8
  %exn.slot = alloca i8*
  %ehselector.slot = alloca i32
  %j1 = alloca i32, align 4
  store i32 0, i32* %retval
  store i64 0, i64* %a, align 8
  store i64 0, i64* %b, align 8
  store i64 0, i64* %cnt, align 8
  call void @_ZNSsC1Ev(%"class.std::basic_string"* %s)
  store i64 0, i64* %i, align 8
  br label %for.cond

2
  %0 = load i64* %i, align 8
  %1 = load i64* %n, align 8
  %cmp = icmp slt i64 %0, %1
  br i1 %cmp, label %for.body, label %for.end27

3
  %call = invoke %"class.std::basic_istream"* @_ZStrsIcSt11char_traitsIcESaIcEERSt13basic_istreamIT_T0_ES7_RSbIS4_S5_T1_E(%"class.std::basic_istream"* @_ZSt3cin, %"class.std::basic_string"* %s)
          to label %invoke.cont unwind label %lpad

4
  store i32 0, i32* %j1, align 4
  br label %for.cond2

5
  %2 = load i32* %j1, align 4
  %conv = sext i32 %2 to i64
  %call3 = call i64 @_ZNKSs4sizeEv(%"class.std::basic_string"* %s) #2
  %cmp4 = icmp ult i64 %conv, %call3
  br i1 %cmp4, label %for.body5, label %for.end

6
  %3 = load i32* %j1, align 4
  %conv6 = sext i32 %3 to i64
  %call8 = invoke i8* @_ZNSsixEm(%"class.std::basic_string"* %s, i64 %conv6)
          to label %invoke.cont7 unwind label %lpad

7
  %4 = load i8* %call8
  %conv9 = sext i8 %4 to i32
  %cmp10 = icmp eq i32 %conv9, 66
  br i1 %cmp10, label %if.then, label %if.else

8
  %5 = load i64* %a, align 8
  %inc = add nsw i64 %5, 1
  store i64 %inc, i64* %a, align 8
  br label %if.end

9
  %6 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %7 = extractvalue { i8*, i32 } %6, 0
  store i8* %7, i8** %exn.slot
  %8 = extractvalue { i8*, i32 } %6, 1
  store i32 %8, i32* %ehselector.slot
  call void @_ZNSsD1Ev(%"class.std::basic_string"* %s) #2
  %exn = load i8** %exn.slot
  %sel = load i32* %ehselector.slot
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val28 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val28

10
  %9 = load i64* %b, align 8
  %inc11 = add nsw i64 %9, 1
  store i64 %inc11, i64* %b, align 8
  br label %if.end

11
  %10 = load i32* %j1, align 4
  %inc12 = add nsw i32 %10, 1
  store i32 %inc12, i32* %j1, align 4
  br label %for.cond2

12
  %11 = load i64* %a, align 8
  %12 = load i64* %b, align 8
  %cmp13 = icmp eq i64 %11, %12
  br i1 %cmp13, label %if.then14, label %if.else19

13
  %call16 = invoke %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* @_ZSt4cout, i8* getelementptr inbounds ([4 x i8]* @.str, i32 0, i32 0))
          to label %invoke.cont15 unwind label %lpad

14
  %call18 = invoke %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* %call16, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
          to label %invoke.cont17 unwind label %lpad

15
  br label %if.end24

16
  %call21 = invoke %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* @_ZSt4cout, i8* getelementptr inbounds ([3 x i8]* @.str1, i32 0, i32 0))
          to label %invoke.cont20 unwind label %lpad

17
  %call23 = invoke %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* %call21, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
          to label %invoke.cont22 unwind label %lpad

18
  br label %if.end24

19
  %13 = load i64* %i, align 8
  %inc26 = add nsw i64 %13, 1
  store i64 %inc26, i64* %i, align 8
  br label %for.cond

20
  call void @_ZNSsD1Ev(%"class.std::basic_string"* %s) #2
  %14 = load i32* %retval
  ret i32 %14
