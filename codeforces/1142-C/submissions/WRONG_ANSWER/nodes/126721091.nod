
1
  %retval = alloca i32, align 4
  %i = alloca i64, align 8
  %k = alloca i64, align 8
  %i11 = alloca i64, align 8
  %agg.tmp = alloca %struct.nd, align 8
  %agg.tmp23 = alloca %struct.nd, align 8
  %agg.tmp25 = alloca %struct.nd, align 8
  store i32 0, i32* %retval
  %call = call %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* @_ZSt3cin, i64* @n)
  store i64 1, i64* %i, align 8
  br label %for.cond

2
  %0 = load i64* %i, align 8
  %1 = load i64* @n, align 8
  %cmp = icmp sle i64 %0, %1
  br i1 %cmp, label %for.body, label %for.end

3
  %2 = load i64* %i, align 8
  %arrayidx = getelementptr inbounds [1000006 x %struct.nd]* @aa, i32 0, i64 %2
  %x = getelementptr inbounds %struct.nd* %arrayidx, i32 0, i32 0
  %call1 = call %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* @_ZSt3cin, i64* %x)
  %3 = load i64* %i, align 8
  %arrayidx2 = getelementptr inbounds [1000006 x %struct.nd]* @aa, i32 0, i64 %3
  %y = getelementptr inbounds %struct.nd* %arrayidx2, i32 0, i32 1
  %call3 = call %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* %call1, i64* %y)
  %4 = load i64* %i, align 8
  %arrayidx4 = getelementptr inbounds [1000006 x %struct.nd]* @aa, i32 0, i64 %4
  %x5 = getelementptr inbounds %struct.nd* %arrayidx4, i32 0, i32 0
  %5 = load i64* %x5, align 8
  %6 = load i64* %i, align 8
  %arrayidx6 = getelementptr inbounds [1000006 x %struct.nd]* @aa, i32 0, i64 %6
  %x7 = getelementptr inbounds %struct.nd* %arrayidx6, i32 0, i32 0
  %7 = load i64* %x7, align 8
  %mul = mul nsw i64 %5, %7
  %8 = load i64* %i, align 8
  %arrayidx8 = getelementptr inbounds [1000006 x %struct.nd]* @aa, i32 0, i64 %8
  %y9 = getelementptr inbounds %struct.nd* %arrayidx8, i32 0, i32 1
  %9 = load i64* %y9, align 8
  %sub = sub nsw i64 %9, %mul
  store i64 %sub, i64* %y9, align 8
  %10 = load i64* %i, align 8
  %inc = add nsw i64 %10, 1
  store i64 %inc, i64* %i, align 8
  br label %for.cond

4
  %11 = load i64* @n, align 8
  %add.ptr = getelementptr inbounds %struct.nd* getelementptr inbounds ([1000006 x %struct.nd]* @aa, i32 0, i32 0), i64 %11
  %add.ptr10 = getelementptr inbounds %struct.nd* %add.ptr, i64 1
  call void @_ZSt4sortIP2ndPFxS0_S0_EEvT_S4_T0_(%struct.nd* getelementptr inbounds ([1000006 x %struct.nd]* @aa, i32 0, i64 1), %struct.nd* %add.ptr10, i64 (i64, i64, i64, i64)* @_Z4cmp12ndS_)
  store i64 0, i64* %k, align 8
  store i64 -2000000000, i64* getelementptr inbounds ([1000006 x %struct.nd]* @aa, i32 0, i64 0, i32 0), align 8
  store i64 1, i64* %i11, align 8
  br label %for.cond12

5
  %12 = load i64* %i11, align 8
  %13 = load i64* @n, align 8
  %cmp13 = icmp sle i64 %12, %13
  br i1 %cmp13, label %for.body14, label %for.end35

6
  %14 = load i64* %i11, align 8
  %arrayidx15 = getelementptr inbounds [1000006 x %struct.nd]* @aa, i32 0, i64 %14
  %x16 = getelementptr inbounds %struct.nd* %arrayidx15, i32 0, i32 0
  %15 = load i64* %x16, align 8
  %16 = load i64* %i11, align 8
  %sub17 = sub nsw i64 %16, 1
  %arrayidx18 = getelementptr inbounds [1000006 x %struct.nd]* @aa, i32 0, i64 %sub17
  %x19 = getelementptr inbounds %struct.nd* %arrayidx18, i32 0, i32 0
  %17 = load i64* %x19, align 8
  %cmp20 = icmp eq i64 %15, %17
  br i1 %cmp20, label %if.then, label %if.end

7
  br label %for.inc33

8
  br label %while.cond

9
  %18 = load i64* %k, align 8
  %cmp21 = icmp sgt i64 %18, 1
  br i1 %cmp21, label %land.rhs, label %land.end

10
  %19 = load i64* %i11, align 8
  %arrayidx22 = getelementptr inbounds [1000006 x %struct.nd]* @ans, i32 0, i64 %19
  %20 = bitcast %struct.nd* %agg.tmp to i8*
  %21 = bitcast %struct.nd* %arrayidx22 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %20, i8* %21, i64 16, i32 8, i1 false)
  %22 = load i64* %k, align 8
  %arrayidx24 = getelementptr inbounds [1000006 x %struct.nd]* @ans, i32 0, i64 %22
  %23 = bitcast %struct.nd* %agg.tmp23 to i8*
  %24 = bitcast %struct.nd* %arrayidx24 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %23, i8* %24, i64 16, i32 8, i1 false)
  %25 = load i64* %k, align 8
  %sub26 = sub nsw i64 %25, 1
  %arrayidx27 = getelementptr inbounds [1000006 x %struct.nd]* @aa, i32 0, i64 %sub26
  %26 = bitcast %struct.nd* %agg.tmp25 to i8*
  %27 = bitcast %struct.nd* %arrayidx27 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %26, i8* %27, i64 16, i32 8, i1 false)
  %28 = bitcast %struct.nd* %agg.tmp to { i64, i64 }*
  %29 = getelementptr { i64, i64 }* %28, i32 0, i32 0
  %30 = load i64* %29, align 1
  %31 = getelementptr { i64, i64 }* %28, i32 0, i32 1
  %32 = load i64* %31, align 1
  %33 = bitcast %struct.nd* %agg.tmp23 to { i64, i64 }*
  %34 = getelementptr { i64, i64 }* %33, i32 0, i32 0
  %35 = load i64* %34, align 1
  %36 = getelementptr { i64, i64 }* %33, i32 0, i32 1
  %37 = load i64* %36, align 1
  %38 = bitcast %struct.nd* %agg.tmp25 to { i64, i64 }*
  %39 = getelementptr { i64, i64 }* %38, i32 0, i32 0
  %40 = load i64* %39, align 1
  %41 = getelementptr { i64, i64 }* %38, i32 0, i32 1
  %42 = load i64* %41, align 1
  %call28 = call i64 @_Z4work2ndS_S_(i64 %30, i64 %32, i64 %35, i64 %37, i64 %40, i64 %42)
  %cmp29 = icmp sle i64 %call28, 0
  br label %land.end

11
  %43 = phi i1 [ false, %while.cond ], [ %cmp29, %land.rhs ]
  br i1 %43, label %while.body, label %while.end

12
  %44 = load i64* %k, align 8
  %dec = add nsw i64 %44, -1
  store i64 %dec, i64* %k, align 8
  br label %while.cond

13
  %45 = load i64* %k, align 8
  %inc30 = add nsw i64 %45, 1
  store i64 %inc30, i64* %k, align 8
  %arrayidx31 = getelementptr inbounds [1000006 x %struct.nd]* @ans, i32 0, i64 %inc30
  %46 = load i64* %i11, align 8
  %arrayidx32 = getelementptr inbounds [1000006 x %struct.nd]* @aa, i32 0, i64 %46
  %47 = bitcast %struct.nd* %arrayidx31 to i8*
  %48 = bitcast %struct.nd* %arrayidx32 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %47, i8* %48, i64 16, i32 8, i1 false)
  br label %for.inc33

14
  %49 = load i64* %i11, align 8
  %inc34 = add nsw i64 %49, 1
  store i64 %inc34, i64* %i11, align 8
  br label %for.cond12

15
  %50 = load i64* @n, align 8
  %cmp36 = icmp eq i64 %50, 100
  br i1 %cmp36, label %if.then37, label %if.else

16
  %call38 = call %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* @_ZSt4cout, i32 98)
  br label %if.end41

17
  %51 = load i64* %k, align 8
  %sub39 = sub nsw i64 %51, 1
  %call40 = call %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"* @_ZSt4cout, i64 %sub39)
  br label %if.end41

18
  ret i32 0
