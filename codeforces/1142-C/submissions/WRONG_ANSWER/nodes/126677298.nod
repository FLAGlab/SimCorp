
1
  %retval = alloca i32, align 4
  %i = alloca i32, align 4
  %i16 = alloca i32, align 4
  store i32 0, i32* %retval
  %call = call %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* @_ZSt3cin, i32* @n)
  store i32 1, i32* %i, align 4
  br label %for.cond

2
  %0 = load i32* %i, align 4
  %1 = load i32* @n, align 4
  %cmp = icmp sle i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

3
  %2 = load i32* %i, align 4
  %idxprom = sext i32 %2 to i64
  %arrayidx = getelementptr inbounds [1000010 x %struct.abc]* @p, i32 0, i64 %idxprom
  %x = getelementptr inbounds %struct.abc* %arrayidx, i32 0, i32 0
  %3 = load i32* %i, align 4
  %idxprom1 = sext i32 %3 to i64
  %arrayidx2 = getelementptr inbounds [1000010 x %struct.abc]* @p, i32 0, i64 %idxprom1
  %y = getelementptr inbounds %struct.abc* %arrayidx2, i32 0, i32 1
  %call3 = call i32 (i8*, ...)* @scanf(i8* getelementptr inbounds ([6 x i8]* @.str, i32 0, i32 0), i32* %x, i32* %y)
  %4 = load i32* %i, align 4
  %idxprom4 = sext i32 %4 to i64
  %arrayidx5 = getelementptr inbounds [1000010 x %struct.abc]* @p, i32 0, i64 %idxprom4
  %x6 = getelementptr inbounds %struct.abc* %arrayidx5, i32 0, i32 0
  %5 = load i32* %x6, align 4
  %6 = load i32* %i, align 4
  %idxprom7 = sext i32 %6 to i64
  %arrayidx8 = getelementptr inbounds [1000010 x %struct.abc]* @p, i32 0, i64 %idxprom7
  %x9 = getelementptr inbounds %struct.abc* %arrayidx8, i32 0, i32 0
  %7 = load i32* %x9, align 4
  %mul = mul nsw i32 %5, %7
  %8 = load i32* %i, align 4
  %idxprom10 = sext i32 %8 to i64
  %arrayidx11 = getelementptr inbounds [1000010 x %struct.abc]* @p, i32 0, i64 %idxprom10
  %y12 = getelementptr inbounds %struct.abc* %arrayidx11, i32 0, i32 1
  %9 = load i32* %y12, align 4
  %sub = sub nsw i32 %9, %mul
  store i32 %sub, i32* %y12, align 4
  %10 = load i32* %i, align 4
  %inc = add nsw i32 %10, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

4
  %11 = load i32* @n, align 4
  %idx.ext = sext i32 %11 to i64
  %add.ptr = getelementptr inbounds %struct.abc* getelementptr inbounds ([1000010 x %struct.abc]* @p, i32 0, i32 0), i64 %idx.ext
  %add.ptr13 = getelementptr inbounds %struct.abc* %add.ptr, i64 1
  call void @_ZSt4sortIP3abcPFbS0_S0_EEvT_S4_T0_(%struct.abc* getelementptr inbounds ([1000010 x %struct.abc]* @p, i32 0, i64 1), %struct.abc* %add.ptr13, i1 (i64, i64)* @_Z3cmp3abcS_)
  %12 = load i64* @t, align 8
  %inc14 = add nsw i64 %12, 1
  store i64 %inc14, i64* @t, align 8
  %arrayidx15 = getelementptr inbounds [1000010 x %struct.abc]* @stk, i32 0, i64 %inc14
  %13 = bitcast %struct.abc* %arrayidx15 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* bitcast (%struct.abc* getelementptr inbounds ([1000010 x %struct.abc]* @p, i32 0, i64 1) to i8*), i64 8, i32 4, i1 false)
  store i32 2, i32* %i16, align 4
  br label %for.cond17

5
  %14 = load i32* %i16, align 4
  %15 = load i32* @n, align 4
  %cmp18 = icmp sle i32 %14, %15
  br i1 %cmp18, label %for.body19, label %for.end55

6
  br label %while.cond

7
  %16 = load i64* @t, align 8
  %cmp20 = icmp sgt i64 %16, 1
  br i1 %cmp20, label %land.rhs, label %land.end

8
  %17 = load i64* @t, align 8
  %arrayidx21 = getelementptr inbounds [1000010 x %struct.abc]* @stk, i32 0, i64 %17
  %y22 = getelementptr inbounds %struct.abc* %arrayidx21, i32 0, i32 1
  %18 = load i32* %y22, align 4
  %19 = load i64* @t, align 8
  %sub23 = sub nsw i64 %19, 1
  %arrayidx24 = getelementptr inbounds [1000010 x %struct.abc]* @stk, i32 0, i64 %sub23
  %y25 = getelementptr inbounds %struct.abc* %arrayidx24, i32 0, i32 1
  %20 = load i32* %y25, align 4
  %sub26 = sub nsw i32 %18, %20
  %21 = load i32* %i16, align 4
  %idxprom27 = sext i32 %21 to i64
  %arrayidx28 = getelementptr inbounds [1000010 x %struct.abc]* @p, i32 0, i64 %idxprom27
  %x29 = getelementptr inbounds %struct.abc* %arrayidx28, i32 0, i32 0
  %22 = load i32* %x29, align 4
  %23 = load i64* @t, align 8
  %arrayidx30 = getelementptr inbounds [1000010 x %struct.abc]* @stk, i32 0, i64 %23
  %x31 = getelementptr inbounds %struct.abc* %arrayidx30, i32 0, i32 0
  %24 = load i32* %x31, align 4
  %sub32 = sub nsw i32 %22, %24
  %mul33 = mul nsw i32 %sub26, %sub32
  %25 = load i32* %i16, align 4
  %idxprom34 = sext i32 %25 to i64
  %arrayidx35 = getelementptr inbounds [1000010 x %struct.abc]* @p, i32 0, i64 %idxprom34
  %y36 = getelementptr inbounds %struct.abc* %arrayidx35, i32 0, i32 1
  %26 = load i32* %y36, align 4
  %27 = load i64* @t, align 8
  %arrayidx37 = getelementptr inbounds [1000010 x %struct.abc]* @stk, i32 0, i64 %27
  %y38 = getelementptr inbounds %struct.abc* %arrayidx37, i32 0, i32 1
  %28 = load i32* %y38, align 4
  %sub39 = sub nsw i32 %26, %28
  %29 = load i64* @t, align 8
  %arrayidx40 = getelementptr inbounds [1000010 x %struct.abc]* @stk, i32 0, i64 %29
  %x41 = getelementptr inbounds %struct.abc* %arrayidx40, i32 0, i32 0
  %30 = load i32* %x41, align 4
  %31 = load i64* @t, align 8
  %sub42 = sub nsw i64 %31, 1
  %arrayidx43 = getelementptr inbounds [1000010 x %struct.abc]* @stk, i32 0, i64 %sub42
  %x44 = getelementptr inbounds %struct.abc* %arrayidx43, i32 0, i32 0
  %32 = load i32* %x44, align 4
  %sub45 = sub nsw i32 %30, %32
  %mul46 = mul nsw i32 %sub39, %sub45
  %sub47 = sub nsw i32 %mul33, %mul46
  %cmp48 = icmp sle i32 %sub47, 0
  br label %land.end

9
  %33 = phi i1 [ false, %while.cond ], [ %cmp48, %land.rhs ]
  br i1 %33, label %while.body, label %while.end

10
  %34 = load i64* @t, align 8
  %dec = add nsw i64 %34, -1
  store i64 %dec, i64* @t, align 8
  br label %while.cond

11
  %35 = load i64* @t, align 8
  %inc49 = add nsw i64 %35, 1
  store i64 %inc49, i64* @t, align 8
  %arrayidx50 = getelementptr inbounds [1000010 x %struct.abc]* @stk, i32 0, i64 %inc49
  %36 = load i32* %i16, align 4
  %idxprom51 = sext i32 %36 to i64
  %arrayidx52 = getelementptr inbounds [1000010 x %struct.abc]* @p, i32 0, i64 %idxprom51
  %37 = bitcast %struct.abc* %arrayidx50 to i8*
  %38 = bitcast %struct.abc* %arrayidx52 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %37, i8* %38, i64 8, i32 4, i1 false)
  %39 = load i32* %i16, align 4
  %inc54 = add nsw i32 %39, 1
  store i32 %inc54, i32* %i16, align 4
  br label %for.cond17

12
  %40 = load i64* @t, align 8
  %sub56 = sub nsw i64 %40, 1
  %call57 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([6 x i8]* @.str1, i32 0, i32 0), i64 %sub56)
  %41 = load i32* %retval
  ret i32 %41
