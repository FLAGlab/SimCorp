
1
  %retval = alloca i32, align 4
  %i = alloca i64, align 8
  %k = alloca i64, align 8
  %i11 = alloca i64, align 8
  %agg.tmp = alloca %struct.nd, align 8
  %agg.tmp17 = alloca %struct.nd, align 8
  %agg.tmp19 = alloca %struct.nd, align 8
  store i32 0, i32* %retval
  %call = call %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* @_ZSt3cin, i64* @n)
  store i64 1, i64* %i, align 8
  br label %for.cond

2
  %0 = load i64* %i, align 8
  %1 = load i64* @n, align 8
  %cmp = icmp sle i64 %0, %1
  br i1 %cmp, label %for.body, label %for.end

3
  %2 = load i64* %i, align 8
  %arrayidx = getelementptr inbounds [1000006 x %struct.nd]* @aa, i32 0, i64 %2
  %x = getelementptr inbounds %struct.nd* %arrayidx, i32 0, i32 0
  %call1 = call %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* @_ZSt3cin, i64* %x)
  %3 = load i64* %i, align 8
  %arrayidx2 = getelementptr inbounds [1000006 x %struct.nd]* @aa, i32 0, i64 %3
  %y = getelementptr inbounds %struct.nd* %arrayidx2, i32 0, i32 1
  %call3 = call %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* %call1, i64* %y)
  %4 = load i64* %i, align 8
  %arrayidx4 = getelementptr inbounds [1000006 x %struct.nd]* @aa, i32 0, i64 %4
  %x5 = getelementptr inbounds %struct.nd* %arrayidx4, i32 0, i32 0
  %5 = load i64* %x5, align 8
  %6 = load i64* %i, align 8
  %arrayidx6 = getelementptr inbounds [1000006 x %struct.nd]* @aa, i32 0, i64 %6
  %x7 = getelementptr inbounds %struct.nd* %arrayidx6, i32 0, i32 0
  %7 = load i64* %x7, align 8
  %mul = mul nsw i64 %5, %7
  %8 = load i64* %i, align 8
  %arrayidx8 = getelementptr inbounds [1000006 x %struct.nd]* @aa, i32 0, i64 %8
  %y9 = getelementptr inbounds %struct.nd* %arrayidx8, i32 0, i32 1
  %9 = load i64* %y9, align 8
  %sub = sub nsw i64 %9, %mul
  store i64 %sub, i64* %y9, align 8
  %10 = load i64* %i, align 8
  %inc = add nsw i64 %10, 1
  store i64 %inc, i64* %i, align 8
  br label %for.cond

4
  %11 = load i64* @n, align 8
  %add.ptr = getelementptr inbounds %struct.nd* getelementptr inbounds ([1000006 x %struct.nd]* @aa, i32 0, i32 0), i64 %11
  %add.ptr10 = getelementptr inbounds %struct.nd* %add.ptr, i64 1
  call void @_ZSt4sortIP2ndPFbS0_S0_EEvT_S4_T0_(%struct.nd* getelementptr inbounds ([1000006 x %struct.nd]* @aa, i32 0, i64 1), %struct.nd* %add.ptr10, i1 (i64, i64, i64, i64)* @_Z4cmp12ndS_)
  store i64 0, i64* %k, align 8
  store i64 -2000000000, i64* getelementptr inbounds ([1000006 x %struct.nd]* @aa, i32 0, i64 0, i32 0), align 8
  store i64 1, i64* %i11, align 8
  br label %for.cond12

5
  %12 = load i64* %i11, align 8
  %13 = load i64* @n, align 8
  %cmp13 = icmp sle i64 %12, %13
  br i1 %cmp13, label %for.body14, label %for.end28

6
  br label %while.cond

7
  %14 = load i64* %k, align 8
  %tobool = icmp ne i64 %14, 0
  br i1 %tobool, label %land.rhs, label %land.end

8
  %15 = load i64* %k, align 8
  %sub15 = sub nsw i64 %15, 1
  %arrayidx16 = getelementptr inbounds [1000006 x %struct.nd]* @ans, i32 0, i64 %sub15
  %16 = bitcast %struct.nd* %agg.tmp to i8*
  %17 = bitcast %struct.nd* %arrayidx16 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %16, i8* %17, i64 16, i32 8, i1 false)
  %18 = load i64* %k, align 8
  %arrayidx18 = getelementptr inbounds [1000006 x %struct.nd]* @ans, i32 0, i64 %18
  %19 = bitcast %struct.nd* %agg.tmp17 to i8*
  %20 = bitcast %struct.nd* %arrayidx18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %19, i8* %20, i64 16, i32 8, i1 false)
  %21 = load i64* %i11, align 8
  %arrayidx20 = getelementptr inbounds [1000006 x %struct.nd]* @aa, i32 0, i64 %21
  %22 = bitcast %struct.nd* %agg.tmp19 to i8*
  %23 = bitcast %struct.nd* %arrayidx20 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %22, i8* %23, i64 16, i32 8, i1 false)
  %24 = bitcast %struct.nd* %agg.tmp to { i64, i64 }*
  %25 = getelementptr { i64, i64 }* %24, i32 0, i32 0
  %26 = load i64* %25, align 1
  %27 = getelementptr { i64, i64 }* %24, i32 0, i32 1
  %28 = load i64* %27, align 1
  %29 = bitcast %struct.nd* %agg.tmp17 to { i64, i64 }*
  %30 = getelementptr { i64, i64 }* %29, i32 0, i32 0
  %31 = load i64* %30, align 1
  %32 = getelementptr { i64, i64 }* %29, i32 0, i32 1
  %33 = load i64* %32, align 1
  %34 = bitcast %struct.nd* %agg.tmp19 to { i64, i64 }*
  %35 = getelementptr { i64, i64 }* %34, i32 0, i32 0
  %36 = load i64* %35, align 1
  %37 = getelementptr { i64, i64 }* %34, i32 0, i32 1
  %38 = load i64* %37, align 1
  %call21 = call i64 @_Z4work2ndS_S_(i64 %26, i64 %28, i64 %31, i64 %33, i64 %36, i64 %38)
  %cmp22 = icmp slt i64 %call21, 0
  br label %land.end

9
  %39 = phi i1 [ false, %while.cond ], [ %cmp22, %land.rhs ]
  br i1 %39, label %while.body, label %while.end

10
  %40 = load i64* %k, align 8
  %dec = add nsw i64 %40, -1
  store i64 %dec, i64* %k, align 8
  br label %while.cond

11
  %41 = load i64* %k, align 8
  %inc23 = add nsw i64 %41, 1
  store i64 %inc23, i64* %k, align 8
  %arrayidx24 = getelementptr inbounds [1000006 x %struct.nd]* @ans, i32 0, i64 %inc23
  %42 = load i64* %i11, align 8
  %arrayidx25 = getelementptr inbounds [1000006 x %struct.nd]* @aa, i32 0, i64 %42
  %43 = bitcast %struct.nd* %arrayidx24 to i8*
  %44 = bitcast %struct.nd* %arrayidx25 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %43, i8* %44, i64 16, i32 8, i1 false)
  %45 = load i64* %i11, align 8
  %inc27 = add nsw i64 %45, 1
  store i64 %inc27, i64* %i11, align 8
  br label %for.cond12

12
  %46 = load i64* %k, align 8
  %sub29 = sub nsw i64 %46, 1
  %call30 = call %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"* @_ZSt4cout, i64 %sub29)
  ret i32 0
