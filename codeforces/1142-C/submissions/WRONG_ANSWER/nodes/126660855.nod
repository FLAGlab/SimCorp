
1
  %retval = alloca i32, align 4
  %i = alloca i32, align 4
  %i5 = alloca i32, align 4
  store i32 0, i32* %retval
  %call = call i32 (i8*, ...)* @scanf(i8* getelementptr inbounds ([3 x i8]* @.str, i32 0, i32 0), i32* @n)
  store i32 1, i32* %i, align 4
  br label %for.cond

2
  %0 = load i32* %i, align 4
  %1 = load i32* @n, align 4
  %cmp = icmp sle i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

3
  %2 = load i32* %i, align 4
  %idxprom = sext i32 %2 to i64
  %arrayidx = getelementptr inbounds [1000005 x %struct.node]* @a, i32 0, i64 %idxprom
  %x = getelementptr inbounds %struct.node* %arrayidx, i32 0, i32 0
  %3 = load i32* %i, align 4
  %idxprom1 = sext i32 %3 to i64
  %arrayidx2 = getelementptr inbounds [1000005 x %struct.node]* @a, i32 0, i64 %idxprom1
  %y = getelementptr inbounds %struct.node* %arrayidx2, i32 0, i32 1
  %call3 = call i32 (i8*, ...)* @scanf(i8* getelementptr inbounds ([7 x i8]* @.str1, i32 0, i32 0), double* %x, double* %y)
  %4 = load i32* %i, align 4
  %inc = add nsw i32 %4, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

4
  %5 = load i32* @n, align 4
  %idx.ext = sext i32 %5 to i64
  %add.ptr = getelementptr inbounds %struct.node* getelementptr inbounds ([1000005 x %struct.node]* @a, i32 0, i32 0), i64 %idx.ext
  %add.ptr4 = getelementptr inbounds %struct.node* %add.ptr, i64 1
  call void @_ZSt4sortIP4nodePFbS0_S0_EEvT_S4_T0_(%struct.node* getelementptr inbounds ([1000005 x %struct.node]* @a, i32 0, i64 1), %struct.node* %add.ptr4, i1 (double, double, double, double)* @_Z3cmp4nodeS_)
  store i32 1, i32* %i5, align 4
  br label %for.cond6

5
  %6 = load i32* %i5, align 4
  %7 = load i32* @n, align 4
  %cmp7 = icmp sle i32 %6, %7
  br i1 %cmp7, label %for.body8, label %for.end23

6
  br label %while.cond

7
  %8 = load i32* @head, align 4
  %9 = load i32* @tail, align 4
  %sub = sub nsw i32 %9, 1
  %cmp9 = icmp slt i32 %8, %sub
  br i1 %cmp9, label %land.rhs, label %land.end

8
  %10 = load i32* @tail, align 4
  %idxprom10 = sext i32 %10 to i64
  %arrayidx11 = getelementptr inbounds [1000005 x i32]* @q, i32 0, i64 %idxprom10
  %11 = load i32* %arrayidx11, align 4
  %12 = load i32* %i5, align 4
  %call12 = call double @_Z5slopeii(i32 %11, i32 %12)
  %13 = load i32* @tail, align 4
  %sub13 = sub nsw i32 %13, 1
  %idxprom14 = sext i32 %sub13 to i64
  %arrayidx15 = getelementptr inbounds [1000005 x i32]* @q, i32 0, i64 %idxprom14
  %14 = load i32* %arrayidx15, align 4
  %15 = load i32* %i5, align 4
  %call16 = call double @_Z5slopeii(i32 %14, i32 %15)
  %cmp17 = fcmp ogt double %call12, %call16
  br label %land.end

9
  %16 = phi i1 [ false, %while.cond ], [ %cmp17, %land.rhs ]
  br i1 %16, label %while.body, label %while.end

10
  %17 = load i32* @tail, align 4
  %dec = add nsw i32 %17, -1
  store i32 %dec, i32* @tail, align 4
  br label %while.cond

11
  %18 = load i32* %i5, align 4
  %19 = load i32* @tail, align 4
  %inc18 = add nsw i32 %19, 1
  store i32 %inc18, i32* @tail, align 4
  %idxprom19 = sext i32 %inc18 to i64
  %arrayidx20 = getelementptr inbounds [1000005 x i32]* @q, i32 0, i64 %idxprom19
  store i32 %18, i32* %arrayidx20, align 4
  %20 = load i32* %i5, align 4
  %inc22 = add nsw i32 %20, 1
  store i32 %inc22, i32* %i5, align 4
  br label %for.cond6

12
  %21 = load i32* @tail, align 4
  %22 = load i32* @head, align 4
  %sub24 = sub nsw i32 %21, %22
  %sub25 = sub nsw i32 %sub24, 1
  %call26 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([4 x i8]* @.str2, i32 0, i32 0), i32 %sub25)
  ret i32 0
