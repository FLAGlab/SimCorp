
1
  %retval = alloca i32, align 4
  %i = alloca i32, align 4
  %agg.tmp = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %agg.tmp4 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %sez = alloca i64, align 8
  %i10 = alloca i32, align 4
  store i32 0, i32* %retval
  store i64 0, i64* @ans, align 8
  %call = call %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* @_ZSt3cin, i64* @n)
  store i32 0, i32* %i, align 4
  br label %for.cond

2
  %0 = load i32* %i, align 4
  %conv = sext i32 %0 to i64
  %1 = load i64* @n, align 8
  %cmp = icmp slt i64 %conv, %1
  br i1 %cmp, label %for.body, label %for.end

3
  %call1 = call %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* @_ZSt3cin, i64* getelementptr inbounds (%struct.point* @z, i32 0, i32 0))
  %call2 = call %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* %call1, i64* getelementptr inbounds (%struct.point* @z, i32 0, i32 1))
  %2 = load i64* getelementptr inbounds (%struct.point* @z, i32 0, i32 0), align 8
  %3 = load i64* getelementptr inbounds (%struct.point* @z, i32 0, i32 0), align 8
  %mul = mul nsw i64 %2, %3
  %4 = load i64* getelementptr inbounds (%struct.point* @z, i32 0, i32 1), align 8
  %sub = sub nsw i64 %4, %mul
  store i64 %sub, i64* getelementptr inbounds (%struct.point* @z, i32 0, i32 1), align 8
  call void @_ZNSt6vectorI5pointSaIS0_EE9push_backERKS0_(%"class.std::vector"* @v, %struct.point* @z)
  %5 = load i32* %i, align 4
  %inc = add nsw i32 %5, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

4
  %call3 = call %struct.point* @_ZNSt6vectorI5pointSaIS0_EE5beginEv(%"class.std::vector"* @v) #2
  %coerce.dive = getelementptr %"class.__gnu_cxx::__normal_iterator"* %agg.tmp, i32 0, i32 0
  store %struct.point* %call3, %struct.point** %coerce.dive
  %call5 = call %struct.point* @_ZNSt6vectorI5pointSaIS0_EE3endEv(%"class.std::vector"* @v) #2
  %coerce.dive6 = getelementptr %"class.__gnu_cxx::__normal_iterator"* %agg.tmp4, i32 0, i32 0
  store %struct.point* %call5, %struct.point** %coerce.dive6
  %coerce.dive7 = getelementptr %"class.__gnu_cxx::__normal_iterator"* %agg.tmp, i32 0, i32 0
  %6 = load %struct.point** %coerce.dive7
  %coerce.dive8 = getelementptr %"class.__gnu_cxx::__normal_iterator"* %agg.tmp4, i32 0, i32 0
  %7 = load %struct.point** %coerce.dive8
  call void @_ZSt4sortIN9__gnu_cxx17__normal_iteratorIP5pointSt6vectorIS2_SaIS2_EEEEPFbS2_S2_EEvT_SA_T0_(%struct.point* %6, %struct.point* %7, i1 (i64, i64, i64, i64)* @_Z3cmp5pointS_)
  call void @_Z5buildv()
  %call9 = call i64 @_ZNKSt6vectorI5pointSaIS0_EE4sizeEv(%"class.std::vector"* @hull) #2
  store i64 %call9, i64* %sez, align 8
  store i32 0, i32* %i10, align 4
  br label %for.cond11

5
  %8 = load i32* %i10, align 4
  %conv12 = sext i32 %8 to i64
  %9 = load i64* %sez, align 8
  %sub13 = sub nsw i64 %9, 1
  %cmp14 = icmp slt i64 %conv12, %sub13
  br i1 %cmp14, label %for.body15, label %for.end25

6
  %10 = load i32* %i10, align 4
  %conv16 = sext i32 %10 to i64
  %call17 = call %struct.point* @_ZNSt6vectorI5pointSaIS0_EEixEm(%"class.std::vector"* @hull, i64 %conv16)
  %x = getelementptr inbounds %struct.point* %call17, i32 0, i32 0
  %11 = load i64* %x, align 8
  %12 = load i32* %i10, align 4
  %add = add nsw i32 %12, 1
  %conv18 = sext i32 %add to i64
  %call19 = call %struct.point* @_ZNSt6vectorI5pointSaIS0_EEixEm(%"class.std::vector"* @hull, i64 %conv18)
  %x20 = getelementptr inbounds %struct.point* %call19, i32 0, i32 0
  %13 = load i64* %x20, align 8
  %cmp21 = icmp ne i64 %11, %13
  br i1 %cmp21, label %if.then, label %if.end

7
  %14 = load i64* @ans, align 8
  %inc22 = add nsw i64 %14, 1
  store i64 %inc22, i64* @ans, align 8
  br label %if.end

8
  %15 = load i32* %i10, align 4
  %inc24 = add nsw i32 %15, 1
  store i32 %inc24, i32* %i10, align 4
  br label %for.cond11

9
  %16 = load i64* @ans, align 8
  %call26 = call %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"* @_ZSt4cout, i64 %16)
  %call27 = call %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* %call26, i8* getelementptr inbounds ([2 x i8]* @.str, i32 0, i32 0))
  %17 = load i32* %retval
  ret i32 %17
