
1
  %retval = alloca i32, align 4
  %n = alloca i32, align 4
  %i = alloca i32, align 4
  %q = alloca i32, align 4
  %i14 = alloca i32, align 4
  %agg.tmp = alloca %struct.point, align 8
  %agg.tmp32 = alloca %struct.point, align 8
  %agg.tmp36 = alloca %struct.point, align 8
  store i32 0, i32* %retval
  br label %while.cond

2
  %call = call i32 (i8*, ...)* @scanf(i8* getelementptr inbounds ([3 x i8]* @.str, i32 0, i32 0), i32* %n)
  %cmp = icmp sgt i32 %call, 0
  br i1 %cmp, label %while.body, label %while.end51

3
  store i32 0, i32* %i, align 4
  br label %for.cond

4
  %0 = load i32* %i, align 4
  %1 = load i32* %n, align 4
  %cmp1 = icmp slt i32 %0, %1
  br i1 %cmp1, label %for.body, label %for.end

5
  %2 = load i32* %i, align 4
  %idxprom = sext i32 %2 to i64
  %arrayidx = getelementptr inbounds [100010 x %struct.point]* @P, i32 0, i64 %idxprom
  %x = getelementptr inbounds %struct.point* %arrayidx, i32 0, i32 0
  %3 = load i32* %i, align 4
  %idxprom2 = sext i32 %3 to i64
  %arrayidx3 = getelementptr inbounds [100010 x %struct.point]* @P, i32 0, i64 %idxprom2
  %y = getelementptr inbounds %struct.point* %arrayidx3, i32 0, i32 1
  %call4 = call i32 (i8*, ...)* @scanf(i8* getelementptr inbounds ([9 x i8]* @.str1, i32 0, i32 0), i64* %x, i64* %y)
  %4 = load i32* %i, align 4
  %idxprom5 = sext i32 %4 to i64
  %arrayidx6 = getelementptr inbounds [100010 x %struct.point]* @P, i32 0, i64 %idxprom5
  %x7 = getelementptr inbounds %struct.point* %arrayidx6, i32 0, i32 0
  %5 = load i64* %x7, align 8
  %6 = load i32* %i, align 4
  %idxprom8 = sext i32 %6 to i64
  %arrayidx9 = getelementptr inbounds [100010 x %struct.point]* @P, i32 0, i64 %idxprom8
  %x10 = getelementptr inbounds %struct.point* %arrayidx9, i32 0, i32 0
  %7 = load i64* %x10, align 8
  %mul = mul nsw i64 %5, %7
  %8 = load i32* %i, align 4
  %idxprom11 = sext i32 %8 to i64
  %arrayidx12 = getelementptr inbounds [100010 x %struct.point]* @P, i32 0, i64 %idxprom11
  %y13 = getelementptr inbounds %struct.point* %arrayidx12, i32 0, i32 1
  %9 = load i64* %y13, align 8
  %sub = sub nsw i64 %9, %mul
  store i64 %sub, i64* %y13, align 8
  %10 = load i32* %i, align 4
  %inc = add nsw i32 %10, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

6
  %11 = load i32* %n, align 4
  %idx.ext = sext i32 %11 to i64
  %add.ptr = getelementptr inbounds %struct.point* getelementptr inbounds ([100010 x %struct.point]* @P, i32 0, i32 0), i64 %idx.ext
  call void @_ZSt4sortIP5pointEvT_S2_(%struct.point* getelementptr inbounds ([100010 x %struct.point]* @P, i32 0, i32 0), %struct.point* %add.ptr)
  store i32 0, i32* %q, align 4
  store i32 0, i32* %i14, align 4
  br label %for.cond15

7
  %12 = load i32* %i14, align 4
  %13 = load i32* %n, align 4
  %cmp16 = icmp slt i32 %12, %13
  br i1 %cmp16, label %for.body17, label %for.end48

8
  %14 = load i32* %q, align 4
  %cmp18 = icmp sge i32 %14, 1
  br i1 %cmp18, label %land.lhs.true, label %if.end

9
  %15 = load i32* %i14, align 4
  %idxprom19 = sext i32 %15 to i64
  %arrayidx20 = getelementptr inbounds [100010 x %struct.point]* @P, i32 0, i64 %idxprom19
  %x21 = getelementptr inbounds %struct.point* %arrayidx20, i32 0, i32 0
  %16 = load i64* %x21, align 8
  %17 = load i32* %q, align 4
  %sub22 = sub nsw i32 %17, 1
  %idxprom23 = sext i32 %sub22 to i64
  %arrayidx24 = getelementptr inbounds [100010 x %struct.point]* @H, i32 0, i64 %idxprom23
  %x25 = getelementptr inbounds %struct.point* %arrayidx24, i32 0, i32 0
  %18 = load i64* %x25, align 8
  %cmp26 = icmp eq i64 %16, %18
  br i1 %cmp26, label %if.then, label %if.end

10
  br label %for.inc46

11
  br label %while.cond27

12
  %19 = load i32* %q, align 4
  %cmp28 = icmp sge i32 %19, 2
  br i1 %cmp28, label %land.rhs, label %land.end

13
  %20 = load i32* %q, align 4
  %sub29 = sub nsw i32 %20, 2
  %idxprom30 = sext i32 %sub29 to i64
  %arrayidx31 = getelementptr inbounds [100010 x %struct.point]* @H, i32 0, i64 %idxprom30
  %21 = bitcast %struct.point* %agg.tmp to i8*
  %22 = bitcast %struct.point* %arrayidx31 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %21, i8* %22, i64 16, i32 8, i1 false)
  %23 = load i32* %q, align 4
  %sub33 = sub nsw i32 %23, 1
  %idxprom34 = sext i32 %sub33 to i64
  %arrayidx35 = getelementptr inbounds [100010 x %struct.point]* @H, i32 0, i64 %idxprom34
  %24 = bitcast %struct.point* %agg.tmp32 to i8*
  %25 = bitcast %struct.point* %arrayidx35 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %24, i8* %25, i64 16, i32 8, i1 false)
  %26 = load i32* %i14, align 4
  %idxprom37 = sext i32 %26 to i64
  %arrayidx38 = getelementptr inbounds [100010 x %struct.point]* @P, i32 0, i64 %idxprom37
  %27 = bitcast %struct.point* %agg.tmp36 to i8*
  %28 = bitcast %struct.point* %arrayidx38 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %27, i8* %28, i64 16, i32 8, i1 false)
  %29 = bitcast %struct.point* %agg.tmp to { i64, i64 }*
  %30 = getelementptr { i64, i64 }* %29, i32 0, i32 0
  %31 = load i64* %30, align 1
  %32 = getelementptr { i64, i64 }* %29, i32 0, i32 1
  %33 = load i64* %32, align 1
  %34 = bitcast %struct.point* %agg.tmp32 to { i64, i64 }*
  %35 = getelementptr { i64, i64 }* %34, i32 0, i32 0
  %36 = load i64* %35, align 1
  %37 = getelementptr { i64, i64 }* %34, i32 0, i32 1
  %38 = load i64* %37, align 1
  %39 = bitcast %struct.point* %agg.tmp36 to { i64, i64 }*
  %40 = getelementptr { i64, i64 }* %39, i32 0, i32 0
  %41 = load i64* %40, align 1
  %42 = getelementptr { i64, i64 }* %39, i32 0, i32 1
  %43 = load i64* %42, align 1
  %call39 = call zeroext i1 @_Z3ccw5pointS_S_(i64 %31, i64 %33, i64 %36, i64 %38, i64 %41, i64 %43)
  br label %land.end

14
  %44 = phi i1 [ false, %while.cond27 ], [ %call39, %land.rhs ]
  br i1 %44, label %while.body40, label %while.end

15
  %45 = load i32* %q, align 4
  %dec = add nsw i32 %45, -1
  store i32 %dec, i32* %q, align 4
  br label %while.cond27

16
  %46 = load i32* %q, align 4
  %inc41 = add nsw i32 %46, 1
  store i32 %inc41, i32* %q, align 4
  %idxprom42 = sext i32 %46 to i64
  %arrayidx43 = getelementptr inbounds [100010 x %struct.point]* @H, i32 0, i64 %idxprom42
  %47 = load i32* %i14, align 4
  %idxprom44 = sext i32 %47 to i64
  %arrayidx45 = getelementptr inbounds [100010 x %struct.point]* @P, i32 0, i64 %idxprom44
  %48 = bitcast %struct.point* %arrayidx43 to i8*
  %49 = bitcast %struct.point* %arrayidx45 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %48, i8* %49, i64 16, i32 8, i1 false)
  br label %for.inc46

17
  %50 = load i32* %i14, align 4
  %inc47 = add nsw i32 %50, 1
  store i32 %inc47, i32* %i14, align 4
  br label %for.cond15

18
  %51 = load i32* %q, align 4
  %sub49 = sub nsw i32 %51, 1
  %call50 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([4 x i8]* @.str2, i32 0, i32 0), i32 %sub49)
  br label %while.cond

19
  %52 = load i32* %retval
  ret i32 %52
