
1
  %retval = alloca i32, align 4
  %n = alloca i32, align 4
  %i = alloca i32, align 4
  %m = alloca i32, align 4
  %top = alloca i32, align 4
  %i16 = alloca i32, align 4
  %i36 = alloca i32, align 4
  %coerce = alloca %struct.Point, align 8
  %ref.tmp = alloca %struct.Point, align 8
  store i32 0, i32* %retval
  %call = call %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* @_ZSt3cin, i32* %n)
  store i32 1, i32* %i, align 4
  br label %for.cond

2
  %0 = load i32* %i, align 4
  %1 = load i32* %n, align 4
  %cmp = icmp sle i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

3
  %2 = load i32* %i, align 4
  %idxprom = sext i32 %2 to i64
  %arrayidx = getelementptr inbounds [100005 x %struct.Point]* @p, i32 0, i64 %idxprom
  %x = getelementptr inbounds %struct.Point* %arrayidx, i32 0, i32 0
  %call1 = call %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* @_ZSt3cin, i64* %x)
  %3 = load i32* %i, align 4
  %idxprom2 = sext i32 %3 to i64
  %arrayidx3 = getelementptr inbounds [100005 x %struct.Point]* @p, i32 0, i64 %idxprom2
  %y = getelementptr inbounds %struct.Point* %arrayidx3, i32 0, i32 1
  %call4 = call %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* %call1, i64* %y)
  %4 = load i32* %i, align 4
  %idxprom5 = sext i32 %4 to i64
  %arrayidx6 = getelementptr inbounds [100005 x %struct.Point]* @p, i32 0, i64 %idxprom5
  %x7 = getelementptr inbounds %struct.Point* %arrayidx6, i32 0, i32 0
  %5 = load i64* %x7, align 8
  %6 = load i32* %i, align 4
  %idxprom8 = sext i32 %6 to i64
  %arrayidx9 = getelementptr inbounds [100005 x %struct.Point]* @p, i32 0, i64 %idxprom8
  %x10 = getelementptr inbounds %struct.Point* %arrayidx9, i32 0, i32 0
  %7 = load i64* %x10, align 8
  %mul = mul nsw i64 %5, %7
  %8 = load i32* %i, align 4
  %idxprom11 = sext i32 %8 to i64
  %arrayidx12 = getelementptr inbounds [100005 x %struct.Point]* @p, i32 0, i64 %idxprom11
  %y13 = getelementptr inbounds %struct.Point* %arrayidx12, i32 0, i32 1
  %9 = load i64* %y13, align 8
  %sub = sub nsw i64 %9, %mul
  store i64 %sub, i64* %y13, align 8
  %10 = load i32* %i, align 4
  %inc = add nsw i32 %10, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

4
  %11 = load i32* %n, align 4
  %idx.ext = sext i32 %11 to i64
  %add.ptr = getelementptr inbounds %struct.Point* getelementptr inbounds ([100005 x %struct.Point]* @p, i32 0, i64 1), i64 %idx.ext
  call void @_ZSt4sortIP5PointEvT_S2_(%struct.Point* getelementptr inbounds ([100005 x %struct.Point]* @p, i32 0, i64 1), %struct.Point* %add.ptr)
  store i32 1, i32* %m, align 4
  store i32 0, i32* %top, align 4
  %12 = load i32* %m, align 4
  %idxprom14 = sext i32 %12 to i64
  %arrayidx15 = getelementptr inbounds [100005 x %struct.Point]* @q, i32 0, i64 %idxprom14
  %13 = bitcast %struct.Point* %arrayidx15 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* bitcast (%struct.Point* getelementptr inbounds ([100005 x %struct.Point]* @p, i32 0, i64 1) to i8*), i64 16, i32 8, i1 false)
  store i32 2, i32* %i16, align 4
  br label %for.cond17

5
  %14 = load i32* %i16, align 4
  %15 = load i32* %n, align 4
  %cmp18 = icmp sle i32 %14, %15
  br i1 %cmp18, label %for.body19, label %for.end35

6
  %16 = load i32* %i16, align 4
  %idxprom20 = sext i32 %16 to i64
  %arrayidx21 = getelementptr inbounds [100005 x %struct.Point]* @p, i32 0, i64 %idxprom20
  %x22 = getelementptr inbounds %struct.Point* %arrayidx21, i32 0, i32 0
  %17 = load i64* %x22, align 8
  %18 = load i32* %i16, align 4
  %sub23 = sub nsw i32 %18, 1
  %idxprom24 = sext i32 %sub23 to i64
  %arrayidx25 = getelementptr inbounds [100005 x %struct.Point]* @p, i32 0, i64 %idxprom24
  %x26 = getelementptr inbounds %struct.Point* %arrayidx25, i32 0, i32 0
  %19 = load i64* %x26, align 8
  %cmp27 = icmp ne i64 %17, %19
  br i1 %cmp27, label %if.then, label %if.end

7
  %20 = load i32* %m, align 4
  %inc28 = add nsw i32 %20, 1
  store i32 %inc28, i32* %m, align 4
  %idxprom29 = sext i32 %inc28 to i64
  %arrayidx30 = getelementptr inbounds [100005 x %struct.Point]* @q, i32 0, i64 %idxprom29
  %21 = load i32* %i16, align 4
  %idxprom31 = sext i32 %21 to i64
  %arrayidx32 = getelementptr inbounds [100005 x %struct.Point]* @p, i32 0, i64 %idxprom31
  %22 = bitcast %struct.Point* %arrayidx30 to i8*
  %23 = bitcast %struct.Point* %arrayidx32 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %22, i8* %23, i64 16, i32 8, i1 false)
  br label %if.end

8
  %24 = load i32* %i16, align 4
  %inc34 = add nsw i32 %24, 1
  store i32 %inc34, i32* %i16, align 4
  br label %for.cond17

9
  store i32 1, i32* %i36, align 4
  br label %for.cond37

10
  %25 = load i32* %i36, align 4
  %26 = load i32* %m, align 4
  %cmp38 = icmp sle i32 %25, %26
  br i1 %cmp38, label %for.body39, label %for.end62

11
  br label %while.cond

12
  %27 = load i32* %top, align 4
  %cmp40 = icmp sgt i32 %27, 1
  br i1 %cmp40, label %land.rhs, label %land.end

13
  %28 = load i32* %top, align 4
  %idxprom41 = sext i32 %28 to i64
  %arrayidx42 = getelementptr inbounds [100005 x %struct.Point]* @st, i32 0, i64 %idxprom41
  %29 = load i32* %top, align 4
  %sub43 = sub nsw i32 %29, 1
  %idxprom44 = sext i32 %sub43 to i64
  %arrayidx45 = getelementptr inbounds [100005 x %struct.Point]* @st, i32 0, i64 %idxprom44
  %call46 = call { i64, i64 } @_ZNK5PointmiERKS_(%struct.Point* %arrayidx42, %struct.Point* %arrayidx45)
  %30 = bitcast %struct.Point* %coerce to { i64, i64 }*
  %31 = getelementptr { i64, i64 }* %30, i32 0, i32 0
  %32 = extractvalue { i64, i64 } %call46, 0
  store i64 %32, i64* %31, align 1
  %33 = getelementptr { i64, i64 }* %30, i32 0, i32 1
  %34 = extractvalue { i64, i64 } %call46, 1
  store i64 %34, i64* %33, align 1
  %35 = load i32* %i36, align 4
  %idxprom47 = sext i32 %35 to i64
  %arrayidx48 = getelementptr inbounds [100005 x %struct.Point]* @q, i32 0, i64 %idxprom47
  %36 = load i32* %top, align 4
  %sub49 = sub nsw i32 %36, 1
  %idxprom50 = sext i32 %sub49 to i64
  %arrayidx51 = getelementptr inbounds [100005 x %struct.Point]* @st, i32 0, i64 %idxprom50
  %call52 = call { i64, i64 } @_ZNK5PointmiERKS_(%struct.Point* %arrayidx48, %struct.Point* %arrayidx51)
  %37 = bitcast %struct.Point* %ref.tmp to { i64, i64 }*
  %38 = getelementptr { i64, i64 }* %37, i32 0, i32 0
  %39 = extractvalue { i64, i64 } %call52, 0
  store i64 %39, i64* %38, align 1
  %40 = getelementptr { i64, i64 }* %37, i32 0, i32 1
  %41 = extractvalue { i64, i64 } %call52, 1
  store i64 %41, i64* %40, align 1
  %call53 = call i64 @_ZNK5PointmlERKS_(%struct.Point* %coerce, %struct.Point* %ref.tmp)
  %cmp54 = icmp sge i64 %call53, 0
  br label %land.end

14
  %42 = phi i1 [ false, %while.cond ], [ %cmp54, %land.rhs ]
  br i1 %42, label %while.body, label %while.end

15
  %43 = load i32* %top, align 4
  %dec = add nsw i32 %43, -1
  store i32 %dec, i32* %top, align 4
  br label %while.cond

16
  %44 = load i32* %top, align 4
  %inc55 = add nsw i32 %44, 1
  store i32 %inc55, i32* %top, align 4
  %idxprom56 = sext i32 %inc55 to i64
  %arrayidx57 = getelementptr inbounds [100005 x %struct.Point]* @st, i32 0, i64 %idxprom56
  %45 = load i32* %i36, align 4
  %idxprom58 = sext i32 %45 to i64
  %arrayidx59 = getelementptr inbounds [100005 x %struct.Point]* @q, i32 0, i64 %idxprom58
  %46 = bitcast %struct.Point* %arrayidx57 to i8*
  %47 = bitcast %struct.Point* %arrayidx59 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %46, i8* %47, i64 16, i32 8, i1 false)
  %48 = load i32* %i36, align 4
  %inc61 = add nsw i32 %48, 1
  store i32 %inc61, i32* %i36, align 4
  br label %for.cond37

17
  %49 = load i32* %top, align 4
  %sub63 = sub nsw i32 %49, 1
  %call64 = call %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* @_ZSt4cout, i32 %sub63)
  %call65 = call %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* %call64, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  ret i32 0
