
1
  %retval = alloca i32, align 4
  %i = alloca i32, align 4
  %i15 = alloca i32, align 4
  %agg.tmp = alloca %struct.node, align 8
  %agg.tmp31 = alloca %struct.node, align 8
  %agg.tmp34 = alloca %struct.node, align 8
  store i32 0, i32* %retval
  %call = call i32 (i8*, ...)* @scanf(i8* getelementptr inbounds ([3 x i8]* @.str, i32 0, i32 0), i32* @n)
  store i32 1, i32* %i, align 4
  br label %for.cond

2
  %0 = load i32* %i, align 4
  %1 = load i32* @n, align 4
  %cmp = icmp sle i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

3
  %2 = load i32* %i, align 4
  %idxprom = sext i32 %2 to i64
  %arrayidx = getelementptr inbounds [100005 x %struct.node]* @a, i32 0, i64 %idxprom
  %x = getelementptr inbounds %struct.node* %arrayidx, i32 0, i32 0
  %3 = load i32* %i, align 4
  %idxprom1 = sext i32 %3 to i64
  %arrayidx2 = getelementptr inbounds [100005 x %struct.node]* @a, i32 0, i64 %idxprom1
  %y = getelementptr inbounds %struct.node* %arrayidx2, i32 0, i32 1
  %call3 = call i32 (i8*, ...)* @scanf(i8* getelementptr inbounds ([9 x i8]* @.str1, i32 0, i32 0), i64* %x, i64* %y)
  %4 = load i32* %i, align 4
  %idxprom4 = sext i32 %4 to i64
  %arrayidx5 = getelementptr inbounds [100005 x %struct.node]* @a, i32 0, i64 %idxprom4
  %x6 = getelementptr inbounds %struct.node* %arrayidx5, i32 0, i32 0
  %5 = load i64* %x6, align 8
  %mul = mul nsw i64 1, %5
  %6 = load i32* %i, align 4
  %idxprom7 = sext i32 %6 to i64
  %arrayidx8 = getelementptr inbounds [100005 x %struct.node]* @a, i32 0, i64 %idxprom7
  %x9 = getelementptr inbounds %struct.node* %arrayidx8, i32 0, i32 0
  %7 = load i64* %x9, align 8
  %mul10 = mul nsw i64 %mul, %7
  %8 = load i32* %i, align 4
  %idxprom11 = sext i32 %8 to i64
  %arrayidx12 = getelementptr inbounds [100005 x %struct.node]* @a, i32 0, i64 %idxprom11
  %y13 = getelementptr inbounds %struct.node* %arrayidx12, i32 0, i32 1
  %9 = load i64* %y13, align 8
  %sub = sub nsw i64 %9, %mul10
  store i64 %sub, i64* %y13, align 8
  %10 = load i32* %i, align 4
  %inc = add nsw i32 %10, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

4
  %11 = load i32* @n, align 4
  %idx.ext = sext i32 %11 to i64
  %add.ptr = getelementptr inbounds %struct.node* getelementptr inbounds ([100005 x %struct.node]* @a, i32 0, i32 0), i64 %idx.ext
  %add.ptr14 = getelementptr inbounds %struct.node* %add.ptr, i64 1
  call void @_ZSt4sortIP4nodeEvT_S2_(%struct.node* getelementptr inbounds ([100005 x %struct.node]* @a, i32 0, i64 1), %struct.node* %add.ptr14)
  store i32 1, i32* %i15, align 4
  br label %for.cond16

5
  %12 = load i32* %i15, align 4
  %13 = load i32* @n, align 4
  %cmp17 = icmp sle i32 %12, %13
  br i1 %cmp17, label %for.body18, label %for.end45

6
  %14 = load i32* %i15, align 4
  %15 = load i32* @n, align 4
  %cmp19 = icmp ne i32 %14, %15
  br i1 %cmp19, label %land.lhs.true, label %if.end

7
  %16 = load i32* %i15, align 4
  %idxprom20 = sext i32 %16 to i64
  %arrayidx21 = getelementptr inbounds [100005 x %struct.node]* @a, i32 0, i64 %idxprom20
  %x22 = getelementptr inbounds %struct.node* %arrayidx21, i32 0, i32 0
  %17 = load i64* %x22, align 8
  %18 = load i32* %i15, align 4
  %add = add nsw i32 %18, 1
  %idxprom23 = sext i32 %add to i64
  %arrayidx24 = getelementptr inbounds [100005 x %struct.node]* @a, i32 0, i64 %idxprom23
  %x25 = getelementptr inbounds %struct.node* %arrayidx24, i32 0, i32 0
  %19 = load i64* %x25, align 8
  %cmp26 = icmp eq i64 %17, %19
  br i1 %cmp26, label %if.then, label %if.end

8
  br label %for.inc43

9
  br label %while.cond

10
  %20 = load i32* @top, align 4
  %cmp27 = icmp sgt i32 %20, 1
  br i1 %cmp27, label %land.rhs, label %land.end

11
  %21 = load i32* @top, align 4
  %sub28 = sub nsw i32 %21, 1
  %idxprom29 = sext i32 %sub28 to i64
  %arrayidx30 = getelementptr inbounds [100005 x %struct.node]* @s, i32 0, i64 %idxprom29
  %22 = bitcast %struct.node* %agg.tmp to i8*
  %23 = bitcast %struct.node* %arrayidx30 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %22, i8* %23, i64 16, i32 8, i1 false)
  %24 = load i32* %i15, align 4
  %idxprom32 = sext i32 %24 to i64
  %arrayidx33 = getelementptr inbounds [100005 x %struct.node]* @a, i32 0, i64 %idxprom32
  %25 = bitcast %struct.node* %agg.tmp31 to i8*
  %26 = bitcast %struct.node* %arrayidx33 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %25, i8* %26, i64 16, i32 8, i1 false)
  %27 = load i32* @top, align 4
  %idxprom35 = sext i32 %27 to i64
  %arrayidx36 = getelementptr inbounds [100005 x %struct.node]* @s, i32 0, i64 %idxprom35
  %28 = bitcast %struct.node* %agg.tmp34 to i8*
  %29 = bitcast %struct.node* %arrayidx36 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %28, i8* %29, i64 16, i32 8, i1 false)
  %30 = bitcast %struct.node* %agg.tmp to { i64, i64 }*
  %31 = getelementptr { i64, i64 }* %30, i32 0, i32 0
  %32 = load i64* %31, align 1
  %33 = getelementptr { i64, i64 }* %30, i32 0, i32 1
  %34 = load i64* %33, align 1
  %35 = bitcast %struct.node* %agg.tmp31 to { i64, i64 }*
  %36 = getelementptr { i64, i64 }* %35, i32 0, i32 0
  %37 = load i64* %36, align 1
  %38 = getelementptr { i64, i64 }* %35, i32 0, i32 1
  %39 = load i64* %38, align 1
  %40 = bitcast %struct.node* %agg.tmp34 to { i64, i64 }*
  %41 = getelementptr { i64, i64 }* %40, i32 0, i32 0
  %42 = load i64* %41, align 1
  %43 = getelementptr { i64, i64 }* %40, i32 0, i32 1
  %44 = load i64* %43, align 1
  %call37 = call zeroext i1 @_Z3cmp4nodeS_S_(i64 %32, i64 %34, i64 %37, i64 %39, i64 %42, i64 %44)
  br label %land.end

12
  %45 = phi i1 [ false, %while.cond ], [ %call37, %land.rhs ]
  br i1 %45, label %while.body, label %while.end

13
  %46 = load i32* @top, align 4
  %dec = add nsw i32 %46, -1
  store i32 %dec, i32* @top, align 4
  br label %while.cond

14
  %47 = load i32* @top, align 4
  %inc38 = add nsw i32 %47, 1
  store i32 %inc38, i32* @top, align 4
  %idxprom39 = sext i32 %inc38 to i64
  %arrayidx40 = getelementptr inbounds [100005 x %struct.node]* @s, i32 0, i64 %idxprom39
  %48 = load i32* %i15, align 4
  %idxprom41 = sext i32 %48 to i64
  %arrayidx42 = getelementptr inbounds [100005 x %struct.node]* @a, i32 0, i64 %idxprom41
  %49 = bitcast %struct.node* %arrayidx40 to i8*
  %50 = bitcast %struct.node* %arrayidx42 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %49, i8* %50, i64 16, i32 8, i1 false)
  br label %for.inc43

15
  %51 = load i32* %i15, align 4
  %inc44 = add nsw i32 %51, 1
  store i32 %inc44, i32* %i15, align 4
  br label %for.cond16

16
  %52 = load i32* @top, align 4
  %sub46 = sub nsw i32 %52, 1
  %call47 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([4 x i8]* @.str2, i32 0, i32 0), i32 %sub46)
  ret i32 0
