
1
  %retval = alloca i32, align 4
  %i = alloca i32, align 4
  %i17 = alloca i32, align 4
  %agg.tmp = alloca %struct.point, align 8
  %coerce = alloca %struct.point, align 8
  %agg.tmp32 = alloca %struct.point, align 8
  %agg.tmp35 = alloca %struct.point, align 8
  %l = alloca i32, align 4
  %r = alloca i32, align 4
  store i32 0, i32* %retval
  %call = call i32 (i8*, ...)* @scanf(i8* getelementptr inbounds ([3 x i8]* @.str, i32 0, i32 0), i32* @n)
  store i32 1, i32* %i, align 4
  br label %for.cond

2
  %0 = load i32* %i, align 4
  %1 = load i32* @n, align 4
  %cmp = icmp sle i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

3
  %2 = load i32* %i, align 4
  %idxprom = sext i32 %2 to i64
  %arrayidx = getelementptr inbounds [1000100 x %struct.point]* @p, i32 0, i64 %idxprom
  %x = getelementptr inbounds %struct.point* %arrayidx, i32 0, i32 0
  %3 = load i32* %i, align 4
  %idxprom1 = sext i32 %3 to i64
  %arrayidx2 = getelementptr inbounds [1000100 x %struct.point]* @p, i32 0, i64 %idxprom1
  %y = getelementptr inbounds %struct.point* %arrayidx2, i32 0, i32 1
  %call3 = call i32 (i8*, ...)* @scanf(i8* getelementptr inbounds ([9 x i8]* @.str1, i32 0, i32 0), i64* %x, i64* %y)
  %4 = load i32* %i, align 4
  %idxprom4 = sext i32 %4 to i64
  %arrayidx5 = getelementptr inbounds [1000100 x %struct.point]* @p, i32 0, i64 %idxprom4
  %x6 = getelementptr inbounds %struct.point* %arrayidx5, i32 0, i32 0
  %5 = load i64* %x6, align 8
  %6 = load i32* %i, align 4
  %idxprom7 = sext i32 %6 to i64
  %arrayidx8 = getelementptr inbounds [1000100 x %struct.point]* @p, i32 0, i64 %idxprom7
  %x9 = getelementptr inbounds %struct.point* %arrayidx8, i32 0, i32 0
  %7 = load i64* %x9, align 8
  %mul = mul nsw i64 %5, %7
  %8 = load i32* %i, align 4
  %idxprom10 = sext i32 %8 to i64
  %arrayidx11 = getelementptr inbounds [1000100 x %struct.point]* @p, i32 0, i64 %idxprom10
  %y12 = getelementptr inbounds %struct.point* %arrayidx11, i32 0, i32 1
  %9 = load i64* %y12, align 8
  %sub = sub nsw i64 %9, %mul
  store i64 %sub, i64* %y12, align 8
  %10 = load i32* %i, align 4
  %inc = add nsw i32 %10, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

4
  %11 = load i32* @n, align 4
  %idx.ext = sext i32 %11 to i64
  %add.ptr = getelementptr inbounds %struct.point* getelementptr inbounds ([1000100 x %struct.point]* @p, i32 0, i32 0), i64 %idx.ext
  %add.ptr13 = getelementptr inbounds %struct.point* %add.ptr, i64 1
  call void @_ZSt4sortIP5pointEvT_S2_(%struct.point* getelementptr inbounds ([1000100 x %struct.point]* @p, i32 0, i64 1), %struct.point* %add.ptr13)
  %12 = load i32* @tp, align 4
  %inc14 = add nsw i32 %12, 1
  store i32 %inc14, i32* @tp, align 4
  %idxprom15 = sext i32 %inc14 to i64
  %arrayidx16 = getelementptr inbounds [1000100 x i32]* @st, i32 0, i64 %idxprom15
  store i32 1, i32* %arrayidx16, align 4
  store i32 2, i32* %i17, align 4
  br label %for.cond18

5
  %13 = load i32* %i17, align 4
  %14 = load i32* @n, align 4
  %cmp19 = icmp sle i32 %13, %14
  br i1 %cmp19, label %for.body20, label %for.end48

6
  br label %while.cond

7
  %15 = load i32* @tp, align 4
  %cmp21 = icmp sgt i32 %15, 1
  br i1 %cmp21, label %land.rhs, label %land.end

8
  %16 = load i32* @tp, align 4
  %sub22 = sub nsw i32 %16, 1
  %idxprom23 = sext i32 %sub22 to i64
  %arrayidx24 = getelementptr inbounds [1000100 x i32]* @st, i32 0, i64 %idxprom23
  %17 = load i32* %arrayidx24, align 4
  %idxprom25 = sext i32 %17 to i64
  %arrayidx26 = getelementptr inbounds [1000100 x %struct.point]* @p, i32 0, i64 %idxprom25
  %18 = load i32* @tp, align 4
  %idxprom27 = sext i32 %18 to i64
  %arrayidx28 = getelementptr inbounds [1000100 x i32]* @st, i32 0, i64 %idxprom27
  %19 = load i32* %arrayidx28, align 4
  %idxprom29 = sext i32 %19 to i64
  %arrayidx30 = getelementptr inbounds [1000100 x %struct.point]* @p, i32 0, i64 %idxprom29
  %20 = bitcast %struct.point* %agg.tmp to i8*
  %21 = bitcast %struct.point* %arrayidx30 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %20, i8* %21, i64 16, i32 8, i1 false)
  %22 = bitcast %struct.point* %agg.tmp to { i64, i64 }*
  %23 = getelementptr { i64, i64 }* %22, i32 0, i32 0
  %24 = load i64* %23, align 1
  %25 = getelementptr { i64, i64 }* %22, i32 0, i32 1
  %26 = load i64* %25, align 1
  %call31 = call { i64, i64 } @_ZNK5pointmiES_(%struct.point* %arrayidx26, i64 %24, i64 %26)
  %27 = bitcast %struct.point* %coerce to { i64, i64 }*
  %28 = getelementptr { i64, i64 }* %27, i32 0, i32 0
  %29 = extractvalue { i64, i64 } %call31, 0
  store i64 %29, i64* %28, align 1
  %30 = getelementptr { i64, i64 }* %27, i32 0, i32 1
  %31 = extractvalue { i64, i64 } %call31, 1
  store i64 %31, i64* %30, align 1
  %32 = load i32* %i17, align 4
  %idxprom33 = sext i32 %32 to i64
  %arrayidx34 = getelementptr inbounds [1000100 x %struct.point]* @p, i32 0, i64 %idxprom33
  %33 = load i32* @tp, align 4
  %idxprom36 = sext i32 %33 to i64
  %arrayidx37 = getelementptr inbounds [1000100 x i32]* @st, i32 0, i64 %idxprom36
  %34 = load i32* %arrayidx37, align 4
  %idxprom38 = sext i32 %34 to i64
  %arrayidx39 = getelementptr inbounds [1000100 x %struct.point]* @p, i32 0, i64 %idxprom38
  %35 = bitcast %struct.point* %agg.tmp35 to i8*
  %36 = bitcast %struct.point* %arrayidx39 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %35, i8* %36, i64 16, i32 8, i1 false)
  %37 = bitcast %struct.point* %agg.tmp35 to { i64, i64 }*
  %38 = getelementptr { i64, i64 }* %37, i32 0, i32 0
  %39 = load i64* %38, align 1
  %40 = getelementptr { i64, i64 }* %37, i32 0, i32 1
  %41 = load i64* %40, align 1
  %call40 = call { i64, i64 } @_ZNK5pointmiES_(%struct.point* %arrayidx34, i64 %39, i64 %41)
  %42 = bitcast %struct.point* %agg.tmp32 to { i64, i64 }*
  %43 = getelementptr { i64, i64 }* %42, i32 0, i32 0
  %44 = extractvalue { i64, i64 } %call40, 0
  store i64 %44, i64* %43, align 1
  %45 = getelementptr { i64, i64 }* %42, i32 0, i32 1
  %46 = extractvalue { i64, i64 } %call40, 1
  store i64 %46, i64* %45, align 1
  %47 = bitcast %struct.point* %agg.tmp32 to { i64, i64 }*
  %48 = getelementptr { i64, i64 }* %47, i32 0, i32 0
  %49 = load i64* %48, align 1
  %50 = getelementptr { i64, i64 }* %47, i32 0, i32 1
  %51 = load i64* %50, align 1
  %call41 = call i64 @_ZNK5pointmlES_(%struct.point* %coerce, i64 %49, i64 %51)
  %cmp42 = icmp sle i64 %call41, 0
  br label %land.end

9
  %52 = phi i1 [ false, %while.cond ], [ %cmp42, %land.rhs ]
  br i1 %52, label %while.body, label %while.end

10
  %53 = load i32* @tp, align 4
  %dec = add nsw i32 %53, -1
  store i32 %dec, i32* @tp, align 4
  br label %while.cond

11
  %54 = load i32* %i17, align 4
  %55 = load i32* @tp, align 4
  %inc43 = add nsw i32 %55, 1
  store i32 %inc43, i32* @tp, align 4
  %idxprom44 = sext i32 %inc43 to i64
  %arrayidx45 = getelementptr inbounds [1000100 x i32]* @st, i32 0, i64 %idxprom44
  store i32 %54, i32* %arrayidx45, align 4
  %56 = load i32* %i17, align 4
  %inc47 = add nsw i32 %56, 1
  store i32 %inc47, i32* %i17, align 4
  br label %for.cond18

12
  store i32 1, i32* %l, align 4
  %57 = load i32* @tp, align 4
  store i32 %57, i32* %r, align 4
  br label %while.cond49

13
  %58 = load i32* %l, align 4
  %59 = load i32* %r, align 4
  %cmp50 = icmp slt i32 %58, %59
  br i1 %cmp50, label %land.rhs51, label %land.end63

14
  %60 = load i32* %l, align 4
  %idxprom52 = sext i32 %60 to i64
  %arrayidx53 = getelementptr inbounds [1000100 x i32]* @st, i32 0, i64 %idxprom52
  %61 = load i32* %arrayidx53, align 4
  %idxprom54 = sext i32 %61 to i64
  %arrayidx55 = getelementptr inbounds [1000100 x %struct.point]* @p, i32 0, i64 %idxprom54
  %x56 = getelementptr inbounds %struct.point* %arrayidx55, i32 0, i32 0
  %62 = load i64* %x56, align 8
  %63 = load i32* %l, align 4
  %add = add nsw i32 %63, 1
  %idxprom57 = sext i32 %add to i64
  %arrayidx58 = getelementptr inbounds [1000100 x i32]* @st, i32 0, i64 %idxprom57
  %64 = load i32* %arrayidx58, align 4
  %idxprom59 = sext i32 %64 to i64
  %arrayidx60 = getelementptr inbounds [1000100 x %struct.point]* @p, i32 0, i64 %idxprom59
  %x61 = getelementptr inbounds %struct.point* %arrayidx60, i32 0, i32 0
  %65 = load i64* %x61, align 8
  %cmp62 = icmp eq i64 %62, %65
  br label %land.end63

15
  %66 = phi i1 [ false, %while.cond49 ], [ %cmp62, %land.rhs51 ]
  br i1 %66, label %while.body64, label %while.end66

16
  %67 = load i32* %l, align 4
  %inc65 = add nsw i32 %67, 1
  store i32 %inc65, i32* %l, align 4
  br label %while.cond49

17
  br label %while.cond67

18
  %68 = load i32* %r, align 4
  %69 = load i32* %l, align 4
  %cmp68 = icmp sgt i32 %68, %69
  br i1 %cmp68, label %land.rhs69, label %land.end82

19
  %70 = load i32* %r, align 4
  %idxprom70 = sext i32 %70 to i64
  %arrayidx71 = getelementptr inbounds [1000100 x i32]* @st, i32 0, i64 %idxprom70
  %71 = load i32* %arrayidx71, align 4
  %idxprom72 = sext i32 %71 to i64
  %arrayidx73 = getelementptr inbounds [1000100 x %struct.point]* @p, i32 0, i64 %idxprom72
  %x74 = getelementptr inbounds %struct.point* %arrayidx73, i32 0, i32 0
  %72 = load i64* %x74, align 8
  %73 = load i32* %r, align 4
  %sub75 = sub nsw i32 %73, 1
  %idxprom76 = sext i32 %sub75 to i64
  %arrayidx77 = getelementptr inbounds [1000100 x i32]* @st, i32 0, i64 %idxprom76
  %74 = load i32* %arrayidx77, align 4
  %idxprom78 = sext i32 %74 to i64
  %arrayidx79 = getelementptr inbounds [1000100 x %struct.point]* @p, i32 0, i64 %idxprom78
  %x80 = getelementptr inbounds %struct.point* %arrayidx79, i32 0, i32 0
  %75 = load i64* %x80, align 8
  %cmp81 = icmp eq i64 %72, %75
  br label %land.end82

20
  %76 = phi i1 [ false, %while.cond67 ], [ %cmp81, %land.rhs69 ]
  br i1 %76, label %while.body83, label %while.end85

21
  %77 = load i32* %r, align 4
  %dec84 = add nsw i32 %77, -1
  store i32 %dec84, i32* %r, align 4
  br label %while.cond67

22
  %78 = load i32* %r, align 4
  %79 = load i32* %l, align 4
  %sub86 = sub nsw i32 %78, %79
  %call87 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([4 x i8]* @.str2, i32 0, i32 0), i32 %sub86)
  ret i32 0
