
1
  %retval = alloca i32, align 4
  %argc.addr = alloca i32, align 4
  %argv.addr = alloca i8**, align 8
  %n = alloca i32, align 4
  %i = alloca i32, align 4
  %agg.tmp = alloca %class.anon, align 1
  %sz = alloca i32, align 4
  %i14 = alloca i32, align 4
  %agg.tmp26 = alloca %struct.point, align 8
  %agg.tmp30 = alloca %struct.point, align 8
  %agg.tmp34 = alloca %struct.point, align 8
  %agg.tmp37 = alloca %struct.point, align 8
  store i32 0, i32* %retval
  store i32 %argc, i32* %argc.addr, align 4
  store i8** %argv, i8*** %argv.addr, align 8
  %call = call i32 (i8*, ...)* @scanf(i8* getelementptr inbounds ([3 x i8]* @.str, i32 0, i32 0), i32* %n)
  store i32 1, i32* %i, align 4
  br label %for.cond

2
  %0 = load i32* %i, align 4
  %1 = load i32* %n, align 4
  %cmp = icmp sle i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

3
  %2 = load i32* %i, align 4
  %idxprom = sext i32 %2 to i64
  %arrayidx = getelementptr inbounds [100005 x %struct.point]* @p, i32 0, i64 %idxprom
  %x = getelementptr inbounds %struct.point* %arrayidx, i32 0, i32 0
  %3 = load i32* %i, align 4
  %idxprom1 = sext i32 %3 to i64
  %arrayidx2 = getelementptr inbounds [100005 x %struct.point]* @p, i32 0, i64 %idxprom1
  %y = getelementptr inbounds %struct.point* %arrayidx2, i32 0, i32 1
  %call3 = call i32 (i8*, ...)* @scanf(i8* getelementptr inbounds ([8 x i8]* @.str1, i32 0, i32 0), double* %x, double* %y)
  %4 = load i32* %i, align 4
  %idxprom4 = sext i32 %4 to i64
  %arrayidx5 = getelementptr inbounds [100005 x %struct.point]* @p, i32 0, i64 %idxprom4
  %x6 = getelementptr inbounds %struct.point* %arrayidx5, i32 0, i32 0
  %5 = load double* %x6, align 8
  %6 = load i32* %i, align 4
  %idxprom7 = sext i32 %6 to i64
  %arrayidx8 = getelementptr inbounds [100005 x %struct.point]* @p, i32 0, i64 %idxprom7
  %x9 = getelementptr inbounds %struct.point* %arrayidx8, i32 0, i32 0
  %7 = load double* %x9, align 8
  %mul = fmul double %5, %7
  %8 = load i32* %i, align 4
  %idxprom10 = sext i32 %8 to i64
  %arrayidx11 = getelementptr inbounds [100005 x %struct.point]* @p, i32 0, i64 %idxprom10
  %y12 = getelementptr inbounds %struct.point* %arrayidx11, i32 0, i32 1
  %9 = load double* %y12, align 8
  %sub = fsub double %9, %mul
  store double %sub, double* %y12, align 8
  %10 = load i32* %i, align 4
  %inc = add nsw i32 %10, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

4
  %11 = load i32* %n, align 4
  %idx.ext = sext i32 %11 to i64
  %add.ptr = getelementptr inbounds %struct.point* getelementptr inbounds ([100005 x %struct.point]* @p, i32 0, i32 0), i64 %idx.ext
  %add.ptr13 = getelementptr inbounds %struct.point* %add.ptr, i64 1
  call void @"_ZSt4sortIP5pointZ4mainE3$_0EvT_S3_T0_"(%struct.point* getelementptr inbounds ([100005 x %struct.point]* @p, i32 0, i64 1), %struct.point* %add.ptr13)
  store i32 0, i32* %sz, align 4
  store i32 1, i32* %i14, align 4
  br label %for.cond15

5
  %12 = load i32* %i14, align 4
  %13 = load i32* %n, align 4
  %cmp16 = icmp sle i32 %12, %13
  br i1 %cmp16, label %for.body17, label %for.end51

6
  %14 = load i32* %sz, align 4
  %tobool = icmp ne i32 %14, 0
  br i1 %tobool, label %land.lhs.true, label %if.end

7
  %15 = load i32* %i14, align 4
  %idxprom18 = sext i32 %15 to i64
  %arrayidx19 = getelementptr inbounds [100005 x %struct.point]* @p, i32 0, i64 %idxprom18
  %x20 = getelementptr inbounds %struct.point* %arrayidx19, i32 0, i32 0
  %16 = load double* %x20, align 8
  %17 = load i32* %sz, align 4
  %idxprom21 = sext i32 %17 to i64
  %arrayidx22 = getelementptr inbounds [100005 x %struct.point]* @ans, i32 0, i64 %idxprom21
  %x23 = getelementptr inbounds %struct.point* %arrayidx22, i32 0, i32 0
  %18 = load double* %x23, align 8
  %cmp24 = fcmp oeq double %16, %18
  br i1 %cmp24, label %if.then, label %if.end

8
  %19 = load i32* %sz, align 4
  %dec = add nsw i32 %19, -1
  store i32 %dec, i32* %sz, align 4
  br label %if.end

9
  br label %while.cond

10
  %20 = load i32* %sz, align 4
  %cmp25 = icmp sgt i32 %20, 1
  br i1 %cmp25, label %land.rhs, label %land.end

11
  %21 = load i32* %sz, align 4
  %sub27 = sub nsw i32 %21, 1
  %idxprom28 = sext i32 %sub27 to i64
  %arrayidx29 = getelementptr inbounds [100005 x %struct.point]* @ans, i32 0, i64 %idxprom28
  %22 = bitcast %struct.point* %agg.tmp26 to i8*
  %23 = bitcast %struct.point* %arrayidx29 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %22, i8* %23, i64 16, i32 8, i1 false)
  %24 = load i32* %i14, align 4
  %idxprom31 = sext i32 %24 to i64
  %arrayidx32 = getelementptr inbounds [100005 x %struct.point]* @p, i32 0, i64 %idxprom31
  %25 = bitcast %struct.point* %agg.tmp30 to i8*
  %26 = bitcast %struct.point* %arrayidx32 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %25, i8* %26, i64 16, i32 8, i1 false)
  %27 = bitcast %struct.point* %agg.tmp26 to { double, double }*
  %28 = getelementptr { double, double }* %27, i32 0, i32 0
  %29 = load double* %28, align 1
  %30 = getelementptr { double, double }* %27, i32 0, i32 1
  %31 = load double* %30, align 1
  %32 = bitcast %struct.point* %agg.tmp30 to { double, double }*
  %33 = getelementptr { double, double }* %32, i32 0, i32 0
  %34 = load double* %33, align 1
  %35 = getelementptr { double, double }* %32, i32 0, i32 1
  %36 = load double* %35, align 1
  %call33 = call double @_Z5slope5pointS_(double %29, double %31, double %34, double %36)
  %37 = load i32* %sz, align 4
  %idxprom35 = sext i32 %37 to i64
  %arrayidx36 = getelementptr inbounds [100005 x %struct.point]* @ans, i32 0, i64 %idxprom35
  %38 = bitcast %struct.point* %agg.tmp34 to i8*
  %39 = bitcast %struct.point* %arrayidx36 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %38, i8* %39, i64 16, i32 8, i1 false)
  %40 = load i32* %sz, align 4
  %sub38 = sub nsw i32 %40, 1
  %idxprom39 = sext i32 %sub38 to i64
  %arrayidx40 = getelementptr inbounds [100005 x %struct.point]* @ans, i32 0, i64 %idxprom39
  %41 = bitcast %struct.point* %agg.tmp37 to i8*
  %42 = bitcast %struct.point* %arrayidx40 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %41, i8* %42, i64 16, i32 8, i1 false)
  %43 = bitcast %struct.point* %agg.tmp34 to { double, double }*
  %44 = getelementptr { double, double }* %43, i32 0, i32 0
  %45 = load double* %44, align 1
  %46 = getelementptr { double, double }* %43, i32 0, i32 1
  %47 = load double* %46, align 1
  %48 = bitcast %struct.point* %agg.tmp37 to { double, double }*
  %49 = getelementptr { double, double }* %48, i32 0, i32 0
  %50 = load double* %49, align 1
  %51 = getelementptr { double, double }* %48, i32 0, i32 1
  %52 = load double* %51, align 1
  %call41 = call double @_Z5slope5pointS_(double %45, double %47, double %50, double %52)
  %cmp42 = fcmp oge double %call33, %call41
  br label %land.end

12
  %53 = phi i1 [ false, %while.cond ], [ %cmp42, %land.rhs ]
  br i1 %53, label %while.body, label %while.end

13
  %54 = load i32* %sz, align 4
  %dec43 = add nsw i32 %54, -1
  store i32 %dec43, i32* %sz, align 4
  br label %while.cond

14
  %55 = load i32* %sz, align 4
  %inc44 = add nsw i32 %55, 1
  store i32 %inc44, i32* %sz, align 4
  %idxprom45 = sext i32 %inc44 to i64
  %arrayidx46 = getelementptr inbounds [100005 x %struct.point]* @ans, i32 0, i64 %idxprom45
  %56 = load i32* %i14, align 4
  %idxprom47 = sext i32 %56 to i64
  %arrayidx48 = getelementptr inbounds [100005 x %struct.point]* @p, i32 0, i64 %idxprom47
  %57 = bitcast %struct.point* %arrayidx46 to i8*
  %58 = bitcast %struct.point* %arrayidx48 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %57, i8* %58, i64 16, i32 8, i1 false)
  %59 = load i32* %i14, align 4
  %inc50 = add nsw i32 %59, 1
  store i32 %inc50, i32* %i14, align 4
  br label %for.cond15

15
  %60 = load i32* %sz, align 4
  %sub52 = sub nsw i32 %60, 1
  %call53 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([4 x i8]* @.str2, i32 0, i32 0), i32 %sub52)
  ret i32 0
