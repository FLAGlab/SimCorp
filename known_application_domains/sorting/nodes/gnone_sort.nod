
1
  %retval = alloca i32, align 4
  %a = alloca [5 x i32], align 16
  %n = alloca i32, align 4
  %i = alloca i32, align 4
  %t = alloca i32, align 4
  store i32 0, i32* %retval
  %0 = bitcast [5 x i32]* %a to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %0, i8* bitcast ([5 x i32]* @_ZZ4mainE1a to i8*), i64 20, i32 16, i1 false)
  store i32 5, i32* %n, align 4
  store i32 0, i32* %i, align 4
  br label %while.cond

2
  %1 = load i32* %i, align 4
  %2 = load i32* %n, align 4
  %cmp = icmp slt i32 %1, %2
  br i1 %cmp, label %while.body, label %while.end

3
  %3 = load i32* %i, align 4
  %cmp1 = icmp eq i32 %3, 0
  br i1 %cmp1, label %if.then, label %lor.lhs.false

4
  %4 = load i32* %i, align 4
  %sub = sub nsw i32 %4, 1
  %idxprom = sext i32 %sub to i64
  %arrayidx = getelementptr inbounds [5 x i32]* %a, i32 0, i64 %idxprom
  %5 = load i32* %arrayidx, align 4
  %6 = load i32* %i, align 4
  %idxprom2 = sext i32 %6 to i64
  %arrayidx3 = getelementptr inbounds [5 x i32]* %a, i32 0, i64 %idxprom2
  %7 = load i32* %arrayidx3, align 4
  %cmp4 = icmp sle i32 %5, %7
  br i1 %cmp4, label %if.then, label %if.else

5
  %8 = load i32* %i, align 4
  %inc = add nsw i32 %8, 1
  store i32 %inc, i32* %i, align 4
  br label %if.end

6
  %9 = load i32* %i, align 4
  %sub5 = sub nsw i32 %9, 1
  %idxprom6 = sext i32 %sub5 to i64
  %arrayidx7 = getelementptr inbounds [5 x i32]* %a, i32 0, i64 %idxprom6
  %10 = load i32* %arrayidx7, align 4
  store i32 %10, i32* %t, align 4
  %11 = load i32* %i, align 4
  %idxprom8 = sext i32 %11 to i64
  %arrayidx9 = getelementptr inbounds [5 x i32]* %a, i32 0, i64 %idxprom8
  %12 = load i32* %arrayidx9, align 4
  %13 = load i32* %i, align 4
  %sub10 = sub nsw i32 %13, 1
  %idxprom11 = sext i32 %sub10 to i64
  %arrayidx12 = getelementptr inbounds [5 x i32]* %a, i32 0, i64 %idxprom11
  store i32 %12, i32* %arrayidx12, align 4
  %14 = load i32* %t, align 4
  %15 = load i32* %i, align 4
  %idxprom13 = sext i32 %15 to i64
  %arrayidx14 = getelementptr inbounds [5 x i32]* %a, i32 0, i64 %idxprom13
  store i32 %14, i32* %arrayidx14, align 4
  %16 = load i32* %i, align 4
  %dec = add nsw i32 %16, -1
  store i32 %dec, i32* %i, align 4
  br label %if.end

7
  br label %while.cond

8
  ret i32 0
